{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Sovelluksen fronend toimii puhelinluettelon näyttämisen osalta päivitetyn palvelimen kanssa. Jotta luetteloon voitaisiin lisätä henkilöitä, tulee backendiin toteuttaa kirjaantuminen.</p>\n<h3>Käyttän kirjautuminen</h3>\n<p>Toteutetaan kirjautuminen yksinkertaisen lomakkeen avulla. Jos</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setUsername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>password<span class=\"token punctuation\">,</span> setPassword<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> submit <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> username<span class=\"token punctuation\">,</span> password <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      props<span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      props<span class=\"token punctuation\">.</span><span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>submit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          username <span class=\"token operator\">&lt;</span>input\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          password <span class=\"token operator\">&lt;</span>input\n            type<span class=\"token operator\">=</span><span class=\"token string\">'password'</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">'submit'</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> LoginForm\n\n### cachen päivitys\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"tasks\"</span><span class=\"token operator\">></span>\n\n### Tehtäviä\n\n#### <span class=\"token constant\">DEPRECATED</span><span class=\"token punctuation\">:</span> Genren kirjat\n\nLaajenna sovellustasi siten<span class=\"token punctuation\">,</span> että kirjojen näkymästä voidaan rajata näytettävä kirjalista ainoastaan niihin jotka kuuluvat valittuun genreen<span class=\"token punctuation\">.</span> Toteutuksesi voi näyttää seuraavalta<span class=\"token punctuation\">:</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>images<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token operator\">/</span><span class=\"token number\">19.</span>png<span class=\"token punctuation\">)</span>\n\n#### <span class=\"token constant\">DEPRECATED</span><span class=\"token punctuation\">:</span> Genren kirjat GraphQL<span class=\"token punctuation\">:</span>llä\n\nTietyn genren kirjoihin rajoittamisen voi tehdä kokonaan React<span class=\"token operator\">-</span>sovelluksen puolella<span class=\"token punctuation\">.</span> Voit merkitä tämän tehtävän<span class=\"token punctuation\">,</span> jos rajaat näytettävät kirjat tahtävässä <span class=\"token number\">8.5</span> palvelimeen toteutetun suoran GraphQ<span class=\"token operator\">-</span>kyselyn avulla<span class=\"token punctuation\">.</span> \n\n<span class=\"token constant\">T</span>ämä tehtävä voi olla haastava ja niin kurssin tässä vaiheessa jo kuuluukin olla<span class=\"token punctuation\">.</span> Muutama vihje\n<span class=\"token operator\">-</span> komponetin <span class=\"token operator\">&lt;</span>i<span class=\"token operator\">></span>Query<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span> tai hookin <span class=\"token operator\">&lt;</span>i<span class=\"token operator\">></span>useQuery<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span> käyttö kannattaa kirjalistan osalta sillä kysely on pystyttävä tekemään käyttäjän valitessa haluamansa genren\n<span class=\"token operator\">-</span> GraphQL<span class=\"token operator\">-</span>kyselyjen tuloksia kannatta joskus tallentaan komponentin tilaan\n<span class=\"token operator\">-</span> huomaa<span class=\"token punctuation\">,</span> että voit tehdä GraphQL<span class=\"token operator\">-</span>kyselyjä <span class=\"token operator\">&lt;</span>i<span class=\"token operator\">></span>useEffect<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span><span class=\"token operator\">-</span>hookissa\n<span class=\"token operator\">-</span> <span class=\"token operator\">&lt;</span>i<span class=\"token operator\">></span>useEffect<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span><span class=\"token operator\">-</span>hookin <span class=\"token punctuation\">[</span>toisesta parametrista<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>reactjs<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>hooks<span class=\"token operator\">-</span>reference<span class=\"token punctuation\">.</span>html#conditionally<span class=\"token operator\">-</span>firing<span class=\"token operator\">-</span>an<span class=\"token operator\">-</span>effect<span class=\"token punctuation\">)</span> voi olla tehtävässä apua<span class=\"token punctuation\">,</span> se tosin riippuu käyttämästäsi lähestymistavasta<span class=\"token punctuation\">.</span>\n\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>","frontmatter":{"mainImage":{"publicURL":"/static/part-8-1f98236965546b36c2a293574ec8b02a.svg"},"part":8,"letter":"d"}}},"pageContext":{"part":8,"letter":"d"}}