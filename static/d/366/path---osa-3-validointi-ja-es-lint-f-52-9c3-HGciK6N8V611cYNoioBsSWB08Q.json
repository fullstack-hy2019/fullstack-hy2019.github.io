{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Sovelluksen tietokantaan tallettamalle datan muodolle on usein tarve asettaa jotain ehtoja. Sovelluksemme ei esim. hyväksy muistiinpanoja, joiden sisältö eli <i>content</i> kenttä puuttuu. Muistiinpanon oikeellisuus tallennetaan sen luovassa metodissa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>content <span class=\"token operator\">===</span> undefined<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> <span class=\"token string\">'content missing'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Eli jos muistiinpanolla ei ole kenttää <i>content</i>, vastataan pyyntöön statuskoodilla <i>400 bad request</i>. </p>\n<p>Routejen tapahtumakäsittelijöissä tehtävää tarkastusta järkevämpi tapa tietokantaan talletettavan tiedon oikean muodon määrittelylle ja tarkastamiselle on mongoosen <a href=\"https://mongoosejs.com/docs/validation.html\">validointitoiminnallisuuden</a> käyttö.</p>\n<p>Kullekin talletettavan datan kentälle voidaan määritellä validointisääntöjä skeemassa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> noteSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mongoose<span class=\"token punctuation\">.</span>Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  content<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    type<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    minlength<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  date<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> </span><span class=\"gatsby-highlight-code-line\">    type<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    required<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>  important<span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Kentän <i>content</i> pituuden vaaditaan nyt olevan vähintään 5 merkkiä. Kentälle <i>data</i> taas on asetettu ehdoksi että sillä on oltava joku arvo, eli kenttä ei voi olla tyhjä. Kentälle <i>important</i> ei ole asetettu mitään ehtoa, joten se on määritelty edelleen yksinkertaisemmassa muodossa.</p>\n<p>Esimerkissä käytetyt validaattorit <i>minlength</i> ja <i>required</i> ovat mongooseen <a href=\"https://mongoosejs.com/docs/validation.html#built-in-validators\">sisäänrakennettuja</a> validointisääntöjä. Mongoosen <a href=\"https://mongoosejs.com/docs/validation.html#custom-validators\">custom validator</a> -ominaisuus mahdollistaa mielivaltaisten validaattorien toteuttamisen jos valmiiden joukosta ei löydy tarkoitukseen sopivaa.</p>\n<p>Jos tietokantaan yritetään tallettaa validointisäännön rikkova olio, heittää tallennusoperaatio poikkeuksen. Muutetaan uuden muistiinpanon luomisesta huolehtivaa käsittelijää siten, että se välittää mahdollisen poikkeuksen virheenkäsittelijämiddlewaren huolehdittavaksi:  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body\n\n  <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    content<span class=\"token punctuation\">:</span> body<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n    important<span class=\"token punctuation\">:</span> body<span class=\"token punctuation\">.</span>important <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    date<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  note<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>savedNote <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedNote<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Laajennetaan virheenkäsittelijää huomioimaan validointivirheet:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">errorHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'CastError'</span> <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">==</span> <span class=\"token string\">'ObjectId'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> <span class=\"token string\">'malformatted id'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ValidationError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> error<span class=\"token punctuation\">.</span>message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Validoinnin epäonnistuessa palautetaan validaattorin oletusarvoinen virheviesti:</p>\n<picture><img src=\"/static/6beb35ed56d2e06e0eda3e36dea9f426/14be6/50.png\" srcset=\"/static/6beb35ed56d2e06e0eda3e36dea9f426/4cce7/50.png 200w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/bae5f/50.png 400w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/14be6/50.png 800w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/1b35a/50.png 1200w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/9ee03/50.png 1600w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/d2375/50.png 1670w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Promisejen ketjutus</h3>\n<p>Useat routejen tapahtumankäsittelijöistä muuttivat palautettavan datan oikeaan formaattiin kutsumalla palautetuille olioille niiden metodia <em>toJSON</em>. Esimimerkiksi uuden muistiinpanon luomisessa metodia kutsutaan <em>then</em>:in parametrina palauttamalle oliolle:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  note<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>savedNote <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedNote<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Voisimme tehdä saman myös hieman tyylikkäämmin <a href=\"https://javascript.info/promise-chaining\">promiseja ketjuttamalla</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  note\n    <span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>savedNote <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> savedNote<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>savedAndFormattedNote <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedAndFormattedNote<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> </span>    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Eli ensimmäisen <em>then</em>:in takaisinkutsussa otamme mongoosen palauttaman olion <em>savedNote</em> ja formatoimme sen. Operaation tulos palautetaan returnilla. Kuten osassa 2 <a href=\"/osa2/palvelimella_olevan_datan_muokkaaminen#palvelimen-kanssa-tapahtuvan-kommunikoinnin-eristaminen-omaan-moduuliin\">todettiin</a>, promisen then-metodi palauttaa myös promisen. Eli kun palautamme <em>savedNote.toJSON()</em>:n takaisinkutsufunktiosta, syntyy promise, jonka arvona on formatoitu muistiinpano. Pääsemme käsiksi arvoon rekisteröimällä <em>then</em>-kutsulla uuden tapahtumankäsittelijän.</p>\n<p>Selviämme vieläkin tiiviimmällä koodilla käyttämällä nuolifunktion lyhempää muotoa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  note\n    <span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>savedNote <span class=\"token operator\">=></span> savedNote<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>savedAndFormattedNote <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedAndFormattedNote<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Esimerkkimme tapauksessa promisejen ketjutuksesta ei ole suurta hyötyä. Tilanne alkaa muuttua jos joudumme tekemään useita peräkkäisiä asynkronisia operaatiota. Emme kuitenkaan mene asiaan sen tarkemmin. Tutustumme seuraavassa osassa Javascriptin <i>async/await</i>-syntaksiin, jota käyttämällä peräkkäisten asynkronisten operaatioiden tekeminen helpottuu olellisesti.</p>\n<h3>Tietokantaa käyttävän version vieminen tuotantoon</h3>\n<p>Sovelluksen pitäisi toimia tuotannossa, eli herokussa lähes sellaisenaan. Frontendin muutosten takia on tehtävä siitä uusi tuotantoversio ja kopioitava se backendiin. Toinen muutos on se, että <i>emme halua</i> herokussa olevan version käyttävän tiedostossa <i>.env</i> määriteltyjä ympäristömuuttujia. Tämän takia tiedoston <i>index.js</i> alussa oleva rivi</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>on muutettava muotoon</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nyt dotenvissä olevat ympäristömuuttujat otetaan käyttöön ainoastaan silloin kun sovellus ei ole <i>production</i>- eli tuotantomoodissa (kuten esim. Herokussa).</p>\n<p>Tietokantaurlin kertovan ympäristömuuttujan arvo asetetaan Herokuun komennolla <em>heroku config:set</em></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">heroku config:set MONGODB_URI<span class=\"token operator\">=</span>mongodb://fullstack:secred@ds161224.mlab.com:61224/fullstack2019-notes</code></pre></div>\n<p>Sovelluksen pitäisi toimia muutosten jälkeen. Aina kaikki ei kuitenkaan mene suunnitelmien mukaan. Jos ongelmia ilmenee, <i>heroku logs</i> auttaa. Oma sovellukseni ei toiminut muutoksen jälkeen. Loki kertoi seuraavaa</p>\n<picture><img src=\"/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/14be6/51.png\" srcset=\"/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/4cce7/51.png 200w,\n/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/bae5f/51.png 400w,\n/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/14be6/51.png 800w,\n/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/1b35a/51.png 1200w,\n/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/9ee03/51.png 1600w,\n/static/a4a3a2dbcd6d8ece7054b7b2c59fa987/a3b7c/51.png 1602w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>eli tietokannan osoite olikin jostain syystä määrittelemätön. Komento <i>heroku config</i> paljasti että olin vahingossa määritellyt ympäristömuuttujan <em>MONGO</em>URL_ kun koodi oletti sen olevan nimeltään <em>MONGODB</em>URI_.</p>\n<p>Sovelluksen tämän hetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2019/part3-notes-backend/tree/part3-5\">githubissa</a>, branchissä <i>part3-5</i>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Tehtäviä</h3>\n<h4>3.19: puhelinluettelo ja tietokanta, osa 7</h4>\n<p>Toteuta sovelluksellesi validaatio, jotk, että backendiin voi lisätä yhdelle nimelle ainoastaan yhden numeron. Frontendin nykyisestä versiosta ei duplikaatteja voi luoda, mutta suoraan Postmanilla tai VS Coden REST clientillä se onnistuu.</p>\n<p>Jos HTTP POST -pyyntö yrittää lisätä nimeä, joka on jo puhelinluettelossa, tulee vastata sopivalla statuskoodilla ja lisätä vastaukseen asianmukainen virheilmoitus.</p>\n<h4>3.20*: puhelinluettelo ja tietokanta, osa 8</h4>\n<p>Toteuta sovelluksellesi validaatiot, jotka huolehtivat, että backendiin voi lisätä yhdelle nimelle ainoastaan yhden numeron. Frontendin nykyisestä versiosta ei duplikaatteja voi luoda, mutta suoraan Postmanilla tai VS Coden REST clientillä se onnistuu.</p>\n<p>Jos HTTP POST -pyyntö yrittää lisätä nimeä, joka on jo puhelinluettelossa, tulee vastata sopivalla statuskoodilla ja lisätä vastaukseen asianmukainen virheilmoitus.</p>\n<h4>3.21 tietokantaa käyttävä versio internettiin</h4>\n<p>Generoi päivitetystä sovelluksesta \"full stack\"-versio, eli tee frontendista uusi production build ja kopioi se backendin repositorioon. Varmista että kaikki toimii paikallisesti käyttämällä koko sovellusta backendin osoitteesta <a href=\"https://localhost:3001\">https://localhost:3001</a>.</p>\n<p>Pushaa uusi versio Herokuun ja varmista, että kaikki toimii myös siellä.</p>\n</div>\n<div class=\"content\">\n<h3>Lint</h3>\n<p>Ennen osan lopetusta katsomme vielä nopeasti paitsioon jäänyttä tärkeää työkalua <a href=\"https://en.wikipedia.org/wiki/Lint_(software)\">lintiä</a>. Wikipedian sanoin:</p>\n<blockquote>\n<p>Generically, lint or a linter is any tool that detects and flags errors in programming languages, including stylistic errors. The term lint-like behavior is sometimes applied to the process of flagging suspicious language usage. Lint-like tools generally perform static analysis of source code.</p>\n</blockquote>\n<p>Staattisesti tyypitetyissä, käännettävissä kielissä esim. Javassa ohjelmointiympäristöt, kuten NetBeans osaavat huomautella monista koodiin liittyvistä asioista, sellaisistakin, jotka eivät ole välttämättä käännösvirheitä. Erilaisten <a href=\"https://en.wikipedia.org/wiki/Static_program_analysis\">staattisen analyysin</a> lisätyökalujen, kuten <a href=\"http://checkstyle.sourceforge.net/\">checkstylen</a> avulla voidaan vielä laajentaa Javassa huomautettavien asioiden määrää koskemaan koodin tyylillisiä seikkoja, esim. sisentämistä.</p>\n<p>Javascript-maailmassa tämän hetken johtava työkalu staattiseen analyysiin, eli \"linttaukseen\" on <a href=\"https://eslint.org/\">ESlint</a>.</p>\n<p>Asennetaan ESlint backendiin kehitysaikaiseksi riippuvuudeksi komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint --save-dev</code></pre></div>\n<p>Tämän jälkeen voidaan muodostaa alustava ESlint-konfiguraatio komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node_modules/.bin/eslint --init</code></pre></div>\n<p>Vastaillaan kysymyksiin:</p>\n<picture><img src=\"/static/4ed4b48465d48df517158501c0be187e/14be6/24.png\" srcset=\"/static/4ed4b48465d48df517158501c0be187e/4cce7/24.png 200w,\n/static/4ed4b48465d48df517158501c0be187e/bae5f/24.png 400w,\n/static/4ed4b48465d48df517158501c0be187e/14be6/24.png 800w,\n/static/4ed4b48465d48df517158501c0be187e/1b35a/24.png 1200w,\n/static/4ed4b48465d48df517158501c0be187e/b8e67/24.png 1260w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Konfiguraatiot tallentuvat tiedostoon <em>.eslintrc.js</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"extends\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"indent\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"linebreak-style\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"unix\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"quotes\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"single\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"semi\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"never\"</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Muutetaan heti konfiguraatioista sisennystä määrittelevä sääntö, siten että sisennystaso on 2 välilyöntiä</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;indent&quot;: [\n    &quot;error&quot;,\n    2\n],</code></pre></div>\n<p>Esim tiedoston <em>index.js</em> tarkastus tapahtuu komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node_modules/.bin/eslint index.js</code></pre></div>\n<p>Kannattaa ehkä tehdä linttaustakin varten <em>npm-skripti</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n  // <span class=\"token punctuation\">..</span>.\n  <span class=\"token string\">\"scripts\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"node index.js\"</span>,\n    <span class=\"token string\">\"watch\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"nodemon index.js\"</span>,\n    <span class=\"token string\">\"lint\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"eslint .\"</span>\n  <span class=\"token punctuation\">}</span>,\n  // <span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nyt komennot <em>npm run lint</em> suorittaa tarkastukset koko projektille.</p>\n<p>Myös hakemistossa <em>build</em> oleva frontendin tuotantoversio tulee näin tarkastettua. Sitä emme kuitenkaan halua, eli tehdään projektin juureen tiedosto <a href=\"https://eslint.org/docs/user-guide/configuring#ignoring-files-and-directories\">.eslintignore</a> ja sille seuraava sisältö</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">build</code></pre></div>\n<p>Näin koko hakemiston <em>build</em> sisältö jätetään huomioimatta linttauksessa.</p>\n<p>Lintillä on jonkin verran huomautettavaa koodistamme:</p>\n<picture><img src=\"/static/085ad5ec3eea8cc37f26440b8ddf8ab5/14be6/22.png\" srcset=\"/static/085ad5ec3eea8cc37f26440b8ddf8ab5/4cce7/22.png 200w,\n/static/085ad5ec3eea8cc37f26440b8ddf8ab5/bae5f/22.png 400w,\n/static/085ad5ec3eea8cc37f26440b8ddf8ab5/14be6/22.png 800w,\n/static/085ad5ec3eea8cc37f26440b8ddf8ab5/1b35a/22.png 1200w,\n/static/085ad5ec3eea8cc37f26440b8ddf8ab5/9f651/22.png 1372w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Ei kuitenkaan korjata ongelmia vielä.</p>\n<p>Parempi vaihtoehto kuin linttauksen suorittaminen komentoriviltä on konfiguroida editorille <em>lint-plugin</em>, joka suorittaa linttausta koko ajan. Näin pääset korjaamaan pienet virheet välittömästi. Tietoja esim. Visual Studion ESlint-pluginsta <a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">täällä</a>.</p>\n<p>VS Coden ESlint-plugin alleviivaa tyylisääntöjä rikkovat kohdat punaisella:</p>\n<picture><img src=\"/static/139d9f0795f4edb6d7fbc1da5c3e26e2/14be6/23.png\" srcset=\"/static/139d9f0795f4edb6d7fbc1da5c3e26e2/4cce7/23.png 200w,\n/static/139d9f0795f4edb6d7fbc1da5c3e26e2/bae5f/23.png 400w,\n/static/139d9f0795f4edb6d7fbc1da5c3e26e2/14be6/23.png 800w,\n/static/139d9f0795f4edb6d7fbc1da5c3e26e2/1b35a/23.png 1200w,\n/static/139d9f0795f4edb6d7fbc1da5c3e26e2/798cb/23.png 1362w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Näin ongelmat on helppo korjata koodiin heti.</p>\n<p>ESlintille on määritelty suuri määrä <a href=\"https://eslint.org/docs/rules/\">sääntöjä</a>, joita on helppo ottaa käyttöön muokkaamalla tiedostoa <em>.eslintrc.js</em>.</p>\n<p>Otetaan käyttöön sääntö <a href=\"https://eslint.org/docs/rules/eqeqeq\">eqeqeq</a> joka varoittaa, jos koodissa yhtäsuuruutta verrataan muuten kuin käyttämällä kolmea = -merkkiä. Sääntö lisätään konfiguraatiotiedostoon kentän <em>rules</em> alle.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"rules\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n  // <span class=\"token punctuation\">..</span>.\n  <span class=\"token string\">\"eqeqeq\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"error\"</span>\n<span class=\"token punctuation\">}</span>,</code></pre></div>\n<p>Tehdään samalla muutama muukin muutos tarkastettaviin sääntöihin.</p>\n<p>Estetään rivien lopussa olevat <a href=\"https://eslint.org/docs/rules/no-trailing-spaces\">turhat välilyönnit</a>, vaaditaan että <a href=\"https://eslint.org/docs/rules/object-curly-spacing\">aaltosulkeiden edessä/jälkeen on aina välilyönti</a> ja vaaditaan myös konsistenttia välilyöntien käyttöä <a href=\"https://eslint.org/docs/rules/arrow-spacing\">nuolifunktioiden parametrien suhteen</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"rules\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n  // <span class=\"token punctuation\">..</span>.\n  <span class=\"token string\">\"eqeqeq\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"error\"</span>,\n  <span class=\"token string\">\"no-trailing-spaces\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"error\"</span>,\n  <span class=\"token string\">\"object-curly-spacing\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"error\"</span>, <span class=\"token string\">\"always\"</span>\n  <span class=\"token punctuation\">]</span>,\n  <span class=\"token string\">\"arrow-spacing\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"error\"</span>, <span class=\"token punctuation\">{</span> <span class=\"token string\">\"before\"</span><span class=\"token keyword\">:</span> true, <span class=\"token string\">\"after\"</span><span class=\"token keyword\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>,</code></pre></div>\n<p>Oletusarvoinen konfiguraatiomme ottaa käyttöön joukon valmiiksi määriteltyjä sääntöjä <em>eslint:recommended</em></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"extends\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"eslint:recommended\"</span>,</code></pre></div>\n<p>Mukana on myös <em>console.log</em>-komennoista varoittava sääntö-\nYksittäisen sääntö on helppo kytkeä <a href=\"https://eslint.org/docs/user-guide/configuring#configuring-rules\">pois päältä</a> määrittelemällä sen \"arvoksi\" konfiguraatiossa 0. Tehdään toistaiseksi näin säännölle <em>no-console</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"rules\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n  // <span class=\"token punctuation\">..</span>.\n  <span class=\"token string\">\"eqeqeq\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"error\"</span>,\n  <span class=\"token string\">\"no-trailing-spaces\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"error\"</span>,\n  <span class=\"token string\">\"object-curly-spacing\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"error\"</span>, <span class=\"token string\">\"always\"</span>\n  <span class=\"token punctuation\">]</span>,\n  <span class=\"token string\">\"arrow-spacing\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"error\"</span>, <span class=\"token punctuation\">{</span> <span class=\"token string\">\"before\"</span><span class=\"token keyword\">:</span> true, <span class=\"token string\">\"after\"</span><span class=\"token keyword\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>,\n  <span class=\"token string\">\"no-console\"</span><span class=\"token keyword\">:</span> 0\n<span class=\"token punctuation\">}</span>,</code></pre></div>\n<p><strong>HUOM</strong> kun teet muutoksia tiedostoon <em>.eslintrc.js</em>, kannattaa muutosten jälkeen suorittaa linttaus komentoriviltä ja varmistaa että konfiguraatio ei ole viallinen:</p>\n<picture><img src=\"/static/ad49f0631764e2754c165da67027e416/14be6/25.png\" srcset=\"/static/ad49f0631764e2754c165da67027e416/4cce7/25.png 200w,\n/static/ad49f0631764e2754c165da67027e416/bae5f/25.png 400w,\n/static/ad49f0631764e2754c165da67027e416/14be6/25.png 800w,\n/static/ad49f0631764e2754c165da67027e416/1b35a/25.png 1200w,\n/static/ad49f0631764e2754c165da67027e416/9ee03/25.png 1600w,\n/static/ad49f0631764e2754c165da67027e416/443cd/25.png 1634w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Jos konfiguraatiossa on jotain vikaa, voi editorin lint-plugin näyttää mitä sattuu.</p>\n<p>Monissa yrityksissä on tapana määritellä yrityksen laajuiset koodausstandardit ja näiden käyttöä valvova ESlint-konfiguraatio. Pyörää ei kannata välttämättä keksiä uudelleen ja voi olla hyvä idea ottaa omaan projektiin joku käyttöön jossain muualla hyväksi havaittu konfiguraatio. Viime aikoina monissa projekteissa on omaksuttu AirBnB:n <a href=\"https://github.com/airbnb/javascript\">Javascript</a>-tyyliohjeet ottamalla käyttöön firman määrittelemä <a href=\"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb\">ESLint</a>-konfiguraatio.</p>\n<p>Sovelluksen tämän hetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/FullStack-HY/part3-notes-backend/tree/part3-5\">githubissa</a>, tagissa <em>part3-5</em>.</p>\n</div>\n<h3>Tehtäviä</h3>\n<div class=\"tasks\">\n<h4>3.22: lint-konfiguraatio</h4>\n<p>Ota sovellukseesi käyttöön ESlint.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-3-6502baf3ac1171cebf38f6bc8b3a36dc.svg"},"part":3,"letter":"d"}}},"pageContext":{"part":3,"letter":"d"}}