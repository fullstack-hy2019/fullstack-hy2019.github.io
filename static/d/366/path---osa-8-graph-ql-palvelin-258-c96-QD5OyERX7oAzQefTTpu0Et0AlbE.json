{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Tälläkin kurssilla moneen kertaan käytetty REST on ollut pitkään vallitseva tapa toteuttaa palvelimen selaimelle tarjoama rajapinta ja yleensäkin verkossa toimivien sovellusten välinen integraatio.</p>\n<p>RESTin rinnalle selaimessa ja mobiililaitteessa toimivan logiikan ja palvelimien väliseen kommunikointiin on viime vuosina noussut alunperin Facebookin kehittämä <a href=\"http://graphql.org/\">GraphQL</a>.</p>\n<p>GraphQL on filosofialtaan todella erilainen RESTiin verrattuna. REST on <i>resurssipohjainen</i>, jokaisella resurssilla, esim. <i>käyttäjällä</i> on oma sen identifioiva osoite, esim. <i>/users/10</i>, ja kaikki resursseille tehtävät operaatiot toteutetaan tekemällä URL:ille kohdistuvia pyyntöjä, joiden toiminta määrittyy käytetyn HTTP-metodin avulla.</p>\n<p>RESTin resurssiperustaisuus toimii hyvin useissa tapauksissa, joissain tapauksissa se voi kuitenkin olla hieman kankea.</p>\n<p>Oletetaan että blogilistasovelluksemme sisältäisi somemaista toiminnallisuutta ja haluaisimme esim. näyttää sovelluksessa listan, joka sisältää kaikkien seuraamiemme (follow) käyttäjien blogeja kommentoineiden käyttäjien lisäämien blogien nimet.</p>\n<p>Jos palvelin toteuttaisi REST API:n, joutuisimme todennäköisesti tekemään monia HTTP-pyyntöjä selaimen koodista, ennen kuin saisimme muodostettua halutun datan. Pyyntöjen vastauksena tulisi myös paljon ylimääräistä dataa ja halutun datan keräävä selaimen koodi olisi todennäköisesti kohtuullisen monimutkainen.</p>\n<p>Jos kyseessä olisi usein käytetty toiminnallisuus, voitaisiin sitä varten toteuttaa oma REST-endpoint. Jos vastaavia skeaarioita olisi paljon, esim. kymmeniä, tulisi erittäin työlääksi toteuttaa kaikille toiminnallisuuksille oma REST-endpoint.</p>\n<p>GraphQL:n avulla toteutettava palvelin sopii tämänkaltaisiin tilanteisiin hyvin.</p>\n<p>GraphQL:ssä periaatteena, on että selaimen koodi muodostaa <i>kyselyn</i>, joka kuvailee halutun datan ja lähettää sen API:lle HTTP POST -pyynnöllä. Toisin kuin REST:issä, GraphQL:ssä kaikki kyselyt kohdistetaan samaan osoitteeseen ja ovat POST-tyyppisiä.</p>\n<p>Edellä kuvatun skenaarion data saataisiin haettua (suurinpiirtein) seuraavan kaltaisella kyselyllä:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">query FetchBlogsQuery <span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">(</span>username: <span class=\"token string\">'mluukkai'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    followedUsers <span class=\"token punctuation\">{</span>\n      blogs <span class=\"token punctuation\">{</span>\n        comments <span class=\"token punctuation\">{</span>\n          user <span class=\"token punctuation\">{</span>\n            blogs <span class=\"token punctuation\">{</span>\n              title\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Palvelimen vastaus pyyntöön olisi suunnilleen seuraavanlainen JSON-olio:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n  data: <span class=\"token punctuation\">{</span>\n    followedUsers: <span class=\"token punctuation\">{</span>\n      blogs: <span class=\"token punctuation\">{</span>\n        comments: <span class=\"token punctuation\">{</span>\n          user: <span class=\"token punctuation\">{</span>\n            blogs: <span class=\"token punctuation\">[</span>\n              <span class=\"token string\">'Goto considered harmful'</span>,\n              <span class=\"token string\">'End to End Testing with Puppeteer and Jest'</span>,\n              <span class=\"token string\">'Navigating your transition to GraphQL'</span>,\n              <span class=\"token string\">'From REST to GraphQL'</span>\n            <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sovelluslogiikka säilyy yksinkertaisena ja selaimen koodi saa täsmälleen haluamansa datan yksittäisellä kyselyllä.</p>\n<h3>Skeema ja kyselyt</h3>\n<p>Tutustutaan GraphQL:n peruskäsitteistöön toteuttamalla GraphQL-versio osien 2 ja 3 puhelinluettelosovelluksesta.</p>\n<p>Jokaisen GraphQL-sovelluksen ytimessä on <a href=\"https://graphql.org/learn/schema/\">skeema</a>, joka määrittelee minkä muotoista dataa sovelluksessa vaihdetaan clientin ja palvelimen välillä. Puhelinluettelon alustava skeema on seuraavassa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">type Person <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  phone<span class=\"token punctuation\">:</span> String\n  street<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  city<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token constant\">ID</span><span class=\"token operator\">!</span> \n<span class=\"token punctuation\">}</span>\n\ntype Query <span class=\"token punctuation\">{</span>\n  personCount<span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Person<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Person\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Skeema määrittelee kaksi <a href=\"https://graphql.org/learn/schema/#type-system\">tyyppiä</a>. Tyypeistä ensimmäinen <i>Person</i> määrittelee, että henkilöillä on neljä kenttää. Kentistä neljä on tyyppiä <i>String</i>, joka on yksi GraphQL:n määrittelemistä <a href=\"https://graphql.org/learn/schema/#scalar-types\">valmiista tyypeistä</a>. String-arvoisista kentistä muilla paitsi puhelinnumerolla (<i>phone</i>) on oltava arvo, tämä on merkitty skeemaan huutomerkillä. Kentän <i>id</i> tyyppi on <i>ID</i>. Arvoltaan <i>ID</i>-tyyppiset kentät ovat merkkijonoja, mutta GraphQL takaa, että ne ovat uniikkeja.</p>\n<p>Toinen skeeman määrittelemistä tyypeistä on <a href=\"https://graphql.org/learn/schema/#the-query-and-mutation-types\">Query</a>. Käytännössä jokaisessa GraphQL-skeemassa määritellään tyyppi Query, joka kertoo mitä kyselyjä API:n voidaan tehdä. </p>\n<p>Puhelinluettelo määrittelee kolme erilaista kyselyä ja <em>personCount</em> palauttaa kokonaisluvun. <em>allPersons</em> palauttaa listan <i>Person</i> tyyppisiä olioita. <i>findPerson</i> saa merkkijonomuotoisen parametrin ja palauttaa <i>Person</i>-olion. </p>\n<p>Queryjen paluuarvon ja parametrin määrittelyssä on jälleen käytetty välillä huutomerkkiä merkkaamaan <i>pakollisuutta</i>, eli <em>personCount</em> palauttaa varmasti kokonaisluvun. Kyselylle <em>findPerson</em> on pakko antaa parametriksi merkkijono. Kysely palauttaa <i>Person</i>-olion tai arvon <i>null</i>. <em>allPersons</em> palauttaa listan <i>Person</i>-olioita, listalla ei ole <i>null</i>-arvoja. </p>\n<p>Skeema siis määrittelee mitä kyselyjä client pystyy palvelimelta tekemään, minkälaisia parametreja kyselyillä voi olla sen minkä muotoista kyselyjen palauttama data on.</p>\n<p>Kyselyistä yksinkertaisin <em>personCount</em> näyttää seuraavalta</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  personCount\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Olettaen että sovellukseen olisi talletettu kolmen henkilön tiedot vastaus kyselyyn näyttäisi seuraavalta:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"personCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kaikkien henkilöiden tiedot hakeva <em>allPersons</em> on hieman monimutkaisempi. Koska kysely palauttaa listan <i>Person</i>-olioita, on kyselyn yhteydessä määriteltävä <i>mitkä kentät</i> kyselyn <a href=\"https://graphql.org/learn/queries/#fields\">halutaan palauttavan</a>: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  allPersons<span class=\"token punctuation\">{</span>\n    name\n    phone\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vastaus voisi näyttää seuraavalta:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allPersons\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-123543\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Matti Luukkainen\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-432342\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Venla Ruuska\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kysely voi määritellä palautettavaksi mitkä tahansa skeemassa mainitut kentät, esim. seuraava olisi myös mahdollista:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  allPersons<span class=\"token punctuation\">{</span>\n    name\n    city\n    street\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vielä esimerkki parametria edellyttävästä kyselystä, joka hakee yksittäisen henkilön tiedot palauttavasta kyselystä</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    phone \n    city \n    street\n    id\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kyselyn parametri siis annetaan suluissa, ja sen jälkeen määritellään aaltosuluissa paluuarvona tulevan olion halutut kentät. </p>\n<p>Vastaus on muotoa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"findPerson\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-123543\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Espoo\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"street\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tapiolankatu 5 A\"</span>\n      <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3d594650-3436-11e9-bc57-8b80ba54c431\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kyselyn paluuarvoa ei oltu merkitty pakolliseksi, eli jos etsitään tuntematonta henkilöä</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Donald Trump\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    phone \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>vastaus on <i>null</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"findPerson\"</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kuten huomaamme, GraphQL kyselyn ja siihen vastauksena tulevan JSON:in muodoilla on vahva yhteys, voidaan ajatella että kysely kuvailee sen minkälaista dataa vastauksena halutaan. Ero REST:issä tehtäviin pyyntöihin on suuri, REST:iä käytettäessä pyynnon url ja sen tyyppi (GET, POST, PUT, DELETE) ei kerro mitään palautettavan datan muodosta. </p>\n<p>GraphQL:n skeema kuvaa ainoastaan palvelimen ja sitä käyttävien clientien välillä liikkuvan tiedon muodon. Tieto voi olla organisoituna ja talletettuna palvelimen ihan missä muodossa tahansa.</p>\n<p>Nimestään huolimatta GraphQL:llä ei itseasiassa ole mitään tekemistä tietokantojen kanssa, se ei ota mitään kantaa siihen miten data on tallennettu. GraphQL-periaattella toimivan API:n käyttämä data voi siis olla talletettu relaatiotietokantaan, dokumenttitietokantaan tai muille palvelimille, joita GraphQL-palvelin käyttää vaikkapa REST:in välityksellä. </p>\n<h3>Apollo server</h3>\n<p>Toteuteaan nyt GraphQL-palvelin tämän hetken johtavaa kirjastoa <a href=\"https://www.apollographql.com/docs/apollo-server/\">Apollo serveriä</a> käyttäen. </p>\n<p>Luodaan uusi npm-projekti komennolla <em>npm init</em> ja asennetaan tarvittavat riippuvuuet</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save apollo<span class=\"token operator\">-</span>server graphql</code></pre></div>\n<p>Alustava toteutus on seuraavassa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer<span class=\"token punctuation\">,</span> gql <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> persons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">,</span>\n    phone<span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-123543\"</span><span class=\"token punctuation\">,</span>\n    street<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tapiolankatu 5 A\"</span><span class=\"token punctuation\">,</span>\n    city<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Espoo\"</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"3d594650-3436-11e9-bc57-8b80ba54c431\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Matti Luukkainen\"</span><span class=\"token punctuation\">,</span>\n    phone<span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-432342\"</span><span class=\"token punctuation\">,</span>\n    street<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Malminkaari 10 A\"</span><span class=\"token punctuation\">,</span>\n    city<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Helsinki\"</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token string\">'3d599470-3436-11e9-bc57-8b80ba54c431'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Venla Ruuska\"</span><span class=\"token punctuation\">,</span>\n    street<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Nallemäentie 22 C\"</span><span class=\"token punctuation\">,</span>\n    city<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Helsinki\"</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token string\">'3d599471-3436-11e9-bc57-8b80ba54c431'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token string\">`\n  type Person {\n    name: String!\n    phone: String\n    street: String!\n    city: String! \n    id: ID!\n  }\n\n  type Query {\n    personCount: Int!\n    allPersons: [Person!]!\n    findPerson(name: String!): Person\n  }\n`</span></span>\n\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    personCount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n    allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">,</span>\n    findPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  typeDefs<span class=\"token punctuation\">,</span>\n  resolvers<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Server ready at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Toteutuksen ytimessä on <em>ApolloServer</em>, joka saa kaksi parametria </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  typeDefs<span class=\"token punctuation\">,</span>\n  resolvers<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>parametreista ensimmäinen <em>typeDefs</em> sisältää sovelluksen käyttämän GraphQL-skeeman. </p>\n<p>Toinen parametri on olio, joka sisältää palvelimen <a href=\"https://www.apollographql.com/docs/apollo-server/essentials/data.html#resolver-map\">resolverit</a>, eli käytännössä koodin, joka määrittelee <i>miten</i> GraphQL-kyselyihin vastataan.</p>\n<p>Resolverien koodi on seuraavassa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    personCount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n    allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">,</span>\n    findPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>kuten huomataan vastaavat resolverit rakenteeltaan skeemassa määriteltyjä kyseilyitä:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">type Query <span class=\"token punctuation\">{</span>\n  personCount<span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Person<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Person\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>eli jokaista skeemassa määriteltyä kyselyä kohti om määritelty oma kentän <i>Query</i> alle tuleva kenttänsä.</p>\n<p>Kyselyn </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  personCount\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>resolveri on funktio</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span>length</code></pre></div>\n<p>eli kyselyyn palautetaan vastauksena henkilöt tallentavan taulukon <em>persons</em> pituus. </p>\n<p>Kaikki luettelossa olevat henkilöt hakevan kyselyn </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  allPersons <span class=\"token punctuation\">{</span>\n    name\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>resolveri on funktio, joka palauttaa <i>kaikki</i> taulukon <em>persons</em> oliot</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons</code></pre></div>\n<h3>GraphQL-playground</h3>\n<p>Kun Apollo serveriä suoritetaan sovelluskehitysmoodissa, käynnistää se osoitteeseen <a href=\"http://localhost:4000/graphql\">http://localhost:4000/graphql</a> sovelluskehittäjälle eritäin hyödyllisen <a href=\"https://www.apollographql.com/docs/apollo-server/features/graphql-playground.html\">GraphQL-playground</a> näkymän, joka avulla on mahdollista tehdä kyselyjä palvelimelle.</p>\n<p>Kokeillaan </p>\n<picture><img src=\"/static/4d5c5a2b6f5e8141123b87fa1ab49e94/14be6/1.png\" srcset=\"/static/4d5c5a2b6f5e8141123b87fa1ab49e94/4cce7/1.png 200w,\n/static/4d5c5a2b6f5e8141123b87fa1ab49e94/bae5f/1.png 400w,\n/static/4d5c5a2b6f5e8141123b87fa1ab49e94/14be6/1.png 800w,\n/static/4d5c5a2b6f5e8141123b87fa1ab49e94/1b35a/1.png 1200w,\n/static/4d5c5a2b6f5e8141123b87fa1ab49e94/9ee03/1.png 1600w,\n/static/4d5c5a2b6f5e8141123b87fa1ab49e94/ae182/1.png 1984w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Playgroundin kanssa pitää olla välillä tarkkana. Jos kysely on syntaktisesti virheellinen, on virheilmoitus aika huomaamaton ja kyselyn suoritusnappia painamalla ei tapahdu mitään:</p>\n<picture><img src=\"/static/dc95465e66af26cee553a04865345461/14be6/2.png\" srcset=\"/static/dc95465e66af26cee553a04865345461/4cce7/2.png 200w,\n/static/dc95465e66af26cee553a04865345461/bae5f/2.png 400w,\n/static/dc95465e66af26cee553a04865345461/14be6/2.png 800w,\n/static/dc95465e66af26cee553a04865345461/1b35a/2.png 1200w,\n/static/dc95465e66af26cee553a04865345461/9ee03/2.png 1600w,\n/static/dc95465e66af26cee553a04865345461/4d816/2.png 1752w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Edellisen kyselyn tulos näkyy edelleen playgroundin oikeassa osassa kyselyn virheellisyydestä huomimatta. </p>\n<p>Osoittamalla oikeaa kohtaa virheelliseltä riviltä saa virheilmoituksen näkyville</p>\n<picture><img src=\"/static/f4d91f847d2f1abec1d1b57496086250/14be6/3.png\" srcset=\"/static/f4d91f847d2f1abec1d1b57496086250/4cce7/3.png 200w,\n/static/f4d91f847d2f1abec1d1b57496086250/bae5f/3.png 400w,\n/static/f4d91f847d2f1abec1d1b57496086250/14be6/3.png 800w,\n/static/f4d91f847d2f1abec1d1b57496086250/1b35a/3.png 1200w,\n/static/f4d91f847d2f1abec1d1b57496086250/9ee03/3.png 1600w,\n/static/f4d91f847d2f1abec1d1b57496086250/6de17/3.png 1894w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Jos Playground vaikuttaa olevan jumissa, niin sivun reloadaaminen yleensä auttaa,</p>\n<p>Klikkaamalla oikean reunan tekstiä <i>schema</i> näyttää Playground palvelimen GraphQL-skeeman</p>\n<picture><img src=\"/static/33d561d2fc17c71965c59502b2541f28/14be6/4.png\" srcset=\"/static/33d561d2fc17c71965c59502b2541f28/4cce7/4.png 200w,\n/static/33d561d2fc17c71965c59502b2541f28/bae5f/4.png 400w,\n/static/33d561d2fc17c71965c59502b2541f28/14be6/4.png 800w,\n/static/33d561d2fc17c71965c59502b2541f28/1b35a/4.png 1200w,\n/static/33d561d2fc17c71965c59502b2541f28/9ee03/4.png 1600w,\n/static/33d561d2fc17c71965c59502b2541f28/c0b4e/4.png 1990w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Resolverin parametrsit</h3>\n<p>Yksittäisen henkilön hakevan kyselyn</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tphone \n    city \n    street\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>resolveri on funktio, joka poikkeaa kahdesta aiemmasta resolverista siinä että se saa <i></i>kaksi parametria</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Parametreista toinen <em>args</em> sisältää kyselyn parametrit. Resolveri siis palauttaa taulukosta\n<em>persons</em> henkilön, jonka nimi on sama kuin <i>args.name</i> arvo. Ensimmäisenä olevaa parametria <em>root</em> resolveri ei tarvitse.</p>\n<p> Itseasiassa kaikki resolverifunktiot saavat <a href=\"https://www.apollographql.com/docs/graphql-tools/resolvers.html#Resolver-function-signature\">neljä parametria</a>. Javascriptissa parametrit voidaan kuitenkin jättää määrittelemättä, jos niitä ei tarvita. Tulemme käyttämään resolverien ensimmäistä ja kolmatta parametria vielä myöhemmin tässä osassa.</p>\n<h3>Oletusarvoinen resolveri</h3>\n<p>Kun teemme kyselyn, esim</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tphone \n    city \n    street\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>osaa palvelin liittää vastaukseen täsmälleen ne kentät, joita kysely pyytää. Miten tämä tapahtuu?</p>\n<p>GraphQL-palvelimen tulee määritellä resolverit <i>jokaiselle</i> skeemassa määritellyn tyypin kentälle. Olemme nyt määritelleet resolverit ainoastaan tyypin <i>Query</i> kentille, eli kaikille sovelluksen tarjoamille kyselyille. Skeemassa määritellylle tyypin <i>Person</i> kentille ei ole määritelty resorvereja, niimpä Apollo on määritellyt niille <a href=\"https://www.apollographql.com/docs/graphql-tools/resolvers.html#Default-resolver\">oletusarvoisen resolverin</a> joka toimii samaan tapaan kuin seuraavassa itse määritelty:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    personCount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n    allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">,</span>\n    findPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  Person<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> root<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    phone<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> root<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    street<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> root<span class=\"token punctuation\">.</span>street<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    city<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> root<span class=\"token punctuation\">.</span>city</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Oletusarvoinen resolveri siis palauttaa olion vastaavan kentän arvon. Itse olioon se pääsee käsiksi resolverin ensimmäisen parametrin <em>root</em> kautta. </p>\n<p>Jos oletusarvoisen resolverin toiminnallisuus riittää, ei omaa resolveria tarvitse määritellä. On myös mahdollista määritellä ainoastaan joillekin tietyn tyypin kentille oma resolverinsa ja antaa oletusarvoisen resolverin hoitaa muut kentät.</p>\n<p>Voisimme esim, määritellä että kaikkien henkilöiden osoitteeksi tulisi <i>Manhattan New York</i> kovakoodaamalla seuraavat tyypin <i>Person</i> kenttien street ja city resolvereiksi:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Person<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  street<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"Manhattan\"</span><span class=\"token punctuation\">,</span>\n  city<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"New York\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Olion sisällä olio</h3>\n<p>Muutetaan skeemaa hiukan</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\">type Address <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  street<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span></span><span class=\"gatsby-highlight-code-line\">  city<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span> </span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\ntype Person <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  phone<span class=\"token punctuation\">:</span> String\n<span class=\"gatsby-highlight-code-line\">  address<span class=\"token punctuation\">:</span> Address<span class=\"token operator\">!</span></span><span class=\"token punctuation\">}</span>\n\ntype Query <span class=\"token punctuation\">{</span>\n  personCount<span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Person<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Person\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>eli henkillä on nyt kenttä jonka tyyppi on <i>Address</i> joka koostuu kadusta ja kaupungista. Osoitetta tarvitsevat kyselyt muuttuvat muotoon</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    phone \n    address <span class=\"token punctuation\">{</span>\n      city \n      street\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>vastaksena on henkilö-olio, joka <i>sisältää</i> osoite-olion:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"findPerson\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-123543\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"address\"</span><span class=\"token punctuation\">:</span>  <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Espoo\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"street\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tapiolankatu 5 A\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Talletetaan henkilöt palvelimella edelleen seuraavassa muodossa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> persons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span><span class=\"token punctuation\">,</span>\n    phone<span class=\"token punctuation\">:</span> <span class=\"token string\">\"040-123543\"</span><span class=\"token punctuation\">,</span>\n    street<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tapiolankatu 5 A\"</span><span class=\"token punctuation\">,</span>\n    city<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Espoo\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Nyt siis palvelimen tallettamat henkilö-oliot eivät ole muodoltaan täysin samanlaisia kuin GraphQL-skeeman määrittelemät tyypin <i>Person</i> oliot. </p>\n<p>Koska taulukkoon talletetuilla olioilla ei ole kenttää <i>address</i> oletusarvoinen resolveri ei enää riitä. Lisätään resolveri tyypin <i>Person</i> kentälle <i>address</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    personCount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n    allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">,</span>\n    findPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// hightlight-start</span>\n  Person<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    address<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> \n        street<span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">.</span>street<span class=\"token punctuation\">,</span>\n        city<span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">.</span>city\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// hightlight-end</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Eli aina palautetaessa <i>Person</i>-oliota, palautetaan niiden kentät <i>name</i> ja <i>phone</i> käyttäen oletusarvoista resolveria, kenttä <i>address</i> muodostetaan itse määritellyn resolverin avulla. Resolvelrifunktion parametrina <em>root</em> on käsittelyssä oleva henkilöolio, eli osoitteen katu ja kaupunki saadaan sen kentistä.</p>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2019/graphql-phonebook-backend/tree/part8-1\">githubissa</a>, branchissa <i>part8-1</i>.</p>\n<h3>Mutaatio</h3>\n<p>Laajennetaan sovellusta siten, että puhelinluetteloon on mahdollista lisätä uusia henkilöitä. GraphQL:ssä kaikki muutoksen aiheuttavat operaatiot tehdään <a href=\"https://graphql.org/learn/queries/#mutations\">mutaatioiden</a> avulla. Mutaatiot määritellään skeemaan tyypin <i>Mutation</i> avaimina.</p>\n<p>Käyttäjän lisäävä mutaation skeema näyttää seuraavalta</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">type Mutation <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addPerson</span><span class=\"token punctuation\">(</span>\n    name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    phone<span class=\"token punctuation\">:</span> String\n    street<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    city<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Person\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Mutaatio siis saa parametreina käyttäjän tiedot. Parametreista <i>phone</i> on ainoa, jolle ei ole pakko asettaa arvoa. Mutaatioilla on parametrien lisäksi paluuarvo. Paluuarvo on nyt tyyppiä <i>Person</i>, ideana on palauttaa operaation onnistuessa lisätyn henkilön tiedot ja muussa tapauksessa <i>null</i>.</p>\n<p>Myös mutaatioita varten on määriteltävä resolveri:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  Mutation<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    addPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>args <span class=\"token punctuation\">}</span>\n      persons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> person\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Mutaatio siis lisää parametreina <em>args</em> saamansa olion taulukkoon <em>persons</em> ja palauttaa lisätyn olion. </p>\n<p>Uusi henkilö voidaan lisätä seuraavalla mutaatiolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mutation <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addPerson</span><span class=\"token punctuation\">(</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Pekka Mikkola\"</span>\n    phone<span class=\"token punctuation\">:</span> <span class=\"token string\">\"045-2374321\"</span>\n    street<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Vilppulantie 25\"</span>\n    city<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Helsinki\"</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    name\n\t\tphone\n    address<span class=\"token punctuation\">{</span>\n      city\n      street\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kannattaa huomata, että lisättävä henkilö talletetaan taulukkoon <em>persons</em> muodossa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Pekka Mikkola\"</span><span class=\"token punctuation\">,</span>\n  phone<span class=\"token punctuation\">:</span> <span class=\"token string\">\"045-2374321\"</span><span class=\"token punctuation\">,</span>\n  street<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Vilppulantie 25\"</span><span class=\"token punctuation\">,</span>\n  city<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Helsinki\"</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vastaus mutaatioon on kuitenkin</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"addPerson\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Pekka Mikkola\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"045-2374321\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"address\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Helsinki\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"street\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Vilppulantie 25\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>eli tyypin <i>Person</i> kentän <i>address</i> resolveri muotoilee vastauksena palautettavan olion oikean muotoiseksi.</p>\n<h3>Virheiden käsittely</h3>\n<p>Jos yritämme luoda uuden henkilön, mutta parametrit eivät vastaa skeemassa määriteltyä, antaa palvelin virheilmoituksen: </p>\n<picture><img src=\"/static/67154a621319c0a6b4c268bcaac92d42/14be6/5.png\" srcset=\"/static/67154a621319c0a6b4c268bcaac92d42/4cce7/5.png 200w,\n/static/67154a621319c0a6b4c268bcaac92d42/bae5f/5.png 400w,\n/static/67154a621319c0a6b4c268bcaac92d42/14be6/5.png 800w,\n/static/67154a621319c0a6b4c268bcaac92d42/1b35a/5.png 1200w,\n/static/67154a621319c0a6b4c268bcaac92d42/9ee03/5.png 1600w,\n/static/67154a621319c0a6b4c268bcaac92d42/e1a7a/5.png 1962w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>GraphQL:n <a href=\"https://graphql.org/learn/validation/\">validoinnin</a> avulla pystytään siis jo automaattisesi hoitamaan osa virheenkäsittelyä. </p>\n<p>Kaikkea GraphQL ei kuitenkaan pysty hoitamaan automaattisesti. Esimerkiksi tarkemmat säännöt mutaatiolla lisättävän datan kenttien muodolle on lisättävä itse. Niistä aiheutuvat virheen tulee hoitaa <a href=\"https://www.apollographql.com/docs/apollo-server/features/errors.html\">GraphQL:n poikkeuskäsittelymekanismilla</a>.</p>\n<p>Estetään saman nimen lisääminen puhelinluetteloon useampaan kertaan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer<span class=\"token punctuation\">,</span> UserInputError<span class=\"token punctuation\">,</span> gql <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n  Mutation<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    addPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserInputError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Name must be unique'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          invalidArgs<span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span></span>\n      <span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>args <span class=\"token punctuation\">}</span>\n      persons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> person\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Eli jos lisättävä nimi on jo luettelossa heitetään poikkeus <em>UserInputError</em></p>\n<picture><img src=\"/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/14be6/6.png\" srcset=\"/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/4cce7/6.png 200w,\n/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/bae5f/6.png 400w,\n/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/14be6/6.png 800w,\n/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/1b35a/6.png 1200w,\n/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/9ee03/6.png 1600w,\n/static/1f8c1c7f0bc21f29a0d9c0ec0c9ee17e/227d8/6.png 1934w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2019/graphql-phonebook-backend/tree/part8-2\">githubissa</a>, branchissa <i>part8-2</i>.</p>\n<h3>Enum</h3>\n<p>Tehdään sovellukseen vielä sellainen lisäys, että kaikki henkilöt palauttavaa kyselyä voidaan säädellä parametrilla <i>phone</i> siten, että kysely palauttaa vain henkilöt, joilla on puhelinnumero</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">allPersons</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">:</span> <span class=\"token constant\">YES</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    name\n\t\tphone \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>tai henkilöt, joilla ei ole puhelinnumeroa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">allPersons</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">:</span> <span class=\"token constant\">NO</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    name\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Skeema laajenee seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">enum</span> YesNo <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token constant\">YES</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token constant\">NO</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\ntype Query <span class=\"token punctuation\">{</span>\n  personCount<span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">allPersons</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">:</span> YesNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Person<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span></span>  <span class=\"token function\">findPerson</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Person\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tyyppi <i>YesNo</i> on GraphQL:n <a href=\"https://graphql.org/learn/schema/#enumeration-types\">enum</a>, eli lueteltu tyyppi, jolla on kaksi mahdollista arvoa, <i>YES</i> ja <i>NO</i>. Kyselyssä <em>allPersons</em> parametri <em>phone</em> on tyypiltään <i>YesNo</i>, mutta sen arvo ei ole pakollinen.</p>\n<p>Resolveri muuttuu seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  personCount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  allPersons<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>args<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> persons</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">byPhone</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></span><span class=\"gatsby-highlight-code-line\">      args<span class=\"token punctuation\">.</span>phone <span class=\"token operator\">===</span> <span class=\"token string\">'YES'</span> <span class=\"token operator\">?</span> person<span class=\"token punctuation\">.</span>phone <span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span>person<span class=\"token punctuation\">.</span>phone</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>byPhone<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  findPerson<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> persons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> args<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2019/graphql-phonebook-backend/tree/part8-3\">githubissa</a>, branchissa <i>part8-3</i>.</p>\n<h3>Lisää kyselyistä</h3>\n<p>GraphQL:ssä on yheen kyselyyn mahdollista yhdistää monia tyypin <i>Query</i> kenttiä, eli \"yksittäisiä kyselyitä\". Esim. seuraava kysely palautta puhelinluettelon henkilöiden lukumäärän sekä nimet:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  personCount\n  allPersons<span class=\"token punctuation\">{</span>\n    name\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vastaus näyttää seuraavalta</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"personCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"allPersons\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Matti Luukkainen\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Venla Ruuska\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Yhdistetty kysely voi myös viitata useampaan kertaan samaan kyselyyn. Tällöin erillisille kyselyille on kuitenkin annettava vaihtoehoiset nimet kaksoispistesyntaksilla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  havePhone<span class=\"token punctuation\">:</span> <span class=\"token function\">allPersons</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">:</span> <span class=\"token constant\">YES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    name\n  <span class=\"token punctuation\">}</span>\n  phoneless<span class=\"token punctuation\">:</span> <span class=\"token function\">allPersons</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">:</span> <span class=\"token constant\">NO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    name\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vastaus on muotoa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"havePhone\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arto Hellas\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Matti Luukkainen\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"phoneless\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Venla Ruuska\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Joissain tilanteissa voi myös olla hyötyä nimetä kyselyt. Näin on erityisesti tilanteissa, missä kyselyillä tai mutaatiolla on <a href=\"https://graphql.org/learn/queries/#variables\">parametreja</a>. Tutustumme parametreihin pian.</p>\n<p>Jos kyselyitä on useita, pyytää Playground valitsemaan mikä niistä suoritetaan:</p>\n<picture><img src=\"/static/0f06c367200859083e559542fedb9700/14be6/7.png\" srcset=\"/static/0f06c367200859083e559542fedb9700/4cce7/7.png 200w,\n/static/0f06c367200859083e559542fedb9700/bae5f/7.png 400w,\n/static/0f06c367200859083e559542fedb9700/14be6/7.png 800w,\n/static/0f06c367200859083e559542fedb9700/1b35a/7.png 1200w,\n/static/0f06c367200859083e559542fedb9700/9ee03/7.png 1600w,\n/static/0f06c367200859083e559542fedb9700/4f928/7.png 1910w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n</div>\n<div class=\"tasks\">\n<h3>Tehtäviä</h3>\n<p>Tehtävissä toteutetaan yksinkertaisen kirjaston GraphQL:ää tarjoava backend. Ota sovelluksesi lähtökohtaksi <a href=\"https://github.com/fullstack-hy2019/misc/blob/master/library-backend.js\">tämä tiedosto</a>. Muista <em>npm init</em> ja riippuvuuksien asentaminen!</p>\n<h4>8.1: kijojen ja kirjailijoiden määrä</h4>\n<p>Toteuta kyselyt <em>bookCount</em> ja <em>authorCount</em> jotka palauttavat kirjojen ja kirjailijoiden lukumäärän.</p>\n<p>Kyselyn </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  bookCount\n  authorCount\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>pitäisi alustavalla datalla tuottaa vastaus</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"authorCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>8.2: kaikki kirjat ja kirjailijat</h4>\n<p>Toteuta kysely <em>allBooks</em>,  joka palauttavat kaikki kirjat.</p>\n<p>Seurava kyselyn siis pitäisi pystyä tekemään</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  allBooks <span class=\"token punctuation\">{</span> \n    title \n    author\n    published \n    genres\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>8.3: kaikki kirjailijat</h4>\n<p>Toteuta kysely <em>allAuthors</em> joka palauttaa kaikki kirjailijat. Kyselyn vastauksessa kirjailijoilla tulee myös olla kenttä <em>bookCount</em> joka keroo kirjailijan tekemien kirjojen määrän.</p>\n<p>Esim. kyselyn</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  allAuthors <span class=\"token punctuation\">{</span>\n    name\n    bookCount\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>vastauksen tulisi näyttää seuraavalta</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allAuthors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Robert Martin\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Martin Fowler\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Fyodor Dostoevsky\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Joshua Kerievsky\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sandi Metz\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>8.4: kirjailijan kirjat</h4>\n<p>Laajenna kyselyä <em>allBooks</em> että sille voi antaa optionaalisen parametrin <i>author</i>, joka rajoittaa kirjalistan niihin joiden author on parametrina annettu kirjailija.</p>\n<p>Esim. kyselyn</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">allBooks</span><span class=\"token punctuation\">(</span>author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Robert Martin\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>tulisi palauttaa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allBooks\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Clean Code\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Agile software development\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>8.5: genren kirjat</h4>\n<p>Laajenna kyselyä <em>allBooks</em> että sille voi antaa optionaalisen parametrin <i>genre</i>, joka rajoittaa kirjalistan niihin joiden genrejen joukossa on parametrina annettu genre.</p>\n<p>Esim. kyselyn</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">allBooks</span><span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">:</span> <span class=\"token string\">\"refactoring\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n    author\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>tulisi palauttaa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allBooks\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Clean Code\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"author\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Robert Martin\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Refactoring, edition 2\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"author\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Martin Fowler\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Refactoring to patterns\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"author\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Joshua Kerievsky\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Practical Object-Oriented Design, An Agile Primer Using Ruby\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"author\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sandi Metz\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kyselyn pitää toimia myös siinä tapauksessa, että se saa molemmat optionaaliset parametrit:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">allBooks</span><span class=\"token punctuation\">(</span>author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Robert Martin\"</span><span class=\"token punctuation\">,</span> genre<span class=\"token punctuation\">:</span> <span class=\"token string\">\"refactoring\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n    author\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>8.6: Kirjan lisäys</h4>\n<p>Toteuta mutaatio <em>addBook</em>, jota voi käyttää seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mutation <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addBook</span><span class=\"token punctuation\">(</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"NoSQL Distilled\"</span><span class=\"token punctuation\">,</span>\n    author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Martin Fowler\"</span><span class=\"token punctuation\">,</span>\n    published<span class=\"token punctuation\">:</span> <span class=\"token number\">2012</span><span class=\"token punctuation\">,</span>\n    genres<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"database\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nosql\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">,</span>\n    author\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Mutaatio toimii myös niissä tilanteissa, joissa kirjoittaja ei ole ennestään palvelimen tiedossa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mutation <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addBook</span><span class=\"token punctuation\">(</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Pimeyden tango\"</span><span class=\"token punctuation\">,</span>\n    author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Reijo Mäki\"</span><span class=\"token punctuation\">,</span>\n    published<span class=\"token punctuation\">:</span> <span class=\"token number\">1997</span><span class=\"token punctuation\">,</span>\n    genres<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"crime\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">,</span>\n    author\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos näin on, lisätään uusi kirjailija järjestelmään. Kirjailijan syntymävuodesta ei ole tässä vaiheessa tietoa, eli kysely</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">query <span class=\"token punctuation\">{</span>\n  allAuthors <span class=\"token punctuation\">{</span>\n    name\n    born\n    bookCount\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>palauttaa</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allAuthors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// ...</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Reijo Mäki\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"born\"</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"bookCount\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>8.7: Kirjailijan syntymävuoden päiyitys</h4>\n<p>Toteuta mutaatio <em>editAuthor</em> jonka avulla on mahdollista asettaa kirjailijalle syntymävuosi. Mutaatiota käytetään seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mutation <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">editAuthor</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Reijo Mäki\"</span><span class=\"token punctuation\">,</span> setBornTo<span class=\"token punctuation\">:</span> <span class=\"token number\">1958</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    name\n    born\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos kirjailija löytyy, palauttaa operaatio editoidun kirjailijan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"editAuthor\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Reijo Mäki\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"born\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1958</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Olemattoman kirjailijan syntymävuoden editointiin reagoidaan palauttamalla <i>null</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"editAuthor\"</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-8-1f98236965546b36c2a293574ec8b02a.svg"},"part":8,"letter":"a"}}},"pageContext":{"part":8,"letter":"a"}}