{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<h2>React router</h2>\n<p>Palataan jälleen Reduxittoman Reactin pariin.</p>\n<p>On erittäin tyypillistä, että web-sovelluksissa on navigaatiopalkki, jonka avulla on mahdollista vaihtaa sovelluksen näkymää. Muistiinpanosovelluksemme voisi sisältää pääsivun:</p>\n<picture><img src=\"/static/9dede0061c8eac733e37e2e60d2717b6/14be6/6.png\" srcset=\"/static/9dede0061c8eac733e37e2e60d2717b6/4cce7/6.png 200w,\n/static/9dede0061c8eac733e37e2e60d2717b6/bae5f/6.png 400w,\n/static/9dede0061c8eac733e37e2e60d2717b6/14be6/6.png 800w,\n/static/9dede0061c8eac733e37e2e60d2717b6/1b35a/6.png 1200w,\n/static/9dede0061c8eac733e37e2e60d2717b6/7db0f/6.png 1240w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>ja omat sivunsa muistiinpanojen ja käyttäjien tietojen näyttämiseen:</p>\n<picture><img src=\"/static/5b335e01f8915d3c3cab42be7f78460c/14be6/7.png\" srcset=\"/static/5b335e01f8915d3c3cab42be7f78460c/4cce7/7.png 200w,\n/static/5b335e01f8915d3c3cab42be7f78460c/bae5f/7.png 400w,\n/static/5b335e01f8915d3c3cab42be7f78460c/14be6/7.png 800w,\n/static/5b335e01f8915d3c3cab42be7f78460c/1b35a/7.png 1200w,\n/static/5b335e01f8915d3c3cab42be7f78460c/7db0f/7.png 1240w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p><a href=\"/osa0#perinteinen-web-sovellus\">Vanhan koulukunnan websovelluksessa</a> sovelluksen näyttämän sivun vaihto tapahtui siten että selain teki palvelimelle uuden HTTP GET -pyynnön ja renderöi sitten palvelimen palauttaman näkymää vastaavan HTML-koodin.</p>\n<p>Single page appeissa taas ollaan todellisuudessa koko ajan samalla sivulla, ja selaimessa suoritettava Javascript-koodi luo illuusion eri \"sivuista\". Jos näkymää vaihdettaessa tehdään HTTP-kutsuja, niiden avulla haetaan ainoastaan JSON-muotoista dataa jota uuden näkymän näyttäminen ehkä edellyttää.</p>\n<p>Navigaatiopalkki ja useita näkymiä sisältävä sovellus on erittäin helppo toteuttaa Reactilla.</p>\n<p>Seuraavassa on eräs tapa:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Home = () =&gt; (\n  &lt;div&gt; &lt;h2&gt;TKTL notes app&lt;/h2&gt; &lt;/div&gt;\n)\n\nconst Notes = () =&gt; (\n  &lt;div&gt; &lt;h2&gt;Notes&lt;/h2&gt; &lt;/div&gt;\n)\n\nconst Users = () =&gt; (\n  &lt;div&gt; &lt;h2&gt;Users&lt;/h2&gt; &lt;/div&gt;\n)\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      page: &#39;home&#39;\n    }\n  }\n\n  toPage = (page) =&gt; (event) =&gt; {\n    event.preventDefault()\n    this.setState({ page })\n  }\n\n  render() {\n    const content = () =&gt; {\n      if (this.state.page === &#39;home&#39;) {\n        return &lt;Home /&gt;\n      } else if (this.state.page === &#39;notes&#39;) {\n        return &lt;Notes /&gt;\n      } else if (this.state.page === &#39;users&#39;) {\n        return &lt;Users /&gt;\n      }\n    }\n\n    return (\n      &lt;div&gt;\n        &lt;div&gt;\n          &lt;a href=&quot;&quot; onClick={ this.toPage(&#39;home&#39;) }&gt;home&lt;/a&gt; &amp;nbsp;\n          &lt;a href=&quot;&quot; onClick={ this.toPage(&#39;notes&#39;) }&gt;notes&lt;/a&gt; &amp;nbsp;\n          &lt;a href=&quot;&quot; onClick={ this.toPage(&#39;users&#39;) }&gt;users&lt;/a&gt;\n        &lt;/div&gt;\n\n        {content()}\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Eli jokainen näkymä on toteutettu omana komponenttinaan ja sovelluksen tilassa pidetään tieto siitä, minkä näkymää vastaava komponentti menupalkin alla näytetään.</p>\n<p><strong>Huom:</strong> navigointivalikossa oleva <em>&#x26;nbsp;</em> tarkoittaa <em>a</em>-tagien väliin sjijoitettavaa välilyöntiä. CSS:n käyttö olisi luonnollisesti parempi tapa sivun ulkoasun muotoilulle mutta nyt tyydymme quick'n'dirty-ratkaisuun.</p>\n<p>Menetelmä ei kuitenkaan ole optimaalinen. Kuten kuvista näkyy, sivuston osoite pysyy samana vaikka välillä ollaankin eri näkymässä. Jokaisella näkymällä tulisi kuitenkin olla oma osoitteensa, jotta esim. bookmarkien tekeminen olisi mahdollista. Sovelluksessamme ei myöskään selaimen <em>back</em>-painike toimi loogisesti, eli <em>back</em> ei vie edelliseksi katsottuun sovelluksen näkymään vaan jonnekin ihan muualle. Jos sovellus kasvaisi suuremmaksi ja sinne haluttaisiin esim. jokaiselle käyttäjälle sekä muistiinpanolle oma yksittäinen näkymänsä, itse koodattu <em>reititys</em> eli sivuston navigaationhallinta menisi turhan monimutkaiseksi.</p>\n<p>Reactissa on onneksi valmis komponentti <a href=\"https://github.com/ReactTraining/react-router\">React router</a> joka tarjoaa erinomaisen ratkaisun React-sovelluksen navigaation hallintaan.</p>\n<p>Muutetaan ylläoleva sovellus käyttämään React routeria. Asennetaan React router komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react-router-dom</code></pre></div>\n<p>React routerin tarjoama reititys saadaan käyttöön muuttamalla sovellusta seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">import { BrowserRouter as Router, Route, Link } from &#39;react-router-dom&#39;\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;Router&gt;\n          &lt;div&gt;\n            &lt;div&gt;\n              &lt;Link to=&quot;/&quot;&gt;home&lt;/Link&gt; &amp;nbsp;\n              &lt;Link to=&quot;/notes&quot;&gt;notes&lt;/Link&gt; &amp;nbsp;\n              &lt;Link to=&quot;/users&quot;&gt;users&lt;/Link&gt;\n            &lt;/div&gt;\n            &lt;Route exact path=&quot;/&quot; render={() =&gt; &lt;Home /&gt;} /&gt;\n            &lt;Route path=&quot;/notes&quot; render={() =&gt; &lt;Notes /&gt;} /&gt;\n            &lt;Route path=&quot;/users&quot; render={() =&gt; &lt;Users /&gt;} /&gt;\n          &lt;/div&gt;\n        &lt;/Router&gt;\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Reititys, eli komponenttien ehdollinen, selaimen <em>urliin perustuva</em> renderöinti otetaan käyttöön sijoittamalla komponentteja <em>Router</em>-komponentin lapsiksi, eli <em>Router</em>-tagien sisälle.</p>\n<p>Huomaa, että vaikka komponenttiin viitataan nimellä <em>Router</em> kyseessä on <a href=\"https://reacttraining.com/react-router/web/api/BrowserRouter\">BrowserRouter</a>, sillä\nimporttaus tapahtuu siten, että importattava olio uudelleennimetään:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span></code></pre></div>\n<p>Manuaalin mukaan</p>\n<blockquote>\n<p><em>BrowserRouter</em> is a <em>Router</em> that uses the HTML5 history API (pushState, replaceState and the popstate event) to keep your UI in sync with the URL.</p>\n</blockquote>\n<p>Normaalisti selain lataa uuden sivun osoiterivillä olevan urlin muuttuessa. <a href=\"https://css-tricks.com/using-the-html5-history-api/\">HTML5 history API</a>:n avulla <em>BrowserRouter</em> kuitenkin mahdollistaa sen, että selaimen osoiterivillä olevaa urlia voidaan käyttää React-sovelluksen sisäiseen \"reitittämiseen\", eli vaikka osoiterivillä oleva url muuttuu, sivun sisältöä manipuloidaan ainoastaan Javascriptillä ja selain ei lataa uutta sisältöä palvelimelta. Selaimen toiminta back- ja forward-toimintojen ja bookmarkien tekemisen suhteen on kuitenkin loogista, eli toimii kuten perinteisillä web-sivuilla.</p>\n<p>Routerin sisälle määritellään selaimen osoiteriviä muokkaavia <em>linkkejä</em> komponentin <a href=\"https://reacttraining.com/react-router/web/api/Link\">Link</a> avulla. Esim.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span><span class=\"token operator\">></span>notes<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span></code></pre></div>\n<p>luo sovellukseen linkin, jonka teksti on <em>notes</em> ja jonka klikkaaminen vaihtaa selaimen osoiteriville urliksi <em>/notes</em>.</p>\n<p>Selaimen urliin perustuen renderöitävät komponentit määritellään komponentin <a href=\"https://reacttraining.com/react-router/web/api/Route\">Route</a> avulla. Esim.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>Notes /<span class=\"token operator\">></span><span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span></code></pre></div>\n<p>määrittelee, että jos selaimen osoiteena on <em>/notes</em>, renderöidään komponentti <em>Notes</em>.</p>\n<p>Sovelluksen juuren, eli osoitteen <em>/</em> määritellään renderöivän komponentti <em>Home</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>Home /<span class=\"token operator\">></span><span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span></code></pre></div>\n<p>joudumme käyttämään routen <em>path</em> attribuutin edessä määrettä <em>exact</em>, muuten <em>Home</em> renderöityy kaikilla muillakin poluilla, sillä juuri <em>/</em> on kaikkien muiden polkujen <em>alkuosa</em>.</p>\n<h3>parametroitu route</h3>\n<p>Tarkastellaan sitten hieman modifioitua versiota edellisestä esimerkistä. Esimerkin koodi kokonaisuudessaan on <a href=\"https://github.com/FullStack-HY/FullStack-Hy.github.io/wiki/router-esimerkki\">täällä</a>.</p>\n<p>Sovellus sisältää nyt viisi eri näkymää, joiden näkyvyyttä kontrolloidaan routerin avulla. Edellisestä esimerkistä tuttujen komponenttien <em>Home</em>, <em>Notes</em> ja <em>Users</em> lisäksi mukana on kirjautumisnäkymää vastaava <em>Login</em> ja yksittäisen muistiinpanon näkymää vastaava <em>Note</em>.</p>\n<p><em>Home</em> ja <em>Users</em> ovat kuten aiemmassa esimerkissä. <em>Notes</em> on hieman monimutkaisempi, se renderöi propseina saamansa muistiinpanojen listan siten, että jokaisen muistiinpanon nimi on klikattavissa</p>\n<picture><img src=\"/static/c734eb7d3963d927a2849f6d2967e9e1/14be6/8.png\" srcset=\"/static/c734eb7d3963d927a2849f6d2967e9e1/4cce7/8.png 200w,\n/static/c734eb7d3963d927a2849f6d2967e9e1/bae5f/8.png 400w,\n/static/c734eb7d3963d927a2849f6d2967e9e1/14be6/8.png 800w,\n/static/c734eb7d3963d927a2849f6d2967e9e1/1b35a/8.png 1200w,\n/static/c734eb7d3963d927a2849f6d2967e9e1/b03d6/8.png 1330w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Nimen klikattavuus on toteutettu komponentilla <em>Link</em> ja esim. muistiinpanon, jonka id on 3 nimen klikkaaminen aiheuttaa selaimen osoitteen arvon päivittymisen muotoon <em>notes/3</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Notes = ({notes}) =&gt; (\n  &lt;div&gt;\n    &lt;h2&gt;Notes&lt;/h2&gt;\n    &lt;ul&gt;\n      {notes.map(note=&gt;\n        &lt;li key={note.id}&gt;\n          &lt;Link to={`/notes/${note.id}`}&gt;{note.content}&lt;/Link&gt;\n        &lt;/li&gt;\n      )}\n    &lt;/ul&gt;\n  &lt;/div&gt;\n)</code></pre></div>\n<p>Kun selain siirtyy muistiinpanon yksilöivään osoitteeseen, esim. <em>notes/3</em>, renderöidään komponentti <em>Note</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Note = ({note}) =&gt; {\n  return(\n  &lt;div&gt;\n    &lt;h2&gt;{note.content}&lt;/h2&gt;\n    &lt;div&gt;{note.user}&lt;/div&gt;\n    &lt;div&gt;&lt;strong&gt;{note.important ? &#39;tärkeä&#39; : &#39;&#39;}&lt;/strong&gt;&lt;/div&gt;\n  &lt;/div&gt;\n)}</code></pre></div>\n<p>Tämä tapahtuu laajentamalla komponentissa <em>App</em> olevaa reititystä seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span><span class=\"token operator\">></span>notes<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>Home /<span class=\"token operator\">></span><span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Notes notes<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>this.state.notes<span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      /<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/notes/:id\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>match<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Note note<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>noteById<span class=\"token punctuation\">(</span>match.params.id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      /<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/Router<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span></code></pre></div>\n<p>Kaikki muistiinpanon renderöivään routeen on lisätty määre <em>exact path=\"/notes\"</em> sillä muuten se renderöityisi myös <em>/notes/3</em>-muotoisten polkujen yhteydessä.</p>\n<p>Yksittäisen muistiinpanon näkymän renderöivä route määritellään \"expressin tyyliin\" merkkaamalla reitin parametrina oleva osa merkinnällä <em>:id</em></p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">&lt;Route exact path=&quot;/notes/:id&quot; /&gt;</code></pre></div>\n<p>Renderöityvän komponentin määrittävä <em>render</em>-attribuutti pääsee käsiksi id:hen parametrinsa <a href=\"https://reacttraining.com/react-router/web/api/match\">match</a> avulla seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">render={({match}) =&gt; &lt;Note note={noteById(match.params.id)} /&gt;}</code></pre></div>\n<p>Muuttujassa <em>match.params.id</em> olevaa id:tä vastaava muistiinpano selvitetään apufunktion <em>noteById</em> avulla</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const noteById = (id) =&gt;\n  this.state.notes.find(note =&gt; note.id === Number(id))</code></pre></div>\n<p>renderöityvä <em>Note</em>-komponentti saa siis propsina urlin yksilöivää osaa vastaavan muistiinpanon.</p>\n<h3>history</h3>\n<p>Sovellukseen on myös toteutettu erittäin yksinkertainen kirjautumistoiminto. Jos sovellukseen ollaan kirjautuneena, talletetaan tieto kirjautuneesta käyttäjästä komponentin <em>App</em> tilaan <em>this.state.user</em>.</p>\n<p>Mahdollisuus <em>Login</em>-näkymään navigointiin renderöidään menuun ehdollisesti</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span><span class=\"token operator\">></span>notes<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">{</span>this.state.user\n        ? <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>this.state.user<span class=\"token punctuation\">}</span> logged in<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">></span>\n        <span class=\"token keyword\">:</span> <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">..</span>.\n  <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/Router<span class=\"token operator\">></span></code></pre></div>\n<p>eli jos käyttäjä on kirjaantunut, renderöidäänkin linkin <em>Login</em> sijaan kirjautuneen käyttäjän käyttäjätunnus:</p>\n<picture><img src=\"/static/9d8e5389508c4a3415ca5140d00ad25b/14be6/9.png\" srcset=\"/static/9d8e5389508c4a3415ca5140d00ad25b/4cce7/9.png 200w,\n/static/9d8e5389508c4a3415ca5140d00ad25b/bae5f/9.png 400w,\n/static/9d8e5389508c4a3415ca5140d00ad25b/14be6/9.png 800w,\n/static/9d8e5389508c4a3415ca5140d00ad25b/1b35a/9.png 1200w,\n/static/9d8e5389508c4a3415ca5140d00ad25b/b7120/9.png 1566w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kirjautumisen toteuttamiseen liittyy eräs mielenkiintoinen seikka. Kirjaantumislomakkeelle mennään selaimen osoitteen ollessa <em>/login</em>. Toiminnallisuuden määrittelevä Route on seuraavassa</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Login history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span> onLogin<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>this.login<span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n/<span class=\"token operator\">></span></code></pre></div>\n<p>Routen render-attribuutissa määritelty metodi ottaa nyt vastaan olion <a href=\"https://reacttraining.com/react-router/web/api/history\">history</a>, joka tarjoaa mm. mahdollisuuden manipuloida selaimen osoiterivin arvoa ohjelmallisesti.</p>\n<p>Renderöitävälle <em>Login</em>-näkymälle annetaan parametriksi <em>history</em>-olio ja kirjautumisen komponentin <em>App</em> tilaan synkronoiva funktio <em>this.login</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Login history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span> onLogin<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>this.login<span class=\"token punctuation\">}</span>/<span class=\"token operator\">></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Komponentin koodi seuraavassa</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Login = ({onLogin, history}) =&gt; {\n  const onSubmit = (event) =&gt; {\n    event.preventDefault()\n    onLogin(event.target.username.value)\n    history.push(&#39;/&#39;)\n  }\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;login&lt;/h2&gt;\n      &lt;form onSubmit={onSubmit}&gt;\n        &lt;div&gt;\n          username: &lt;input /&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          password: &lt;input type=&quot;password&quot; /&gt;\n        &lt;/div&gt;\n        &lt;button type=&quot;submit&quot;&gt;login&lt;/button&gt;\n      &lt;/form&gt;\n    &lt;/div&gt;\n  )\n}</code></pre></div>\n<p>Kirjautumisen yhteydessä funktiossa <em>onSubmit</em> kutsutaan <a href=\"https://reacttraining.com/react-router/web/api/history\">history</a>-olion metodia <em>push</em>. Käytetty komento <code>history.push('/')</code> saa aikaan sen, että selaimen osoiteriville tulee osoitteeksi <em>/</em> ja sovellus renderöi osoitetta vastaavan komponentin <em>Home</em>.</p>\n<h3>redirect</h3>\n<p>Näkymän <em>Users</em> routeen liittyy vielä eräs mielenkiintoinen detalji:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n  this.state.user\n    ? <span class=\"token operator\">&lt;</span>Users /<span class=\"token operator\">></span>\n    <span class=\"token keyword\">:</span> <span class=\"token operator\">&lt;</span>Redirect to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> /<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>/<span class=\"token operator\">></span></code></pre></div>\n<p>Jos käyttäjä ei ole kirjautuneena, ei renderöidäkään näkymää <em>Users</em> vaan sen sijaan <em>uudelleenohjataan</em> käyttäjä <em>Redirect</em>-komponentin avulla kirjautumisnäkymään</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">&lt;Redirect to=&quot;/login&quot; /&gt;</code></pre></div>\n<p>Todellisessa sovelluksessa olisi kenties parempi olla kokonaan näyttämättä navigaatiovalikossa kirjautumista edellyttäviä näkymiä jos käyttäjä ei ole kirjautunut sovellukseen.</p>\n<p>Seuraavassa vielä komponentin <em>App</em> koodi kokonaisuudessaan:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      notes: [\n        {\n          id: 1,\n          content: &#39;HTML on helppoa&#39;,\n          important: true,\n          user: &#39;Matti Luukkainen&#39;\n        },\n        // ...\n      ],\n      user: null\n    }\n  }\n\n  login = (user) =&gt; {\n    this.setState({user})\n  }\n\n  render() {\n    const noteById = (id) =&gt;\n      this.state.notes.find(note =&gt; note.id === Number(id))\n\n    return (\n      &lt;div&gt;\n        &lt;Router&gt;\n          &lt;div&gt;\n            &lt;div&gt;\n              &lt;Link to=&quot;/&quot;&gt;home&lt;/Link&gt; &amp;nbsp;\n              &lt;Link to=&quot;/notes&quot;&gt;notes&lt;/Link&gt; &amp;nbsp;\n              &lt;Link to=&quot;/users&quot;&gt;users&lt;/Link&gt; &amp;nbsp;\n              {this.state.user\n                ? &lt;em&gt;{this.state.user} logged in&lt;/em&gt;\n                : &lt;Link to=&quot;/login&quot;&gt;login&lt;/Link&gt;\n              }\n            &lt;/div&gt;\n\n            &lt;Route exact path=&quot;/&quot; render={() =&gt; &lt;Home /&gt;} /&gt;\n            &lt;Route exact path=&quot;/notes&quot; render={() =&gt; &lt;Notes notes={this.state.notes}/&gt;} /&gt;\n            &lt;Route exact path=&quot;/notes/:id&quot; render={({match}) =&gt;\n              &lt;Note note={noteById(match.params.id)} /&gt;}\n            /&gt;\n            &lt;Route path=&quot;/users&quot; render={() =&gt;\n              this.state.user\n                ? &lt;Users /&gt;\n                : &lt;Redirect to=&quot;/login&quot; /&gt;\n              }/&gt;\n            &lt;Route path=&quot;/login&quot; render={({history}) =&gt;\n              &lt;Login history={history} onLogin={this.login} /&gt;}\n            /&gt;\n          &lt;/div&gt;\n        &lt;/Router&gt;\n        &lt;div&gt;\n          &lt;em&gt;Note app, Department of Computer Science 2018&lt;/em&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Render-metodissa määritellään myös kokonaan <em>Router</em>:in ulkopuolella oleva nykyisille web-sovelluksille tyypillinen <em>footer</em>-elementti, eli sivuston pohjalla oleva osa, joka on näkyvillä riippumatta siitä mikä komponentti sovelluksen reititetyssä osassa näytetään.</p>\n<p><strong>Huom:</strong> edellä olevassa esimerkissä käytetään React Routerin versiota 4.2.6. Jos ja kun etsit esimerkkejä internetistä, kannattaa varmistaa, että niissä käytetään Routerista vähintään versiota 4.0. Nelosversio ei ole ollenkaan alaspäinyhteensopiva kolmosen kanssa, eli vanhaa React Routeria käyttävä koodi on täysin käyttökelvotonta Routerin versiota 4 käytettäessä.</p>\n<h2>tehtäviä</h2>\n<p>Tee nyt tehtävät <a href=\"/teht%C3%A4v%C3%A4t#router\">6.16-6.18</a></p>\n<h2>Valmiit käyttöliittymätyylikirjastot</h2>\n<p>Eräs lähestymistapa sovelluksen tyylien määrittelyyn on valmiin \"UI frameworkin\", eli suomeksi ehkä käyttöliittymätyylikirjaston käyttö.</p>\n<p>Ensimmäinen laajaa kuuluisuutta saanut UI framework oli Twitterin kehittämä <a href=\"https://getbootstrap.com/\">Bootstrap</a>, joka lienee edelleen UI frameworkeista eniten käytetty. Viime aikoina UI frameworkeja on noussut kuin sieniä sateella. Valikoima on niin iso, ettei tässä kannata edes yrittää tehdä tyhjentävää listaa.</p>\n<p>Monet UI-frameworkit sisältävät web-sovellusten käyttöön valmiiksi määriteltyjä teemoja sekä \"komponentteja\", kuten painikkeita, menuja, taulukkoja. Termi komponentti on edellä kirjotettu hipsuissa sillä kyse ei ole samasta asiasta kuin React-komponentti. Useimmiten UI-frameworkeja käytetään sisällyttämällä sovellukseen frameworkin määrittelemät CSS-tyylitiedostot sekä Javascript-koodi.</p>\n<p>Monesta UI-frameworkista on tehty React-ystävällisiä versiota, joissa UI-frameworkin avulla määritellyistä \"komponenteista\" on tehty React-komponentteja. Esim. Bootstrapista on olemassa parikin React-versiota <a href=\"http://reactstrap.github.io/\">reactstrap</a> ja <a href=\"https://react-bootstrap.github.io/\">react-bootstrap</a>.</p>\n<p>Katsotaan seuraavaksi kahta UI-framworkia bootstrapia ja <a href=\"https://semantic-ui.com/\">semantic ui</a>:ta.\nLisätään molempien avulla samantapaiset tyylit luvun <a href=\"/osa6/#react-router\">React-router</a> sovellukseen.</p>\n<h3>react bootstrap</h3>\n<p>Aloitetaan bootstrapista, käytetään kirjastoa <a href=\"https://react-bootstrap.github.io/\">react-bootstrap</a>.</p>\n<p>Asennetaan kirjasto suorittamalla komento</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react-bootstrap</code></pre></div>\n<p>Lisätään sitten sovelluksen <em>public/index.html</em> tiedoston <em>head</em>-tagin sisään bootstrapin css-määrittelyt lataava rivi:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  // ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Kun sovellus ladataan uudelleen, näyttää se jo aavistuksen tyylikkäämmältä:</p>\n<picture><img src=\"/static/b914b0fefd57ab72760d4c8a8e32445b/14be6/10.png\" srcset=\"/static/b914b0fefd57ab72760d4c8a8e32445b/4cce7/10.png 200w,\n/static/b914b0fefd57ab72760d4c8a8e32445b/bae5f/10.png 400w,\n/static/b914b0fefd57ab72760d4c8a8e32445b/14be6/10.png 800w,\n/static/b914b0fefd57ab72760d4c8a8e32445b/1b35a/10.png 1200w,\n/static/b914b0fefd57ab72760d4c8a8e32445b/cbaf6/10.png 1404w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Bootstrapissa koko sivun sisältö renderöidään yleensä <a href=\"https://getbootstrap.com/docs/4.0/layout/overview/#containers\">container</a>:ina, eli käytännössä koko sovelluksen ympäröivä <em>div</em>-elementti merkitään luokalla <em>container</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">// ...\n\nclass App extends React.Component {\n  // ...\n  render() {\n    return (\n      &lt;div className=&quot;container&quot;&gt;\n        // ...\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Sovelluksen ulkoasu muuttuu siten, että sisältö ei ole enää yhtä kiinni selaimen reunoissa:</p>\n<picture><img src=\"/static/c7e8beb2f708315545d1560cf80f6c8a/14be6/11.png\" srcset=\"/static/c7e8beb2f708315545d1560cf80f6c8a/4cce7/11.png 200w,\n/static/c7e8beb2f708315545d1560cf80f6c8a/bae5f/11.png 400w,\n/static/c7e8beb2f708315545d1560cf80f6c8a/14be6/11.png 800w,\n/static/c7e8beb2f708315545d1560cf80f6c8a/1b35a/11.png 1200w,\n/static/c7e8beb2f708315545d1560cf80f6c8a/8c3ef/11.png 1518w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Muutetaan seuraavaksi komponenttia <em>Notes</em> siten, että se renderöi muistiinpanojen listan <a href=\"https://getbootstrap.com/docs/4.0/content/tables/\">taulukkona</a>. React bootstrap tarjoaa valmiin komponentin <a href=\"https://react-bootstrap.github.io/components/table/\">Table</a>, joten CSS-luokan käyttöön ei ole tarvetta.</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Notes = ({notes}) =&gt; (\n  &lt;div&gt;\n    &lt;h2&gt;Notes&lt;/h2&gt;\n    &lt;Table striped&gt;\n      &lt;tbody&gt;\n        {notes.map(note=&gt;\n          &lt;tr key={note.id}&gt;\n            &lt;td&gt;\n              &lt;Link to={`/notes/${note.id}`}&gt;{note.content}&lt;/Link&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              {note.user}\n            &lt;/td&gt;\n          &lt;/tr&gt;\n        )}\n      &lt;/tbody&gt;\n    &lt;/Table&gt;\n  &lt;/div&gt;\n)</code></pre></div>\n<p>Ulkoasu on varsin tyylikäs:</p>\n<picture><img src=\"/static/d5175aa09c6e0f57668bc371c0525185/14be6/12.png\" srcset=\"/static/d5175aa09c6e0f57668bc371c0525185/4cce7/12.png 200w,\n/static/d5175aa09c6e0f57668bc371c0525185/bae5f/12.png 400w,\n/static/d5175aa09c6e0f57668bc371c0525185/14be6/12.png 800w,\n/static/d5175aa09c6e0f57668bc371c0525185/1b35a/12.png 1200w,\n/static/d5175aa09c6e0f57668bc371c0525185/b2a8e/12.png 1522w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Huomaa, että koodissa käytettävät React bootstrapin komponentit täytyy importata, eli koodiin on lisättävä:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Table <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-bootstrap'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Lomake</h4>\n<p>Parannellaan seuraavaksi näkymän <em>Login</em> kirjautumislomaketta Bootstrapin <a href=\"https://getbootstrap.com/docs/4.0/components/forms/\">lomakkeiden</a> avulla.</p>\n<p>React bootstrap tarjoaa valmiit <a href=\"https://react-bootstrap.github.io/components/forms/\">komponentit</a> myös lomakkeiden muodostamiseen (dokumentaatio tosin ei ole paras mahdollinen):</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Login = ({onLogin, history}) =&gt; {\n  // ...\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;login&lt;/h2&gt;\n      &lt;form onSubmit={onSubmit}&gt;\n        &lt;FormGroup&gt;\n          &lt;ControlLabel&gt;username:&lt;/ControlLabel&gt;\n          &lt;FormControl\n            type=&quot;text&quot;\n            name=&quot;username&quot;\n          /&gt;\n          &lt;ControlLabel&gt;password:&lt;/ControlLabel&gt;\n          &lt;FormControl\n            type=&quot;password&quot;\n          /&gt;\n          &lt;Button bsStyle=&quot;success&quot; type=&quot;submit&quot;&gt;login&lt;/Button&gt;\n        &lt;/FormGroup&gt;\n      &lt;/form&gt;\n    &lt;/div&gt;\n)}</code></pre></div>\n<p>Importoitavien komponenttien määrä kasvaa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Table<span class=\"token punctuation\">,</span>\n  FormGroup<span class=\"token punctuation\">,</span>\n  FormControl<span class=\"token punctuation\">,</span>\n  ControlLabel<span class=\"token punctuation\">,</span>\n  Button<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-bootstrap'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Lomake näyttää parantelun jälkeen seuraavalta:</p>\n<picture><img src=\"/static/1cc551bb5de16a29ae9571e49bdd5a68/14be6/12b.png\" srcset=\"/static/1cc551bb5de16a29ae9571e49bdd5a68/4cce7/12b.png 200w,\n/static/1cc551bb5de16a29ae9571e49bdd5a68/bae5f/12b.png 400w,\n/static/1cc551bb5de16a29ae9571e49bdd5a68/14be6/12b.png 800w,\n/static/1cc551bb5de16a29ae9571e49bdd5a68/1b35a/12b.png 1200w,\n/static/1cc551bb5de16a29ae9571e49bdd5a68/8b923/12b.png 1572w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>Notifikaatio</h4>\n<p>Toteutetaan sovellukseen kirjautumisen jälkeinen <em>notifikaatio</em>:</p>\n<picture><img src=\"/static/600dba48f9410ec48a8df6ec00dfd37f/14be6/13.png\" srcset=\"/static/600dba48f9410ec48a8df6ec00dfd37f/4cce7/13.png 200w,\n/static/600dba48f9410ec48a8df6ec00dfd37f/bae5f/13.png 400w,\n/static/600dba48f9410ec48a8df6ec00dfd37f/14be6/13.png 800w,\n/static/600dba48f9410ec48a8df6ec00dfd37f/1b35a/13.png 1200w,\n/static/600dba48f9410ec48a8df6ec00dfd37f/9ee03/13.png 1600w,\n/static/600dba48f9410ec48a8df6ec00dfd37f/a6552/13.png 1778w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Asetetaan notifikaatio kirjautumisen yhteydessä komponentin <em>App</em> tilan kenttään <em>message</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">login</span> <span class=\"token operator\">=</span> user <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`welcome </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ja renderöidään viesti Bootstrapin <a href=\"https://getbootstrap.com/docs/4.0/components/alerts/\">Alert</a>-komponentin avulla. React bootstrap tarjoaa tähän jälleen valmiin <a href=\"https://react-bootstrap.github.io/components/alerts/\">React-komponentin</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">{(this.state.message &amp;&amp;\n  &lt;Alert color=&quot;success&quot;&gt;\n    {this.state.message}\n  &lt;/Alert&gt;\n)}</code></pre></div>\n<h4>Navigaatiorakenne</h4>\n<p>Muutetaan vielä lopuksi sovelluksen navigaatiomenu käyttämään Bootstrapin <a href=\"https://getbootstrap.com/docs/4.0/components/navbar/\">Navbaria</a>. Tähänkin React bootstrap tarjoaa <a href=\"https://react-bootstrap.github.io/components/navbar/#navbars-mobile-friendly\">valmiit komponentit</a>, dokumentaatio on hieman kryptistä, mutta trial and error johtaa lopulta toimivaan ratkaisuun:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Navbar inverse collapseOnSelect<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Navbar.Header<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Navbar.Brand<span class=\"token operator\">></span>\n      Anecdote app\n    <span class=\"token operator\">&lt;</span>/Navbar.Brand<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Navbar.Toggle /<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/Navbar.Header<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Navbar.Collapse<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NavItem href<span class=\"token operator\">=</span><span class=\"token string\">\"#\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>/NavItem<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NavItem href<span class=\"token operator\">=</span><span class=\"token string\">\"#\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span><span class=\"token operator\">></span>notes<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>/NavItem<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NavItem href<span class=\"token operator\">=</span><span class=\"token string\">\"#\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>/NavItem<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NavItem<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>this.state.user\n          ? <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>this.state.user<span class=\"token punctuation\">}</span> logged in<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">></span>\n          <span class=\"token keyword\">:</span> <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>/NavItem<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>/Nav<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/Navbar.Collapse<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/Navbar<span class=\"token operator\">></span></code></pre></div>\n<p>Ulkoasu on varsin tyylikäs</p>\n<picture><img src=\"/static/696d1b1584cfe3f1d804e451f94b2071/14be6/14.png\" srcset=\"/static/696d1b1584cfe3f1d804e451f94b2071/4cce7/14.png 200w,\n/static/696d1b1584cfe3f1d804e451f94b2071/bae5f/14.png 400w,\n/static/696d1b1584cfe3f1d804e451f94b2071/14be6/14.png 800w,\n/static/696d1b1584cfe3f1d804e451f94b2071/1b35a/14.png 1200w,\n/static/696d1b1584cfe3f1d804e451f94b2071/9ee03/14.png 1600w,\n/static/696d1b1584cfe3f1d804e451f94b2071/9a091/14.png 1756w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Jos selaimen kokoa kaventaa, huomaamme että menu \"kollapsoituu\" ja sen saa näkyville vain klikkaamalla:</p>\n<picture><img src=\"/static/75e9480851bbe5c84f1483da328e72af/14be6/15.png\" srcset=\"/static/75e9480851bbe5c84f1483da328e72af/4cce7/15.png 200w,\n/static/75e9480851bbe5c84f1483da328e72af/bae5f/15.png 400w,\n/static/75e9480851bbe5c84f1483da328e72af/14be6/15.png 800w,\n/static/75e9480851bbe5c84f1483da328e72af/1b35a/15.png 1200w,\n/static/75e9480851bbe5c84f1483da328e72af/f5052/15.png 1476w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Bootstrap ja valtaosa tarjolla olevista UI-frameworkeista tuottavat <a href=\"https://en.wikipedia.org/wiki/Responsive_web_design\">responsiivisia</a> näkymiä, eli sellaisia jotka renderöityvät vähintään kohtuullisesti monen kokoisilla näytöillä.</p>\n<p>Chromen konsolin avulla on mahdollista simuloida sovelluksen käyttöä erilaisilla mobiilipäätteillä</p>\n<picture><img src=\"/static/1af080ec23cf2268f7ffd62979bb2996/14be6/16.png\" srcset=\"/static/1af080ec23cf2268f7ffd62979bb2996/4cce7/16.png 200w,\n/static/1af080ec23cf2268f7ffd62979bb2996/bae5f/16.png 400w,\n/static/1af080ec23cf2268f7ffd62979bb2996/14be6/16.png 800w,\n/static/1af080ec23cf2268f7ffd62979bb2996/1b35a/16.png 1200w,\n/static/1af080ec23cf2268f7ffd62979bb2996/9ee03/16.png 1600w,\n/static/1af080ec23cf2268f7ffd62979bb2996/72014/16.png 1690w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Sovellus toimii hyvin, mutta konsoliin vilkaisu paljastaa erään ikävän detaljin:</p>\n<picture><img src=\"/static/a780f2c5c127b477b0266ad4fc2f0cd0/14be6/17.png\" srcset=\"/static/a780f2c5c127b477b0266ad4fc2f0cd0/4cce7/17.png 200w,\n/static/a780f2c5c127b477b0266ad4fc2f0cd0/bae5f/17.png 400w,\n/static/a780f2c5c127b477b0266ad4fc2f0cd0/14be6/17.png 800w,\n/static/a780f2c5c127b477b0266ad4fc2f0cd0/1b35a/17.png 1200w,\n/static/a780f2c5c127b477b0266ad4fc2f0cd0/9ee03/17.png 1600w,\n/static/a780f2c5c127b477b0266ad4fc2f0cd0/a0ecf/17.png 1654w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Syy valituksiin on navigaatiorakenteessa</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>NavItem href<span class=\"token operator\">=</span><span class=\"token string\">\"#\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/NavItem<span class=\"token operator\">></span></code></pre></div>\n<p>Nämä sisäkkäiset komponentit sisältävät molemmat <em>a</em>-tagin ja React hermostuu tästä.</p>\n<p>Ongelma on ikävä ja sen kiertäminen on toki mahdollista, katso esim.\n<a href=\"https://serverless-stack.com/chapters/adding-links-in-the-navbar.html\">https://serverless-stack.com/chapters/adding-links-in-the-navbar.html</a></p>\n<p>Esimerkin sovelluksen koodi kokonaisuudessaan <a href=\"https://github.com/FullStack-HY/FullStack-Hy.github.io/wiki/bootstrap\">täällä</a>.</p>\n<h3>Semantic UI</h3>\n<p>Olen käyttänyt bootstrapia vuosia, mutta siirryin hiljattain <a href=\"https://semantic-ui.com/\">Semantic UI</a>:n käyttäjäksi. Kurssin tehtävien <a href=\"https://studies.cs.helsinki.fi/fs-stats\">palautusovellus</a> on tehty Semanticilla ja kokemukset ovat olleet rohkaisevia, erityisesti semanticin <a href=\"https://react.semantic-ui.com\">React-tuki</a> on ensiluokkainen ja dokumentaatiokin huomattavasti parempi kuin bootstrapissa.</p>\n<p>Lisätään nyt <a href=\"/osa6/#react-router\">React-router</a>-sovellukselle edellisen luvun tapaan tyylit semanticilla.</p>\n<p>Aloitetaan asentamalla <a href=\"https://react.semantic-ui.com\">semantic-ui-react</a>-kirjasto:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save semantic-ui-react</code></pre></div>\n<p>Lisätään sitten sovelluksen tiedostoon <em>public/index.html</em> head-tagin sisään semanticin css-määrittelyt lataava rivi (joka löytyy <a href=\"https://react.semantic-ui.com/usage#content-delivery-network-cdn\">tästä</a>):</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>link</span><span class=\"token punctuation\">></span></span>\n  // ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Sijoitetaan koko sovelluksen renderöimä sisältö Semanticin komponentin <a href=\"https://react.semantic-ui.com/elements/container\">Container</a> sisälle.</p>\n<p>Semanticin dokumentaatio sisältää jokaisesta komponentista useita esimerkkikoodinpätkiä, joiden avulla komponenttien käytön periaatteet on helppo omaksua:</p>\n<picture><img src=\"/static/b9e6e01b48699a864c31b3a70af7ce71/14be6/18.png\" srcset=\"/static/b9e6e01b48699a864c31b3a70af7ce71/4cce7/18.png 200w,\n/static/b9e6e01b48699a864c31b3a70af7ce71/bae5f/18.png 400w,\n/static/b9e6e01b48699a864c31b3a70af7ce71/14be6/18.png 800w,\n/static/b9e6e01b48699a864c31b3a70af7ce71/1b35a/18.png 1200w,\n/static/b9e6e01b48699a864c31b3a70af7ce71/9ee03/18.png 1600w,\n/static/b9e6e01b48699a864c31b3a70af7ce71/c09de/18.png 1740w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Muutetaan komponentin App uloin <em>div</em>-elementti <em>Containeriksi</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> <span class=\"token punctuation\">{</span> Container <span class=\"token punctuation\">}</span> from <span class=\"token string\">'semantic-ui-react'</span>\n\n// <span class=\"token punctuation\">..</span>.\n\nclass App extends React.Component <span class=\"token punctuation\">{</span>\n  // <span class=\"token punctuation\">..</span>.\n  render<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Container<span class=\"token operator\">></span>\n        // <span class=\"token punctuation\">..</span>.\n      <span class=\"token operator\">&lt;</span>/Container<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sivun sisältö ei ole enää reunoissa kiinni:</p>\n<picture><img src=\"/static/8e375f968b5bc220820e8151bce8fa4d/14be6/19.png\" srcset=\"/static/8e375f968b5bc220820e8151bce8fa4d/4cce7/19.png 200w,\n/static/8e375f968b5bc220820e8151bce8fa4d/bae5f/19.png 400w,\n/static/8e375f968b5bc220820e8151bce8fa4d/14be6/19.png 800w,\n/static/8e375f968b5bc220820e8151bce8fa4d/1b35a/19.png 1200w,\n/static/8e375f968b5bc220820e8151bce8fa4d/9ee03/19.png 1600w,\n/static/8e375f968b5bc220820e8151bce8fa4d/06ff7/19.png 1630w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Edellisen luvun tapaan, renderöidään muistiinpanot taulukkona, komponentin <a href=\"https://react.semantic-ui.com/collections/table\">Table</a> avulla. Koodi näyttää seuraavalta</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">import { Table } from &#39;semantic-ui-react&#39;\n\nconst Notes = ({ notes }) =&gt; (\n  &lt;div&gt;\n    &lt;h2&gt;Notes&lt;/h2&gt;\n    &lt;Table striped celled&gt;\n      &lt;Table.Body&gt;\n        {notes.map(note =&gt;\n          &lt;Table.Row key={note.id}&gt;\n            &lt;Table.Cell&gt;\n              &lt;Link to={`/notes/${note.id}`}&gt;{note.content}&lt;/Link&gt;\n            &lt;/Table.Cell&gt;\n            &lt;Table.Cell&gt;\n              {note.user}\n            &lt;/Table.Cell&gt;\n          &lt;/Table.Row&gt;\n        )}\n      &lt;/Table.Body&gt;\n    &lt;/Table&gt;\n  &lt;/div&gt;\n)</code></pre></div>\n<p>Muistiinpanojen lista näyttää seuraavalta:</p>\n<picture><img src=\"/static/d0606c506c403790adfc0de9f42a67ec/14be6/20.png\" srcset=\"/static/d0606c506c403790adfc0de9f42a67ec/4cce7/20.png 200w,\n/static/d0606c506c403790adfc0de9f42a67ec/bae5f/20.png 400w,\n/static/d0606c506c403790adfc0de9f42a67ec/14be6/20.png 800w,\n/static/d0606c506c403790adfc0de9f42a67ec/1b35a/20.png 1200w,\n/static/d0606c506c403790adfc0de9f42a67ec/9ee03/20.png 1600w,\n/static/d0606c506c403790adfc0de9f42a67ec/0c0a3/20.png 1624w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>Lomake</h4>\n<p>Otetaan kirjautumissivulla käyttöön Semanticin <a href=\"https://react.semantic-ui.com/collections/form\">Form</a>-komponentti:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { Form, Button } from &#39;semantic-ui-react&#39;\n\nconst Login = ({ onLogin, history }) =&gt; {\n  const onSubmit = (event) =&gt; {\n    // ...\n  }\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;login&lt;/h2&gt;\n      &lt;Form onSubmit={onSubmit}&gt;\n        &lt;Form.Field&gt;\n          &lt;label&gt;username&lt;/label&gt;\n          &lt;input name=&#39;username&#39; /&gt;\n        &lt;/Form.Field&gt;\n        &lt;Form.Field&gt;\n          &lt;label&gt;password&lt;/label&gt;\n          &lt;input type=&#39;password&#39; /&gt;\n        &lt;/Form.Field&gt;\n        &lt;Button type=&#39;submit&#39;&gt;login&lt;/Button&gt;\n      &lt;/Form&gt;\n    &lt;/div&gt;\n  )\n}</code></pre></div>\n<p>Ulkoasu näyttää seuraavalta:</p>\n<picture><img src=\"/static/d48b0e0c1325bf6e19c3ddc6e70419d0/14be6/21.png\" srcset=\"/static/d48b0e0c1325bf6e19c3ddc6e70419d0/4cce7/21.png 200w,\n/static/d48b0e0c1325bf6e19c3ddc6e70419d0/bae5f/21.png 400w,\n/static/d48b0e0c1325bf6e19c3ddc6e70419d0/14be6/21.png 800w,\n/static/d48b0e0c1325bf6e19c3ddc6e70419d0/1b35a/21.png 1200w,\n/static/d48b0e0c1325bf6e19c3ddc6e70419d0/b4b8e/21.png 1380w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>Notifikaatio</h4>\n<p>Edellisen luvun tapaan, toteutetaan sovellukseen kirjautumisen jälkeinen <em>notifikaatio</em>:</p>\n<picture><img src=\"/static/7ee600a5c64170469543b2a9d7fc7e5d/14be6/22.png\" srcset=\"/static/7ee600a5c64170469543b2a9d7fc7e5d/4cce7/22.png 200w,\n/static/7ee600a5c64170469543b2a9d7fc7e5d/bae5f/22.png 400w,\n/static/7ee600a5c64170469543b2a9d7fc7e5d/14be6/22.png 800w,\n/static/7ee600a5c64170469543b2a9d7fc7e5d/1b35a/22.png 1200w,\n/static/7ee600a5c64170469543b2a9d7fc7e5d/f5052/22.png 1476w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kuten edellisessä luvussa, asetetaan notifikaatio kirjautumisen yhteydessä komponentin <em>App</em> tilan kenttään <em>message</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">login</span> <span class=\"token operator\">=</span> user <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`welcome </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ja renderöidään viesti käyttäen komponenttia <a href=\"https://react.semantic-ui.com/collections/message\">Message</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">{(this.state.message &amp;&amp;\n  &lt;Message success&gt;\n    {this.state.message}\n  &lt;/Message&gt;\n)}</code></pre></div>\n<h4>Navigaatiorakenne</h4>\n<p>Navigaatiorakenne toteutetaan komponentin <a href=\"https://react.semantic-ui.com/collections/menu\">Menu</a> avulla:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Menu inverted<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Menu.Item link<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/Menu.Item<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Menu.Item link<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/notes\"</span><span class=\"token operator\">></span>notes<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/Menu.Item<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Menu.Item link<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/Menu.Item<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Menu.Item link<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>this.state.user\n      ? <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>this.state.user<span class=\"token punctuation\">}</span> logged in<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">></span>\n      <span class=\"token keyword\">:</span> <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span>/Link<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>/Menu.Item<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/Menu<span class=\"token operator\">></span></code></pre></div>\n<p>Lopputulos näyttää seuraavalta:</p>\n<picture><img src=\"/static/4d9567f0b1d250dacb099d30d764db21/14be6/23.png\" srcset=\"/static/4d9567f0b1d250dacb099d30d764db21/4cce7/23.png 200w,\n/static/4d9567f0b1d250dacb099d30d764db21/bae5f/23.png 400w,\n/static/4d9567f0b1d250dacb099d30d764db21/14be6/23.png 800w,\n/static/4d9567f0b1d250dacb099d30d764db21/1b35a/23.png 1200w,\n/static/4d9567f0b1d250dacb099d30d764db21/9ee03/23.png 1600w,\n/static/4d9567f0b1d250dacb099d30d764db21/beddc/23.png 1610w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Bootstrapin yhteydessä esiintynyttä sisäkkäisen <em>a</em>-tagien ongelmaa ei semanticin kanssa ole.</p>\n<p>Esimerkin sovelluksen koodi kokonaisuudessaan <a href=\"https://github.com/FullStack-HY/FullStack-Hy.github.io/wiki/semantic-ui\">täällä</a>.</p>\n<h3>Loppuhuomioita</h3>\n<p>Ero react-bootstrapin ja semantic-ui-reactin välillä ei ole suuri. On makuasia kummalla tuotettu ulkoasu on tyylikkäämpi. Oma vuosia kestäneen bootstrapin käytön jälkeinen siirtymiseni semanticiin johtuu semanticin saumattomammasta React-tuesta, laajemmasta valmiiden komponenttien valikoimasta ja paremmasta sekä selkeämmästä dokumentaatiosta. Semantic UI projektin kehitystyön jatkuvuuden suhteen on kuitenkin viime aikoina ollut ilmoilla muutamia <a href=\"https://github.com/Semantic-Org/Semantic-UI/issues/6109\">kysymysmerkkejä</a>, ja tilannetta kannattaakin seurata.</p>\n<p>Esimerkissä käytettiin UI-frameworkeja niiden React-integraatiot tarjoavien kirjastojen kautta.</p>\n<p>Sen sijaan että käytimme kirjastoa <a href=\"https://react-bootstrap.github.io/\">React bootstrap</a>, olisimme voineet aivan yhtä hyvin käyttää Bootstrapia suoraan, liittämällä HTML-elementteihin CSS-luokkia. Eli sen sijaan että määrittelimme esim. taulukon komponentin <em>Table</em> avulla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Table striped<span class=\"token operator\">></span>\n  // <span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">&lt;</span>/Table<span class=\"token operator\">></span></code></pre></div>\n<p>olisimme voineet käyttää normaalia HTML:n taulukkoa <em>table</em> ja CSS-luokkaa</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>table className<span class=\"token operator\">=</span><span class=\"token string\">\"table striped\"</span><span class=\"token operator\">></span>\n  // <span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">&lt;</span>/table<span class=\"token operator\">></span></code></pre></div>\n<p>Taulukon määrittelyssä React bootstrapin tuoma etu ei ole suuri.</p>\n<p>Tiiviimmän ja ehkä paremmin luettavissa olevan kirjoitusasun lisäksi toinen etu React-kirjastoina olevissa UI-frameworkeissa on se, että kirjastojen mahdollisesti käyttämä Javascript-koodi on sisällytetty React-komponentteihin. Esim. osa Bootstrapin komponenteista edellyttää toimiakseen muutamaakin ikävää <a href=\"https://getbootstrap.com/docs/4.0/getting-started/introduction/#js\">Javascript-riippuvuutta</a> joita emme mielellään halua React-sovelluksiin sisällyttää.</p>\n<p>React-kirjastoina tarjottavien UI-frameworkkien ikävä puoli verrattuna frameworkin \"suoraan käyttöön\" on React-kirjastojen API:n mahdollinen epästabiilius ja osittain huono dokumentaatio. Tosin <a href=\"https://react.semantic-ui.com\">react-semanticin</a> suhteen tilanne on paljon parempi kuin monien muiden UI-frameworkien sillä kyseessä on virallinen React-integraatio.</p>\n<p>Kokonaan toinen kysymys on se kannattaako UI-frameworkkeja ylipäätän käyttää. Kukin muodostakoon oman mielipiteensä, mutta CSS:ää taitamattomalle ja puutteellisilla design-taidoilla varustetulle ne ovat varsin käyttökelpoisia työkaluja.</p>\n<h3>Muita UI-frameworkeja</h3>\n<p>Luetellaan tässä kaikesta huolimatta muitakin UI-frameworkeja. Jos oma suosikkisi ei ole mukana, tee pull request</p>\n<ul>\n<li><a href=\"http://www.material-ui.com/\">http://www.material-ui.com/</a></li>\n<li><a href=\"https://bulma.io/\">https://bulma.io/</a></li>\n<li><a href=\"https://ant.design/\">https://ant.design/</a></li>\n<li><a href=\"https://foundation.zurb.com/\">https://foundation.zurb.com/</a></li>\n</ul>\n<p>Alun perin tässä osassa oli tarkoitus käyttää <a href=\"http://www.material-ui.com/\">Material UI</a>:ta, mutta kirjasto on juuri nyt kiivaan kehityksen alla ennen version 1.0 julkaisemista ja osa dokumentaation esimerkeistä ei toiminut uusimmalla versiolla. Voikin olla viisainta odotella Materialin kanssa versiota 1.0.</p>\n<h2>Tehtäviä</h2>\n<p>Tee nyt tehtävät <a href=\"/teht%C3%A4v%C3%A4t#ui-framework\">6.21-6.23</a></p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-6-d6924a30e54668b01a539aa7bc2db9e8.svg"},"part":6,"letter":"d"}}},"pageContext":{"part":6,"letter":"d"}}