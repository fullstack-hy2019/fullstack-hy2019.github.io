{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<h2>Tehtävät</h2>\n<p>Osassa on 23 tehtävää joissa jatketaan osissa 4 ja 5 tehtyä Bloglist-sovellusta. Suurin osa tämän osan tehtävistä on toisistaan riippumattomia \"featureita\", eli tehtäviä ei tarvitse tehdä järjestyksessä, voit jättää osan aivan hyvin toteuttamatta.</p>\n<p>Voit ottaa pohjaksi oman sovelluksesi sijaan myös mallivastauksen koodin.</p>\n<p><strong>HUOM</strong> jos et ole tehnyt jonkun osan tehtäviä, ei palautussovelluksessa ole linkkiä osan mallivastaukseen. Pääset kuitenkin mallivastaukseen kirjoittamalla linkin suoraan selaimen osoiteriville.</p>\n<p>Useimmat tämän osan tehtävistä vaativat olemassaolevan koodin refaktoroimista. Tämä on tilanne käytännössä aina sovelluksia laajennettaessa, eli vaikka refaktorointi voi olla hankalaa ja ikävääkin, on kyseessä oleellinen taito.</p>\n<p>Hyvä neuvo niin refaktorointiin kuin uudenkin koodin kirjoittamiseen on <em>pienissä askelissa eteneminen</em>, koodia ei kannata hajottaa totaalisesti refaktorointia tehdessä pitkäksi aikaa, se on käytännössä varma resepti hermojen menettämiseen.</p>\n<div class=\"important\">\n  Jos aiot tehdä tehtävät 7.8-7.11 eli siirtää sovelluksen tilanhallinnan reduxin vastuulle, saattaa olla helpompi tehdä reduxiin siirtymiseen vaadittava refaktorointi ennen muiden tehtävien tekemistä.\n</div>\n<h3>7.1 käyttäjien näkymä</h3>\n<p>Tee sovellukseen näkymä, joka näyttää kaikkiin käyttäjiin liittyvät perustietot:</p>\n<p>![]({{ \"/assets/teht/53.png\" | absolute_url }})</p>\n<h3>7.2 yksittäisen käyttäjän näkymä, osa 1</h3>\n<p>Tee sovellukseen yksittäisen käyttäjän näkymä, jolta selviää mm. käyttäjän lisäämät blogit</p>\n<p>![]({{ \"/assets/teht/54.png\" | absolute_url }})</p>\n<p>Näkymään päästään klikkaamalla nimeä kaikkien käyttäjien näkymästä</p>\n<p>![]({{ \"/assets/teht/55.png\" | absolute_url }})</p>\n<h3>7.3 yksittäisen käyttäjän näkymä osa, 2</h3>\n<p>Merkkaa tämä tehtävä tehdyksi jos toteuttamasi yksittäisen käyttäjän näkymä toimii oikein myös siinä tilanteessa että menet urliin suoraan tai refreshaat selaimen ollessasi käyttäjän näkymässä.</p>\n<h3>7.4 blogin näkymä</h3>\n<p>Toteuta sovellukseen oma näkymä yksittäisille blogeille. Näkymä voi näyttää seuraavalta</p>\n<p>![]({{ \"/assets/teht/49.png\" | absolute_url }})</p>\n<p>Näkymään päästään klikkaamalla blogin nimeä kaikkien blogien näkymästä</p>\n<p>![]({{ \"/assets/teht/50.png\" | absolute_url }})</p>\n<p>Tämän tehtävän jälkeen tehtävässä 5.6 toteutettua toiminnallisuutta ei enää tarvita, eli kaikkien blogien näkymässä yksittäisten blogien detaljien ei enää tarvitse avautua klikatessa.</p>\n<h3>7.5 navigointi</h3>\n<p>Tee sovellukseen navigaatiomenu</p>\n<p>![]({{ \"/assets/teht/56.png\" | absolute_url }})</p>\n<h3>7.6 kommentit, osa 1</h3>\n<p>Tee sovellukseen mahdollisuus blogien kommentointiin:</p>\n<p>![]({{ \"/assets/teht/51.png\" | absolute_url }})</p>\n<p>Kommentit ovat anonyymejä, eli ne eivät liity järjestelmän käyttäjiin.</p>\n<p>Tässä tehtävässä riittää, että frontend osaa näyttää blogilla olevat backendin kautta lisätyt kommentit.</p>\n<p>Sopiva rajapinta kommentin luomiseen on osoitteeseen <em>api/blogs/:id/comments</em> tapahtuva HTTP POST -pyyntö.</p>\n<h3>7.7 kommentit, osa 2</h3>\n<p>Laajenna sovellusta siten, että kommentointi onnistuu frontendista käsin:</p>\n<p>![]({{ \"/assets/teht/52.png\" | absolute_url }})</p>\n<h3>7.8 redux, osa 1</h3>\n<p>Siirry käyttämään React-komponenttien tilan eli <em>staten</em> sijaan Reduxia.</p>\n<p>Muuta tässä tehtävässä notifikaatio käyttämään Reduxia.</p>\n<h3>7.9 redux, osa 2</h3>\n<p>Siirrä kaikkien käyttäjien tietojen talletus Reduxiin. Varmista, että sekä kaikkien käyttäjien että yksittäisen käyttäjän näkymät toimivat edelleen.</p>\n<p>Tässä tehtävässä saattaa olla hyödyksi käyttää metodin <em>mapStateToProps</em> toista parametria\n<a href=\"https://github.com/reactjs/react-redux/blob/master/docs/api.md#inject-todos-of-a-specific-user-depending-on-props\">ownPropsia</a> joka on dokumentaation hienoisesta kryptisyydestä huolimatta <a href=\"https://stackoverflow.com/questions/41198842/what-is-the-use-of-the-ownprops-arg-in-mapstatetoprops-and-mapdispatchtoprops\">aika simppeli</a> asia.</p>\n<h3>7.10 redux, osa 3</h3>\n<p>Siirrä myös blogien tietojen talletus Reduxiin.</p>\n<p>Uuden blogin luomislomakkeen tilaa voit halutessasi hallita edelleen reactin tilan avulla.</p>\n<p>Tämä ja seuraava osa ovat kohtuullisen työläitä, mutta erittäin opettavaisia.</p>\n<h3>7.11 redux, osa 4</h3>\n<p>Siirrä myös kirjautuneen käyttäjän tietojen talletus Reduxiin.</p>\n<h3>7.12 tyylit, osa 1</h3>\n<p>Tee sovelluksesi ulkoasusta tyylikkäämpi jotain kurssilla esiteltyä tapaa käyttäen</p>\n<h3>7.13 tyylit, osa 2</h3>\n<p>Jos käytät tyylien lisäämiseen yli tunnin aikaa, merkkaa myös tämä tehtävä tehdyksi.</p>\n<h3>7.14 ESLint</h3>\n<p>Konfiguroi frontend käyttämään Lintiä</p>\n<h3>7.15 Webpack</h3>\n<p>Tee sovellukselle sopiva webpack-konfiguraatio</p>\n<h3>7.16 backendin testaus</h3>\n<p>Tee backendille lisää testejä. Voit merkitä rastin kun olet käyttänyt testien tekemiseen noin 45 minuuttia.</p>\n<h3>7.17 frontendin testaus</h3>\n<p>Tee frontendille tai reducereille testejä. Voit merkitä rastin kun olet käyttänyt testien tekemiseen noin 45 minuuttia.</p>\n<h3>7.18 snapshot-testaus</h3>\n<p>Ota sovelluksessasi käyttöön <a href=\"https://facebook.github.io/jest/docs/en/snapshot-testing.html\">snapshot testing</a></p>\n<h3>7.19 headless-testaus</h3>\n<p>Tee Puppeteeria tai haluamaasi kirjastoa käyttäviä headless-testejä, testaa ainakin paria toiminnallisuutta.</p>\n<h3>7.23 Kurssipalaute</h3>\n<p>Anna kurssille palautetta Moodlessa.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-7-e86c21108367fe9d9c833e8905547e9c.svg"},"part":7,"letter":"f"}}},"pageContext":{"part":7,"letter":"f"}}