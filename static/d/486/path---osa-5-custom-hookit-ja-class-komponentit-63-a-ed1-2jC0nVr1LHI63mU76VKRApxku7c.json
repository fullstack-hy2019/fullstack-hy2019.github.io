{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>React tarjoaa yhteensä 10 erilaista <a href=\"https://reactjs.org/docs/hooks-reference.html\">valmista hookia</a>, näistä ylivoimaisesti eniten käytetyt ovat meillekin jo tutut <a href=\"https://reactjs.org/docs/hooks-reference.html#usestate\">useState</a> ja <a href=\"https://reactjs.org/docs/hooks-reference.html#useeffect\">useEffect</a>. </p>\n<p>React tarjoaa myös omien eli <a href=\"https://reactjs.org/docs/hooks-custom.html\">custom</a>-hookien määrittelyyn. Customhookien pääasiallinen tarkoitus on Reactin dokumentaation mukaan mahdollistaa komponenttien logiikan uusiokäyttö</p>\n<blockquote>\n<p><i>Building your own Hooks lets you extract component logic into reusable functions.</i></p>\n</blockquote>\n<p>Custom hookit ovat tavallisia Javascripfunktioita, jotka voivat kutsua mitä tahansa muita hookeja kunhan vaan toimivat <a href=\"osa1/monimutkaisempi_tila_reactin_debuggaus#hookien-saannot\">hookien sääntöjen</a> puitteissa. Custom hookin nimen täytyy alkaa sanalla <em>use</em>.</p>\n<p>Teimme osassa 1 </p>\n<p>´´´js<br>\nimport React, { useState } from 'react'\nconst App = (props) => {\nconst [counter, setCounter] = useState(0)</p>\n<p>  return (\n<div>\n<div>{counter}</div>\n&#x3C;button onClick={() => setCounter(counter + 1)}>\nplus\n</button>\n&#x3C;button onClick={() => setCounter(counter - 1)}>\nminus\n</button><br>\n&#x3C;button onClick={() => setCounter(0)}>\nzero\n</button>\n</div>\n)\n}\n´´´\nexport default App</p>\n</div>\n<div class=\"tasks\">\n<h3>Tehtäviä</h3>\n<h4>5.18</h4>\n<h4>5.19</h4>\n</div>\n<div class=\"content\">\n</div>\n<div class=\"tasks\">\n<h3>Tehtäviä</h3>\n<h4>5:20</h4>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-5-1d38df3161654915a233d16795c6c490.svg"},"part":5,"letter":"d"}}},"pageContext":{"part":5,"letter":"d"}}