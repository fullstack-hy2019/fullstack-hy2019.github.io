{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<h3>CSS</h3>\n<p>Lisätään sovellukseemme hieman CSS:ää. Tehdään tiedosto <em>src/index.css</em></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #dee8e4<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Määritellään tyyli käytettäväksi komponentissa <em>App</em></p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const App = () =&gt; (\n  &lt;div className=&quot;container&quot;&gt;\n    hello webpack\n  &lt;/div&gt;\n)</code></pre></div>\n<p>ja importataan se tiedostossa <em>index.js</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Transpilointi hajoaa, ja CSS:ää varten onkin otettava käyttöön <a href=\"https://webpack.js.org/loaders/css-loader/\">css</a>- ja <a href=\"https://webpack.js.org/loaders/style-loader/\">style</a>-loaderit:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n      query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n      loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://webpack.js.org/loaders/css-loader/\">css-loaderin</a> tehtävänä on ladata <em>CSS</em>-tiedostot, ja <a href=\"https://webpack.js.org/loaders/style-loader/\">style-loader</a> generoi koodiin CSS:t sisältävän <em>style</em>-elementin.</p>\n<p>Näin konfiguroituna CSS-määrittelyt sisällytetään sovelluksen Javascriptin sisältävään tiedostoon <em>main.js</em>. Sovelluksen päätiedostossa <em>index.html</em> ei siis ole tarvetta erikseen ladata CSS:ää.</p>\n<p>CSS voidaan tarpeen vaatiessa myös generoida omaan tiedostoonsa esim. <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin\">mini-css-extract-pluginin</a> avulla.</p>\n<p>Kun loaderit asennetaan</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> style-loader css-loader --save-dev</code></pre></div>\n<p>bundlaus toimii taas ja sovellus saa uudet tyylit.</p>\n<h3>Webpack-dev-server</h3>\n<p>Sovelluskehitys onnistuu jo, mutta development workflow on suorastaan hirveä (alkaa jo muistuttaa Javalla tapahtuvaa sovelluskehitystä...), muutosten jälkeen koodin on bundlattava ja selain uudelleenladattava jos haluamme testata koodia.</p>\n<p>Ratkaisun tarjoaa <a href=\"https://webpack.js.org/guides/development/#using-webpack-dev-server\">webpack-dev-server</a>. Asennetaan se komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack-dev-server</code></pre></div>\n<p>Määritellään dev-serverin käynnistävä npm-skripti:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n  // <span class=\"token punctuation\">..</span>.\n  <span class=\"token string\">\"scripts\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span>,\n    <span class=\"token string\">\"start\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"webpack-dev-server --mode=development\"</span>\n  <span class=\"token punctuation\">}</span>,\n  // <span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lisätään tiedostoon <em>webpack.config.js</em> kenttä <em>devServer</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    contentBase<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    compress<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Komento <em>npm start</em> käynnistää nyt dev-serverin porttiin, eli sovelluskehitys tapahtuu avaamalla tuttuun tapaan selain osoitteeseen <a href=\"http://localhost:3000\">http://localhost:3000</a>. Kun teemme koodiin muutoksia, reloadaa selain automaattisesti itsensä.</p>\n<p>Päivitysprosessi on nopea, dev-serveriä käytettäessä webpack ei bundlaa koodia normaaliin tapaan tiedostoksi <em>main.js</em>, bundlauksen tuotos on olemassa ainoastaan keskusmuistissa.</p>\n<p>Laajennetaan koodia muuttamalla komponentin <em>App</em> määrittelyä seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 0\n    }\n  }\n\n  render() {\n    return (\n      &lt;div className=&quot;container&quot;&gt;\n        &lt;p&gt;hello webpack {this.state.counter} clicks&lt;/p&gt;\n        &lt;button onClick={()=&gt;this.setState({counter: this.state.counter+1})}&gt;click&lt;/button&gt;\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Kannattaa huomata, että virheviestit eivät renderöidy selaimeen kuten create-react-app:illa tehdyissä sovelluksissa, eli on seurattava tarkasti konsolia:</p>\n<picture><img src=\"/static/0b18cbbf231eae0c9b7b19966178ae5e/14be6/5.png\" srcset=\"/static/0b18cbbf231eae0c9b7b19966178ae5e/4cce7/5.png 200w,\n/static/0b18cbbf231eae0c9b7b19966178ae5e/bae5f/5.png 400w,\n/static/0b18cbbf231eae0c9b7b19966178ae5e/14be6/5.png 800w,\n/static/0b18cbbf231eae0c9b7b19966178ae5e/1b35a/5.png 1200w,\n/static/0b18cbbf231eae0c9b7b19966178ae5e/9ee03/5.png 1600w,\n/static/0b18cbbf231eae0c9b7b19966178ae5e/e5766/5.png 1758w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Sovellus toimii hyvin ja kehitys on melko sujuvaa.</p>\n<h3>Sourcemappaus</h3>\n<p>Erotetaan napin klikkauksenkäsittelijä omaksi funktioksi:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 0\n    }\n  }\n\n  onClick() {\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  render() {\n    return (\n      &lt;div className=&quot;container&quot;&gt;\n        &lt;p&gt;hello webpack {this.state.counter} clicks&lt;/p&gt;\n        &lt;button onClick={this.onClick}&gt;click&lt;/button&gt;\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Sovellus ei enää toimi, ja konsoli kertoo virheestä</p>\n<picture><img src=\"/static/98efc3767a59689cf738f2c15116f87f/14be6/6.png\" srcset=\"/static/98efc3767a59689cf738f2c15116f87f/4cce7/6.png 200w,\n/static/98efc3767a59689cf738f2c15116f87f/bae5f/6.png 400w,\n/static/98efc3767a59689cf738f2c15116f87f/14be6/6.png 800w,\n/static/98efc3767a59689cf738f2c15116f87f/1b35a/6.png 1200w,\n/static/98efc3767a59689cf738f2c15116f87f/9ee03/6.png 1600w,\n/static/98efc3767a59689cf738f2c15116f87f/22439/6.png 1804w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Tiedämme tietenkin nyt että virhe on metodissa onClick, mutta jos olisi kyse suuremmasta sovelluksesta, on virheilmoitus sikäli hyvin ikävä, että sen ilmoittama paikka:</p>\n<pre>\nApp.js:38 Uncaught TypeError: Cannot read property 'setState' of undefined\n    at onClick (App.js:38)\n</pre>\n<p>ei vastaa alkuperäisen koodin virheen sijaintia. Jos klikkaamme virheilmoitusta, huomaamme, että näytettävä koodi on jotain ihan muuta kuin kirjoittamamme koodi:</p>\n<picture><img src=\"/static/049b912cf174542f1b7c79f34aeb7f6a/14be6/6a.png\" srcset=\"/static/049b912cf174542f1b7c79f34aeb7f6a/4cce7/6a.png 200w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/bae5f/6a.png 400w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/14be6/6a.png 800w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/1b35a/6a.png 1200w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/9ee03/6a.png 1600w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/ee155/6a.png 1764w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Haluamme tietenkin, että virheilmoitusten yhteydessä näytetään kirjoittamamme koodi.</p>\n<p>Korjaus on onneksi hyvin helppo, pyydetään webpackia generoimaan bundlelle ns. <a href=\"https://webpack.js.org/configuration/devtool/\">source map</a>, jonka avulla bundlea suoritettaessa tapahtuva virhe on mahdollista <em>mäpätä</em> alkuperäisen koodin vastaavaan kohtaan.</p>\n<p>Source map saadaan generoitua lisäämällä konfiguraatioon kenttä <em>devtool</em> ja sen arvoksi 'source-map':</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Konfiguraatioiden muuttuessa webpack tulee käynnistää uudelleen, on tosin mahdollista konfiguroida webpack tarkkailemaan konfiguraatioiden muutoksia, mutta emme tee sitä.</p>\n<p>Nyt virheilmoitus on hyvä</p>\n<picture><img src=\"/static/0476f60ccac3298b85b6ab007eea200b/14be6/7.png\" srcset=\"/static/0476f60ccac3298b85b6ab007eea200b/4cce7/7.png 200w,\n/static/0476f60ccac3298b85b6ab007eea200b/bae5f/7.png 400w,\n/static/0476f60ccac3298b85b6ab007eea200b/14be6/7.png 800w,\n/static/0476f60ccac3298b85b6ab007eea200b/1b35a/7.png 1200w,\n/static/0476f60ccac3298b85b6ab007eea200b/9ee03/7.png 1600w,\n/static/0476f60ccac3298b85b6ab007eea200b/cac2e/7.png 1930w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Source mapin käyttö mahdollistaa myös chromen debuggerin luontevan käytön</p>\n<picture><img src=\"/static/51090b992f6d4d497136b9edf4b17d9a/14be6/8.png\" srcset=\"/static/51090b992f6d4d497136b9edf4b17d9a/4cce7/8.png 200w,\n/static/51090b992f6d4d497136b9edf4b17d9a/bae5f/8.png 400w,\n/static/51090b992f6d4d497136b9edf4b17d9a/14be6/8.png 800w,\n/static/51090b992f6d4d497136b9edf4b17d9a/1b35a/8.png 1200w,\n/static/51090b992f6d4d497136b9edf4b17d9a/9ee03/8.png 1600w,\n/static/51090b992f6d4d497136b9edf4b17d9a/1888a/8.png 1936w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kyseinen virhe on siis jo <a href=\"/osa1#metodien-k%C3%A4ytt%C3%B6-ja-this\">osasta 1</a> tuttu this:in kadottaminen. Korjataan ongelma määrittelemällä metodi uudelleen meille jo kovin tutulla syntaksilla:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Tästä aiheutuu kuitenkin virheilmoitus</p>\n<picture><img src=\"/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/14be6/9.png\" srcset=\"/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/4cce7/9.png 200w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/bae5f/9.png 400w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/14be6/9.png 800w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/1b35a/9.png 1200w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/9ee03/9.png 1600w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/66f7e/9.png 1866w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Virhe johtuu siitä, että käyttämämme syntaksi ei ole vielä mukana Javascriptin uusimmassa standardissa ES7. Saamme syntaksin käyttöön asentamalla <a href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">transform-class-properties</a>-pluginin komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> babel-plugin-transform-class-properties --save-dev</code></pre></div>\n<p>ja kehottamalla <em>babel-loader</em>:ia käyttämään pluginia:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-plugin-transform-class-properties'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Koodin minifiointi</h3>\n<p>Kun sovellus viedään tuotantoon, on siis käytössä tiedostoon <em>main.js</em> webpackin generoima koodi. Vaikka sovelluksemme sisältää omaa koodia vain muutaman rivin, on tiedoston <em>main.js</em> koko 557450 tavua, sillä se sisältää myös kaiken React-kirjaston koodin. Tiedoston koollahan on sikäli väliä, että selain joutuu lataamaan tiedoston kun sovellusta aletaan käyttämään. Nopeilla internetyhteyksillä 557450 tavua ei sinänsä ole ongelma, mutta jos mukaan sisällytetään enemmän kirjastoja, alkaa sovelluksen lataaminen pikkuhiljaa hidastua etenkin mobiilikäytössä.</p>\n<p>Jos tiedoston sisältöä tarkastelee, huomaa että sitä voisi optimoida huomattavasti koon suhteen esim. poistamalla kommentit. Tiedostoa ei kuitenkaan kannata lähteä optimoimaan käsin, sillä tarkoitusta varten on olemassa monia työkaluja.</p>\n<p>Javascript-tiedostojen optimointiprosessista käytetään nimitystä <em>minifiointi</em>. Alan johtava työkalu tällä hetkellä lienee <a href=\"http://lisperator.net/uglifyjs/\">UglifyJS</a>.</p>\n<p>Webpackin versiosta 4 alkaen pluginia ei ole tarvinnut konfiguroida erikseen, riittää että muutetaan tiedoston <em>package.json</em> määrittelyä siten, että koodin bundlaus tapahtuu <em>production</em>-moodissa:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-osa7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-dev-server --mode=development\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    // ...\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    // ...\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kun sovellus bundlataan uudelleen, pienenee tuloksena oleva <em>main.js</em> mukavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">-rw-r--r--  1 mluukkai  984178727  101944 Mar  3 21:29 main.js</code></pre></div>\n<p>Minifioinnin lopputulos on kuin vanhan liiton c-koodia, kommentit ja jopa turhat välilyönnit ja rivinvaihdot on poistettu ja muuttujanimet ovat yksikirjaimisia:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> e<span class=\"token operator\">=</span><span class=\"token function\">u</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=</span>c<span class=\"token punctuation\">,</span>c<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>f<span class=\"token operator\">&lt;</span>t<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>s<span class=\"token operator\">&amp;&amp;</span>s<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>f<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>t<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span>s<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>o<span class=\"token operator\">===</span>clearTimeout<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o<span class=\"token operator\">===</span>l<span class=\"token operator\">||</span><span class=\"token operator\">!</span>o<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>clearTimeout<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> o<span class=\"token operator\">=</span>clearTimeout<span class=\"token punctuation\">,</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">nextTick</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Sovelluskehitys- ja tuotantokonfiguraatio</h3>\n<p>Lisätään sovellukselle backend. Käytetään jo tutuksi käynyttä muistiinpanoja tarjoavaa palvelua.</p>\n<p>Talletetaan seuraava sisältö tiedostoon <em>db.json</em></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"notes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"HTML on helppoa\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b8481bb01f9cb00ccb4a9\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mongo osaa tallettaa oliot\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b920a61e8c8d3f484bdd0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tarkoituksena on konfiguroida sovellus webpackin avulla siten, että paikallisesti sovellusta kehitettäessä käytetään backendina portissa 3001 toimivaa json-serveriä.</p>\n<p>Bundlattu tiedosto laitetaan sitten käyttämään todellista, osoitteessa <a href=\"https://radiant-plateau-25399.herokuapp.com/api/notes\">https://radiant-plateau-25399.herokuapp.com/api/notes</a> olevaa backendia.</p>\n<p>Asennetaan <em>axios</em>, käynnistetään json-server ja muokataan komponenttia <em>App</em> seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 0,\n      noteCount: 0\n    }\n  }\n\n  componentDidMount() {\n    axios.get(&#39;http://localhost:3001/notes&#39;).then(result =&gt; {\n      this.setState({ noteCount: result.data.length })\n    })\n  }\n\n  onClick = () =&gt; {\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  render() {\n    return (\n      &lt;div className=&quot;container&quot;&gt;\n        &lt;p&gt;hello webpack {this.state.counter} clicks&lt;/p&gt;\n        &lt;button onClick={this.onClick}&gt;click&lt;/button&gt;\n        &lt;p&gt;{this.state.noteCount} notes in server&lt;/p&gt;\n      &lt;/div&gt;\n    )\n  }\n}</code></pre></div>\n<p>Koodissa on nyt kovakoodattuna sovelluskehityksessä käytettävän palvelimen osoite. Miten saamme osoitteen hallitusti muutettua osoittamaan internetissä olevaan backendiin bundlatessamme koodin?</p>\n<p>Muutetaan <em>webpack.config.js</em> oliosta <a href=\"https://webpack.js.org/configuration/configuration-types/#exporting-a-function\">funktioksi</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Määrittely on muuten täysin sama, mutta aiemmin eksportattu olio on nyt määritellyn funktion paluuarvo. Funktio saa parametrit <em>env</em> ja <em>argv</em>, joista jälkimmäisen avulla saamme selville npm-skriptissä määritellyn <em>moden</em>.</p>\n<p>Webpackin <a href=\"https://webpack.js.org/plugins/define-plugin/\">DefinePlugin</a>:in avulla voimme määritellä globaaleja <em>vakioarvoja</em>, joita on mahdollista käyttää bundlattavassa koodissa. Määritellään nyt vakio <em>BACKEND</em>URL_, joka saa eri arvon riippuen siitä ollaanko kehitysympäristössä vai tehdäänkö tuotantoon sopivaa bundlea:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">const path <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\nconst webpack <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\n\nconst config <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>env, argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'argv'</span>, argv.mode<span class=\"token punctuation\">)</span>\n\n  const backend_url <span class=\"token operator\">=</span> argv.mode <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token string\">'production'</span>\n    ? <span class=\"token string\">'https://radiant-plateau-25399.herokuapp.com/api/notes'</span>\n    <span class=\"token keyword\">:</span> <span class=\"token string\">'http://localhost:3001/notes'</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry: <span class=\"token string\">'./src/index.js'</span>,\n    output: <span class=\"token punctuation\">{</span>\n      path: path.resolve<span class=\"token punctuation\">(</span>__dirname, <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span>,\n      filename: <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span>,\n    devServer: <span class=\"token punctuation\">{</span>\n      contentBase: path.resolve<span class=\"token punctuation\">(</span>__dirname, <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span>,\n      compress: true,\n      port: 3000\n    <span class=\"token punctuation\">}</span>,\n    devtool: <span class=\"token string\">'source-map'</span>,\n    module: <span class=\"token punctuation\">{</span>\n      // <span class=\"token punctuation\">..</span>.\n    <span class=\"token punctuation\">}</span>,\n    plugins: <span class=\"token punctuation\">[</span>\n      new webpack.DefinePlugin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        BACKEND_URL: JSON.stringify<span class=\"token punctuation\">(</span>backend_url<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\nmodule.exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Määriteltyä vakiota käytetään koodissa seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>noteCount<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos kehitys- ja tuotantokonfiguraatio eriytyvät paljon, saattaa olla hyvä idea <a href=\"https://webpack.js.org/guides/production/\">eriyttää konfiguraatiot</a> omiin tiedostoihinsa.</p>\n<p>Tuotantoversiota eli bundlattua sovellusta on mahdollista kokeilla lokaalisti suorittamalla komento</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx static-server</code></pre></div>\n<p>hakemistossa <em>dist</em> jolloin sovellus käynnistyy oletusarvoisesti osoitteeseen <a href=\"http://localhost:9080\">http://localhost:9080</a>.</p>\n<h3>Polyfill</h3>\n<p>Sovelluksemme on valmis ja toimii muiden selaimien kohtuullisen uusilla versiolla, mutta Internet Explorerilla sovellus ei toimi. Syynä tähän on se, että <em>axiosin</em> ansiosta koodissa käytetään <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promiseja</a>, mikään IE:n versio ei kuitenkaan niitä tue:</p>\n<picture><img src=\"/static/c35b13a507393cc2c137aefd928d7e77/14be6/13.png\" srcset=\"/static/c35b13a507393cc2c137aefd928d7e77/4cce7/13.png 200w,\n/static/c35b13a507393cc2c137aefd928d7e77/bae5f/13.png 400w,\n/static/c35b13a507393cc2c137aefd928d7e77/14be6/13.png 800w,\n/static/c35b13a507393cc2c137aefd928d7e77/1b35a/13.png 1200w,\n/static/c35b13a507393cc2c137aefd928d7e77/8e7a2/13.png 1584w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>On paljon muutakin standardissa määriteltyjä asioita, joita IE ei tue, esim. niinkin harmiton komento kuin taulukoiden <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">find</a> ylittää IE:n kyvyt:</p>\n<picture><img src=\"/static/71ecbdcc237ac95419fc4e8dde2aa813/14be6/14.png\" srcset=\"/static/71ecbdcc237ac95419fc4e8dde2aa813/4cce7/14.png 200w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/bae5f/14.png 400w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/14be6/14.png 800w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/1b35a/14.png 1200w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/f0a3f/14.png 1586w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Tälläisessä tilanteessa normaali koodin transpilointi ei auta, sillä transpiloinnissa koodia käännetään uudemmasta Javascript-syntaksista vanhempaan, selaimien paremmin tukemaan syntaksiin. Promiset ovat syntaktisesti täysin IE:n ymmärrettävissä, IE:ltä vain puuttuu toteutus promisesta, samoin on tilanne taulukoiden suhteen, IE:llä taulukoiden <em>find</em> on arvoltaan <em>undefined</em>.</p>\n<p>Jos haluamme sovelluksen IE-yhteensopivaksi, tarvitsemme <a href=\"https://remysharp.com/2010/10/08/what-is-a-polyfill\">polyfilliä</a>, eli koodia, joka lisää puuttuvan toiminnallisuuden vanhempiin selaimiin.</p>\n<p>Polyfillaus on mahdollista hoitaa <a href=\"https://babeljs.io/docs/usage/polyfill/\">Webpackin ja Babelin avulla</a> tai asentamalla yksi monista tarjolla olevista polyfill-kirjastoista.</p>\n<p>Esim. kirjaston <a href=\"https://www.npmjs.com/package/promise-polyfill\">promise-polyfill</a> tarjoaman polyfillin käyttö on todella helppoa, koodiin lisätään seuraava:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PromisePolyfill <span class=\"token keyword\">from</span> <span class=\"token string\">'promise-polyfill'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>Promise<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>Promise <span class=\"token operator\">=</span> PromisePolyfill<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos globaalia <em>Promise</em>-olioa ei ole olemassa, eli selain ei tue promiseja, sijoitetaan polyfillattu promise globaaliin muuttujaan. Jos polyfillattu promise on hyvin toteutettu, muun koodin pitäisi toimia ilman ongelmia.</p>\n<p>Kattavahko lista olemassaolevista polyfilleistä löytyy <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\">täältä</a>.</p>\n<p>Selaimien yhteensopivuus käytettävien API:en suhteen kannattaakin tarkistaa esim. <a href=\"https://caniuse.com\">https://caniuse.com</a>-sivustolta tai <a href=\"https://developer.mozilla.org/en-US/\">Mozillan sivuilta</a>.</p>\n<h3>Eject</h3>\n<p>Create-react-app käyttää taustalla webpackia. Jos peruskonfiguraatio ei riitä, on projektit mahdollista <a href=\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#npm-run-eject\">ejektoida</a>, jolloin kaikki konepellin alla oleva magia häviää, ja konfiguraatiot tallettuvat hakemistoon <em>config</em> ja muokattuun <em>package.json</em>-tiedostoon.</p>\n<p>Jos create-react-app:illa tehdyn sovelluksen ejektoi, paluuta ei ole, sen jälkeen kaikesta konfiguroinnista on huolehdittava itse. Konfiguraatiot eivät ole triviaaleimmasta päästä ja create-react-appin ja ejektoinnin sijaan parempi vaihtoehto saattaa joskus olla tehdä itse koko webpack-konfiguraatio.</p>\n<p>Ejektoidun sovelluksen konfiguraatioiden lukeminen on suositeltavaa ja sangen opettavaista!</p>\n<h2>Lisää tyyleistä</h2>\n<p>Osissa 2 ja 6 on jo katsottu muutamaa tapaa tyylien lisäämiseen eli vanhan koulukunnan <a href=\"/osa2#tyylien-lis%C3%A4%C3%A4minen\">yksittäistä CSS</a>-tiedostoa, <a href=\"/osa6#inline-tyylit\">inline-tyylejä</a> ja <a href=\"/osa6#valmiit-k%C3%A4ytt%C3%B6liittym%C3%A4tyylikirjastot\">UI-frameworkien</a> kuten Bootstrapin käyttöä.</p>\n<p>Tapoja on <a href=\"https://survivejs.com/react/advanced-techniques/styling-react/\">monia muitakin</a>, katsotaan vielä lyhyestä kahta tapaa.</p>\n<h3>CSS-moduulit</h3>\n<p>Yksi CSS:n keskeisistä ongelmista on se, että CSS-määrittelyt ovat <em>globaaleja</em>. Suurissa tai jo keskikokoisissakin sovelluksissa tämä aiheuttaa ongelmia, sillä tiettyihin komponentteihin vaikuttavat monissa paikoissa määritellyt tyylit ja lopputulos voi olla vaikeasti ennakoitavissa.</p>\n<p>Laitoksen <a href=\"https://www.cs.helsinki.fi/courses\">kurssilistasivun</a> alaosassa on itseasiassa eräs ilmentymä tälläisestä ikävästä bugista</p>\n<picture><img src=\"/static/e2cbe77e59cc2c1efeae851dbbe165b7/14be6/15.png\" srcset=\"/static/e2cbe77e59cc2c1efeae851dbbe165b7/4cce7/15.png 200w,\n/static/e2cbe77e59cc2c1efeae851dbbe165b7/bae5f/15.png 400w,\n/static/e2cbe77e59cc2c1efeae851dbbe165b7/14be6/15.png 800w,\n/static/e2cbe77e59cc2c1efeae851dbbe165b7/1b35a/15.png 1200w,\n/static/e2cbe77e59cc2c1efeae851dbbe165b7/9ee03/15.png 1600w,\n/static/e2cbe77e59cc2c1efeae851dbbe165b7/a39b6/15.png 1686w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Sivulla on monessa paikassa määriteltyjä tyylejä, osa määrittelyistä tulee Drupal-sisällönhallintajärjestelmän oletuskonfiguraatiosta, osa on Drupaliin laitoksella tehtyjä lisäyksiä, osa taas tulee sivun yläosan olemassaolevaa opetustarjontaa näyttävistä syksyllä lisätyistä komponenteista. Vika on niin hankala korjata, ettei kukaan ole viitsinyt sitä tehdä.</p>\n<p>Demonstroidaan vastaavankaltaista ongelmatilannetta esimerkkisovelluksessamme.</p>\n<p>Muutetaan esimerkkitiedostoamme siten, että komponentista <em>App</em> irrotetaan osa toiminnallisuudesta komponentteihin <em>Hello</em> ja <em>NoteCount</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">import &#39;./Hello.css&#39;\n\nconst Hello = ({ counter }) =&gt; (\n  &lt;p className=&quot;content&quot;&gt;\n    hello webpack {counter} clicks!\n  &lt;/p&gt;\n)\n\nexport default Hello</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">import &#39;./NoteCount.css&#39;\n\nconst NoteCount = ({ noteCount }) =&gt; (\n  &lt;p className=&quot;content&quot;&gt;\n    {noteCount} notes in server\n  &lt;/p&gt;\n)\n\nexport default NoteCount</code></pre></div>\n<p>Molemmat komponentit määrittelevät oman tyylitiedostonsa:</p>\n<p><em>Hello.css</em></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">.content {\n  background-color: yellow;\n}</code></pre></div>\n<p><em>NoteCount.css</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">.content {\n  background-color: blue;\n}</code></pre></div>\n<p>Koska molemmat komponentit käyttävät samaa CSS-luokan nimeä <em>content</em>, käykin niin että myöhemmin määritelty ylikirjoittaa aiemmin määritellyn, ja molempien tyyli on sama:</p>\n<picture><img src=\"/static/9e4ef31c953b3a4d43fae58883bceceb/14be6/16.png\" srcset=\"/static/9e4ef31c953b3a4d43fae58883bceceb/4cce7/16.png 200w,\n/static/9e4ef31c953b3a4d43fae58883bceceb/bae5f/16.png 400w,\n/static/9e4ef31c953b3a4d43fae58883bceceb/14be6/16.png 800w,\n/static/9e4ef31c953b3a4d43fae58883bceceb/1b35a/16.png 1200w,\n/static/9e4ef31c953b3a4d43fae58883bceceb/9f651/16.png 1372w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Perinteinen tapa kiertää ongelma on ollut käyttää monimutkaisempia CSS-luokan nimiä, esim. <em>Hello</em>container_ ja <em>NoteCount</em>container_, tämä muuttuu kuitenkin jossain vaiheessa varsin hankalaksi.</p>\n<p><a href=\"https://github.com/css-modules/css-modules\">CSS-moduulit</a> tarjoaa tähän erään ratkaisun.</p>\n<p>Lyhyesti ilmaisten periaatteena on tehdä CSS-määrittelyistä lähtökohtaisesti lokaaleja, vain yhden komponentin kontekstissa voimassa olevia, joka taas mahdollistaa luontevien CSS-luokkanimien käytön. Käytännössä tämä lokaalius toteutetaan generoimalla konepellin alla CSS-luokille uniikit luokkanimet.</p>\n<p>CSS-moduulit voidaan toteuttaa suoraan Webpackin css-loaderin avulla seuraten <a href=\"https://www.triplet.fi/blog/practical-guide-to-react-and-css-modules/\">sivun</a> ohjetta.</p>\n<p>Muutetaan tyylejä käyttäviä komponentteja hiukan:</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">import styles from &#39;./Hello.css&#39;\n\nconst Hello = ({ counter }) =&gt; (\n  &lt;p className={styles.content}&gt;\n    hello webpack {counter} clicks!\n  &lt;/p&gt;\n)\n\nexport default Hello</code></pre></div>\n<p>Erona siis edelliseen on se, että tyyliit \"sijoitetaan muuttujaan\" <em>styles</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./Hello.css'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nyt tyylitiedoston määrittelelyihin voi viitata muuttujan <em>styles</em> kautta, ja CSS-luokan liittäminen tapahtuu seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">&lt;p className={styles.content}&gt;</code></pre></div>\n<p>Vastaava muutos tehdään komponentille <em>NoteCount</em>.</p>\n<p>Muutetaan sitten Webpackin konfiguraatiossa olevaa <em>css-loaderin</em> määrittelyä siten että se enabloi <a href=\"https://github.com/webpack-contrib/css-loader#modules\">CSS-modulit</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n  loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'css-loader?modules&amp;importLoaders=1&amp;localIdentName=[name]__[local]___[hash:base64:5]&amp;sourceMap&amp;-minimize'</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nyt molemmat komponentit saavat omat tyylinsä. Konsolista tarkastelemalla huomaamme, että komponenttien luokille on generoitunut webpackin css-loaderin generoimat uniikit nimet:</p>\n<picture><img src=\"/static/a787850c36ef5bbf8ad66ad9cfd5d692/14be6/17.png\" srcset=\"/static/a787850c36ef5bbf8ad66ad9cfd5d692/4cce7/17.png 200w,\n/static/a787850c36ef5bbf8ad66ad9cfd5d692/bae5f/17.png 400w,\n/static/a787850c36ef5bbf8ad66ad9cfd5d692/14be6/17.png 800w,\n/static/a787850c36ef5bbf8ad66ad9cfd5d692/1b35a/17.png 1200w,\n/static/a787850c36ef5bbf8ad66ad9cfd5d692/e5b6a/17.png 1556w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>CSS-luokan nimen muotoileva osa on <em>css-loaderin</em> yhteydessä oleva</p>\n<pre>\nlocalIdentName=[name]\\_\\_[local]\\_\\_\\_[hash:base64:5]\n</pre>\n<p>Jos olet aikeissa käyttää CSS-moduuleja, kannattaa vilkaista mitä kirjasto <a href=\"https://github.com/gajus/react-css-modules\">react-css-modules</a> tarjoaa.</p>\n<h3>Styled components</h3>\n<p>Mielenkiintoisen näkökulman tyylien määrittelyyn tarjoaa ES6:n <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">tagged template literal</a> -syntaksia hyödyntävä <a href=\"https://www.styled-components.com/\">styled components</a> -kirjasto.</p>\n<p>Tehdään styled-componentsin avulla esimerkkisovellukseemme muutama tyylillinen muutos:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> styled from <span class=\"token string\">'styled-components'</span>\n\nconst Button <span class=\"token operator\">=</span> styled.button <span class=\"token variable\"><span class=\"token variable\">`</span>\n  font-size: 1em<span class=\"token punctuation\">;</span>\n  margin: 1em<span class=\"token punctuation\">;</span>\n  padding: 0.25em 1em<span class=\"token punctuation\">;</span>\n  border: 2px solid black<span class=\"token punctuation\">;</span>\n  border-radius: 3px<span class=\"token punctuation\">;</span>\n<span class=\"token variable\">`</span></span>\n\nconst Hello <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> className, counter <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    hello webpack <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks\n  <span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\nconst StyledHello <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">(</span>Hello<span class=\"token punctuation\">)</span> <span class=\"token variable\"><span class=\"token variable\">`</span>\n  color: blue<span class=\"token punctuation\">;</span>\n  font-weight: bold<span class=\"token punctuation\">;</span>\n<span class=\"token variable\">`</span></span>\n\nclass App extends React.Component <span class=\"token punctuation\">{</span>\n  //<span class=\"token punctuation\">..</span>.\n\n  render<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>StyledHello counter<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>this.state.counter<span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>this.onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>click<span class=\"token operator\">&lt;</span>/Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Heti alussa luodaan HTML:n <em>button</em>-elementistä jalostettu versio ja sijoitetaan se muuttujaan <em>Button</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Button <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token string\">`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Tyylien määrittelyn syntaksi on varsin mielenkiintoinen.</p>\n<p>Määritelty komponentti toimii kuten normaali <em>button</em> ja sovellus renderöi sen normaaliin tapaan:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{this.onClick}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Seuraavaksi koodi määrittelee normaalin React-komponentin</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">const Hello = ({ className, counter }) =&gt; (\n  &lt;p className={className}&gt;\n    hello webpack {counter} clicks\n  &lt;/p&gt;\n)</code></pre></div>\n<p>ja lisää tälle tyylit metodin <em>styled</em> avulla:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> StyledHello <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>Hello<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token string\">`\n  color: blue;\n  font-weight: bold;\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Muuttujaan <em>StyledHello</em> sijoitettua tyyleillä jalostettua komponenttia käytetään kuten alkuperäistä:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>StyledHello counter<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>this.state.counter<span class=\"token punctuation\">}</span> /<span class=\"token operator\">></span></code></pre></div>\n<p>Sovelluksen ulkoasu seuraavassa:</p>\n<picture><img src=\"/static/2f5e6124b718418ef2afd246b9fc13fe/14be6/18.png\" srcset=\"/static/2f5e6124b718418ef2afd246b9fc13fe/4cce7/18.png 200w,\n/static/2f5e6124b718418ef2afd246b9fc13fe/bae5f/18.png 400w,\n/static/2f5e6124b718418ef2afd246b9fc13fe/14be6/18.png 800w,\n/static/2f5e6124b718418ef2afd246b9fc13fe/1b35a/18.png 1200w,\n/static/2f5e6124b718418ef2afd246b9fc13fe/7f7ac/18.png 1542w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n</div>","frontmatter":{"title":"osa 7","subTitle":"Tyylien lisääminen sovellukseen","path":"/osa7/tyylit","mainImage":{"publicURL":"/static/part-7-e86c21108367fe9d9c833e8905547e9c.svg"},"partColor":"light-blue","part":7,"letter":"b"}}},"pageContext":{}}