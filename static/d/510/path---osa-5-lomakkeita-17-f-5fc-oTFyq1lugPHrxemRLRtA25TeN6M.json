{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<h3>Kirjautumislomakkeen näyttäminen vain tarvittaessa</h3>\n<p>Muutetaan sovellusta siten, että kirjautumislomaketta ei oletusarvoisesti näytetä:</p>\n<picture><img src=\"/static/50b20c43588cc2dde4d123b7523c2cca/14be6/10.png\" srcset=\"/static/50b20c43588cc2dde4d123b7523c2cca/4cce7/10.png 200w,\n/static/50b20c43588cc2dde4d123b7523c2cca/bae5f/10.png 400w,\n/static/50b20c43588cc2dde4d123b7523c2cca/14be6/10.png 800w,\n/static/50b20c43588cc2dde4d123b7523c2cca/1b35a/10.png 1200w,\n/static/50b20c43588cc2dde4d123b7523c2cca/599a8/10.png 1592w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Lomake aukeaa, jos käyttäjä painaa nappia <i>login</i>:</p>\n<picture><img src=\"/static/09fd36f73cbd0dc3452829b9e320007f/14be6/11a.png\" srcset=\"/static/09fd36f73cbd0dc3452829b9e320007f/4cce7/11a.png 200w,\n/static/09fd36f73cbd0dc3452829b9e320007f/bae5f/11a.png 400w,\n/static/09fd36f73cbd0dc3452829b9e320007f/14be6/11a.png 800w,\n/static/09fd36f73cbd0dc3452829b9e320007f/1b35a/11a.png 1200w,\n/static/09fd36f73cbd0dc3452829b9e320007f/8b923/11a.png 1572w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Napilla <i>cancel</i> käyttäjä saa tarvittaessa suljettua lomakkeen.</p>\n<p>Aloitetaan eristämällä kirjautumislomake omaksi komponentikseen:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span> \n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   handleSubmit<span class=\"token punctuation\">,</span>\n   handleUsernameChange<span class=\"token punctuation\">,</span>\n   handlePasswordChange<span class=\"token punctuation\">,</span>\n   username<span class=\"token punctuation\">,</span> \n   password \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Kirjaudu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          käyttäjätunnus\n          <span class=\"token operator\">&lt;</span>input\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleUsernameChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          salasana\n          <span class=\"token operator\">&lt;</span>input\n            type<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handlePasswordChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>kirjaudu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> LoginForm</code></pre></div>\n<p>Tila ja tilaa käsittelevät funktiot on kaikki määritelty komponentin ulkopuolella ja välitetään komponentille propseina.</p>\n<p>Huomaa, että propsit otetaan vastaan <i>destrukturoimalla</i>, eli sen sijaan että määriteltäisiin</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Kirjaudu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          käyttäjätunnus\n          <span class=\"token operator\">&lt;</span>input\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span>\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>kirjaudu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>jolloin muuttujan <em>props</em> kenttiin on viitattava muuttujan kautta esim. <em>props.handleSubmit</em>, otetaan kentät suoraan vastaan omiin muuttujiinsa.</p>\n<p>Nopea tapa toiminnallisuuden toteuttamiseen on muuttaa komponentin <i>App</i> käyttämä funktio <em>loginForm</em> seuraavaan muotoon:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>loginVisible<span class=\"token punctuation\">,</span> setLoginVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>log <span class=\"token keyword\">in</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>LoginForm\n            username<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n            password<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n            handleUsernameChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            handlePasswordChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            handleSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleLogin<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Komponentin <i>App</i> tilaan on nyt lisätty tutuusarvo <i>loginVisible</i> joka määrittelee sen näytetäänkö kirjautumislomake.</p>\n<p>Näkyvyyttä säätelevää tilaa vaihdellaan kahden napin avulla, molempiin on kirjoitettu tapahtumankäsittelijän koodi suoraan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>log <span class=\"token keyword\">in</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p>Komponenttien näkyvyys on määritelty asettamalla komponentille <a href=\"/osa2/tyylien_lisaaminen_react_sovellukseen#inline-tyylit\">inline</a>-tyyleinä CSS-määrittely, jossa <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\">display</a>-propertyn arvoksi asetetaan <i>none</i> jos komponentin ei haluta näkyvän:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token string\">\"{hideWhenVisible}\"</span><span class=\"token operator\">></span>\n  <span class=\"token comment\">// nappi</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token string\">\"{showWhenVisible}\"</span><span class=\"token operator\">></span>\n  <span class=\"token comment\">// lomake</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>Käytössä on taas kysymysmerkkioperaattori, eli jos <em>loginVisible</em> on <i>true</i>, tulee napin CSS-määrittelyksi</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>jos <em>loginVisible</em> on <i>false</i>, ei <i>display</i> saa mitään napin näkyvyyteen liittyvää arvoa.</p>\n<h3>Komponentin lapset, eli props.children</h3>\n<p>Kirjautumislomakkeen näkyvyyttä ympäröivän koodin voi ajatella olevan oma looginen kokonaisuutensa ja se onkin hyvä eristää pois komponentista <i>App</i> omaksi komponentikseen.</p>\n<p>Tavoitteena on luoda komponentti <i>Togglable</i>, jota käytetään seuraavalla tavalla:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">'login'</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>LoginForm\n    username<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n    password<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n    handleUsernameChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    handlePasswordChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    handleSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleLogin<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>Komponentin käyttö poikkeaa aiemmin näkemistämme siinä, että käytössä on nyt avaava ja sulkeva tagi, joiden sisällä määritellään toinen komponentti eli <i>LoginForm</i>. Reactin terminologiassa <i>LoginForm</i> on nyt komponentin <i>Togglable</i> lapsi.</p>\n<p><i>Togglablen</i> avaavan ja sulkevan tagin sisälle voi sijoittaa lapsiksi mitä tahansa React-elementtejä, esim.:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"paljasta\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>tämä on aluksi piilossa<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>toinen salainen rivi<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>Komponentin koodi on seuraavassa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span> \n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Togglable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleVisibility</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visible<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>buttonLabel<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>  \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Togglable</code></pre></div>\n<p>Mielenkiintoista ja meille uutta on <a href=\"https://reactjs.org/docs/glossary.html#propschildren\">props.children</a>, jonka avulla koodi viittaa komponentin lapsiin, eli avaavan ja sulkevan tagin sisällä määriteltyihin React-elementteihin.</p>\n<p>Tällä kertaa lapset ainoastaan renderöidään komponentin oman renderöivän koodin seassa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>Toisin kuin \"normaalit\" propsit, <i>children</i> on Reactin automaattisesti määrittelemä, aina olemassa oleva propsi. Jos komponentti määritellään automaattisesti suljettavalla eli <em>/></em> loppuvalla tagilla, esim.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Note\n  key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span>\n  note<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">}</span>\n  toggleImportance<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">toggleImportanceOf</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>on <i>props.children</i> tyhjä taulukko.</p>\n<p>Komponentti <i>Togglable</i> on uusiokäytettävä ja voimme käyttää sitä tekemään myös uuden muistiinpanon luomisesta huolehtivan formin vastaavalla tavalla tarpeen mukaan näytettäväksi.</p>\n<p>Eristetään ensin muistiinpanojen luominen omaksi komponentiksi</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NoteForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> onSubmit<span class=\"token punctuation\">,</span> handleChange<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Luo uusi muistiinpano<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>tallenna<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ja määritellään lomakkeen näyttävä koodi komponentin <i>Togglable</i> sisällä</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"new note\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>NoteForm\n    onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addNote<span class=\"token punctuation\">}</span>\n    value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>newNote<span class=\"token punctuation\">}</span>\n    handleChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleNoteChange<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>    </code></pre></div>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2019part2-notes/tree/part5-4\">githubissa</a>, branchissa <i>part5-4</i>.</p>\n<h3>ref eli viite komponenttiin</h3>\n<p>Ratkaisu on melko hyvä, haluaisimme kuitenkin parantaa sitä erään seikan osalta.</p>\n<p>Kun uusi muistiinpano luodaan, olisi loogista jos luomislomake menisi piiloon. Nyt lomake pysyy näkyvillä. Lomakkeen piilottamiseen sisältyy kuitenkin pieni ongelma, sillä näkyvyyttä kontrolloidaan <i>Togglable</i>-komponentin tilassa olevalla muuttujalla <i>visible</i>. Miten pääsemme tilaan käsiksi komponentin ulkopuolelta?</p>\n<p>Reactin <a href=\"https://reactjs.org/docs/refs-and-the-dom.html\">ref</a>-mekanismi tarjoaa eräänlaisen viitteen komponenttiin. </p>\n<p>Tehdään komponenttiin <i>App</i> seuraavat muutokset</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> noteFormRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">noteForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"new note\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>noteFormRef<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span>      <span class=\"token operator\">&lt;</span>NoteForm\n        onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addNote<span class=\"token punctuation\">}</span>\n        value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>newNote<span class=\"token punctuation\">}</span>\n        handleChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleNoteChange<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>    \n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Metodilla <a href=\"https://reactjs.org/docs/react-api.html#reactcreateref\">createRef</a> luodaan ref <i>noteFormRef</i>, joka kiinnitetään muistiinpanojen luomislomakkeen sisältävälle <i>Togglable</i>-komponentille. Nyt siis muuttuja <i>noteFormRef</i> toimii viitteenä komponenttiin.</p>\n<p>Komponenttia <i>Togglable</i> laajennetaan seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useImperativeMethods <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> Togglable <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token punctuation\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleVisibility</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visible<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useImperativeMethods</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      toggleVisibility</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>buttonLabel<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>  \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Togglable</code></pre></div>\n<p>Komponentin luova funktio on kääritty funktiokutsun <a href=\"https://reactjs.org/docs/react-api.html#reactforwardref\">forwardRef</a> sisälle, näin komponentti pääsee käsikseen sille määriteltyyn refiin.</p>\n<p>Komponentti tarjoaa <a href=\"https://reactjs.org/docs/hooks-reference.html#useimperativehandle\">useImperativeMethods</a>-hookin avulla sisäisesti määritellyn funktionsa <i>toggleVisibility</i> ulkopuolelta kutsuttavaksi.</p>\n<p>Voimme nyt piilottaa lomakkeen kutsumalla <i>noteFormRef.current.toggleVisibility()</i> samalla kun uuden muistiinpanon luominen tapahtuu:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addNote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    noteFormRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">toggleVisibility</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>    <span class=\"token keyword\">const</span> noteObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      content<span class=\"token punctuation\">:</span> newNote<span class=\"token punctuation\">,</span>\n      date<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      important<span class=\"token punctuation\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span>\n    <span class=\"token punctuation\">}</span>\n\n    noteService\n      <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>noteObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>returnedNote <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setNotes</span><span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>returnedNote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">setNewNote</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Käyttämämme <a href=\"https://reactjs.org/docs/hooks-reference.html#useimperativehandle\">useImperativeMethods</a> on siis React hook, jonka avulla funktiona määritellylle komponentille voidaan määrittää funktioita, joita on mahdollista kutsua sen ulkopuolelta. Metodin nimi ei ole vielä tässä vaiheessa (25.1.2019) täysin vakiintunut, dokumentaatiossa sen nimi on <i>useImperativeHandle</i>. </p>\n<p>Käyttämämme kikka komponentin tilan muuttamikseksi toimii, mutta se vaikuttaa hieman ikävältä. Saman olisi saanut aavistuksen siistimmin toteutettua \"vanhan Reactin\" class-perustaisilla komponenteilla, joihin tutustumme tämän osan lopussa. Tämä on toistaiseksi ainoa tapaus, jossa Reactin hook-syntaksiin nojaava ratkaisu on aavistuksen likaisen oloinen kuin class-komponenttien tarjoama ratkaisu.</p>\n<p>Refeille on myös <a href=\"https://reactjs.org/docs/refs-and-the-dom.html\">muita käyttötarkoituksia</a> kuin React-komponentteihin käsiksi pääseminen.</p>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2019part2-notes/tree/part5-4\">githubissa</a>, branchissa <i>part5-5</i>.</p>\n<h3>Huomio komponenteista</h3>\n<p>Kun Reactissa määritellään komponentti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Togglable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ja otetaan se käyttöön seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>togglable1<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    ensimmäinen\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n\n  <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>togglable2<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    toinen\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n\n  <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>togglable3<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    kolmas\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>syntyy <i>kolme erillistä komponenttiolioa</i>, joilla on kaikilla oma tilansa:</p>\n<picture><img src=\"/static/9f0757dafbe5075afc40961bc9589356/14be6/12.png\" srcset=\"/static/9f0757dafbe5075afc40961bc9589356/4cce7/12.png 200w,\n/static/9f0757dafbe5075afc40961bc9589356/bae5f/12.png 400w,\n/static/9f0757dafbe5075afc40961bc9589356/14be6/12.png 800w,\n/static/9f0757dafbe5075afc40961bc9589356/1b35a/12.png 1200w,\n/static/9f0757dafbe5075afc40961bc9589356/ff532/12.png 1568w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p><i>ref</i>-attribuutin avulla on talletettu viite jokaiseen komponenttiin muuttujiin <i>togglable1</i>, <i>togglable2</i> ja <i>togglable3</i>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Tehtäviä</h3>\n<h4>5.5 blogilistan frontend, step5</h4>\n<p>Tee blogin luomiseen käytettävästä lomakkeesta ainoastaan tarvittaessa näytettävä osan 5 luvun <a href=\"/osa5#kirjautumislomakkeen-n%C3%A4ytt%C3%A4minen-vain-tarvittaessa\">Kirjautumislomakkeen näyttäminen vain tarvittaessa</a> tapaan. Voit halutessasi hyödyntää osassa 5 määriteltyä komponenttia <i>Togglable</i>.</p>\n<h4>5.6* blogilistan frontend, step6</h4>\n<p>Laajenna blogien listausta siten, että klikkaamalla blogin nimeä, sen täydelliset tiedot aukeavat</p>\n<picture><img src=\"/static/5b2e35b8380eed10672980c0dee0dad3/14be6/13.png\" srcset=\"/static/5b2e35b8380eed10672980c0dee0dad3/4cce7/13.png 200w,\n/static/5b2e35b8380eed10672980c0dee0dad3/bae5f/13.png 400w,\n/static/5b2e35b8380eed10672980c0dee0dad3/14be6/13.png 800w,\n/static/5b2e35b8380eed10672980c0dee0dad3/1b35a/13.png 1200w,\n/static/5b2e35b8380eed10672980c0dee0dad3/c6ea5/13.png 1506w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Uusi klikkaus blogin nimeen pienentää näkymän.</p>\n<p>Napin <i>like</i> ei tässä vaiheessa tarvitse tehdä mitään.</p>\n<p>Kuvassa on myös käytetty hieman CSS:ää parantamaan sovelluksen ulkoasua.</p>\n<p>Tyylejä voidaan määritellä osan 2 tapaan helposti <a href=\"http://localhost:8000/osa2/tyylien_lisaaminen_react_sovellukseen#inline-tyylit\">inline</a>-tyyleinä seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Blog</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> blog <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> blogStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    paddingTop<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    paddingLeft<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    border<span class=\"token punctuation\">:</span> <span class=\"token string\">'solid'</span><span class=\"token punctuation\">,</span>\n    borderWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    marginBottom<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>blogStyle<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>div onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clicked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span>        <span class=\"token punctuation\">{</span>blog<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>blog<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token comment\">// ...</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Huom1:</strong> voit tehdä blogin nimestä klikattavan korstetun koodirivin tapaan. </p>\n<p><strong>Huom2:</strong> vaikka tämän tehtävän toiminnallisuus on melkein samanlainen kuin komponentin <i>Togglable</i> tarjoama toiminnallisuus, ei Togglable kuitenkaan sovi tarkotukseen sellaisenaan. Helpoin ratkaisu lienee lisätä blogille tila joka kontrolloi sitä missä muodossa blogi näytetään.</p>\n<h4>5.7*: blogilistan frontend, step7</h4>\n<p>Toteuta like-painikkeen toiminnallisuus. Like lisätään backendiin blogin yksilöivään urliin tapahtuvalla <em>PUT</em>-pyynnöllä.</p>\n<p>Koska backendin operaatio korvaa aina koko blogin, joudut lähettämään operaation mukana blogin kaikki kentät, eli jos seuraavaa blogia liketetään</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  _id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"5a43fde2cbd20b12a2c34e91\"</span><span class=\"token punctuation\">,</span>\n  user<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    _id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"5a43e6b6c37f3d065eaaa581\"</span><span class=\"token punctuation\">,</span>\n    username<span class=\"token punctuation\">:</span> <span class=\"token string\">\"mluukkai\"</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Matti Luukkainen\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  likes<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Joel Spolsky\"</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"The Joel Test: 12 Steps to Better Code\"</span><span class=\"token punctuation\">,</span>\n  url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>tulee palvelimelle tehdä PUT-pyyntö osoitteeseen <i>/api/blogs/5a43fde2cbd20b12a2c34e91</i> ja sisällyttää pyynnön mukaan seuraava data:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">:</span> <span class=\"token string\">\"5a43e6b6c37f3d065eaaa581\"</span><span class=\"token punctuation\">,</span>\n  likes<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Joel Spolsky\"</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"The Joel Test: 12 Steps to Better Code\"</span><span class=\"token punctuation\">,</span>\n  url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Varoitus vielä kerran:</strong> jos huomaat kirjoittavasi sekaisin async/awaitia ja <em>then</em>-kutsuja, on 99.9% varmaa, että teet jotain väärin. Käytä siis jompaa kumpaa tapaa, älä missään tapauksessa \"varalta\" molempia.</p>\n<h4>5.8*: blogilistan frontend, step8</h4>\n<p>Järjestä sovellus näyttämään blogit <i>likejen</i> mukaisessa suuruusjärjestyksessä. Järjestäminen onnistuu taulukon metodilla <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">sort</a>.</p>\n<h4>5.9*: blogilistan frontend, step9</h4>\n<p>Lisää nappi blogin poistamiselle.</p>\n<p>Toteuta myös poiston tekevä logiikka. Laajenna backendiä siten, että ne blogit, joihin ei liity lisääjää (joita syntyi ennen kuin olimme lisänneet järjestelmään käyttäjiä), ovat kaikkien kirjautuneiden käyttäjien poistettavissa.</p>\n<p>Ohjelmasi voi näyttää esim. seuraavalta:</p>\n<picture><img src=\"/static/61993bb7e931cf24359c8a15fde37ec4/14be6/14.png\" srcset=\"/static/61993bb7e931cf24359c8a15fde37ec4/4cce7/14.png 200w,\n/static/61993bb7e931cf24359c8a15fde37ec4/bae5f/14.png 400w,\n/static/61993bb7e931cf24359c8a15fde37ec4/14be6/14.png 800w,\n/static/61993bb7e931cf24359c8a15fde37ec4/1b35a/14.png 1200w,\n/static/61993bb7e931cf24359c8a15fde37ec4/52ebc/14.png 1498w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kuvassa näkyvä poiston varmistus on helppo toteuttaa funktiolla\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm\">window.confirm</a>.</p>\n<h4>5.10*: blogilistan frontend, step10</h4>\n<p>Näytä poistonappi ainoastaan jos kyseessä on kirjautuneen käyttäjän lisäämä blogi.</p>\n</div>\n<div class=\"content\">\n<h3>PropTypes</h3>\n<p>Komponentti <i>Togglable</i> olettaa, että sille määritellään propsina <i>buttonLabel</i> napin teksti. Jos määrittely unohtuu</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable<span class=\"token operator\">></span> buttonLabel unohtui<span class=\"token operator\">...</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>Sovellus kyllä toimii, mutta selaimeen renderöityy hämäävästi nappi, jolla ei ole mitään tekstiä.</p>\n<p>Haluaisimmekin varmistaa että jos <i>Togglable</i>-komponenttia käytetään, on propsille \"pakko\" antaa arvo.</p>\n<p>Komponentin olettamat ja edellyttämät propsit ja niiden tyypit voidaan määritellä kirjaston <a href=\"https://github.com/facebook/prop-types\">prop-types</a> avulla. Asennetaan kirjasto</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save prop<span class=\"token operator\">-</span>types</code></pre></div>\n<p><i>buttonLabel</i> voidaan määritellä <i>pakolliseksi</i> string-tyyppiseksi propsiksi seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n\n<span class=\"token keyword\">const</span> Togglable <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span>\n\nTogglable<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  buttonLabel<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos propsia ei määritellä, seurauksena on konsoliin tulostuva virheilmoitus</p>\n<picture><img src=\"/static/7a239ed6d3ad6721a65ae3ac24eb29b5/14be6/15.png\" srcset=\"/static/7a239ed6d3ad6721a65ae3ac24eb29b5/4cce7/15.png 200w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/bae5f/15.png 400w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/14be6/15.png 800w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/1b35a/15.png 1200w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/9ee03/15.png 1600w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/d5406/15.png 1736w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Koodi kuitenkin toimii edelleen, eli mikään ei pakota määrittelemään propseja PropTypes-määrittelyistä huolimatta. On kuitenkin erittäin epäprofessionaalia jättää konsoliin <i>mitään</i> punaisia tulosteita.</p>\n<p>Määritellään Proptypet myös <i>LoginForm</i>-komponentille:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   handleSubmit<span class=\"token punctuation\">,</span>\n   handleUsernameChange<span class=\"token punctuation\">,</span>\n   handlePasswordChange<span class=\"token punctuation\">,</span>\n   username<span class=\"token punctuation\">,</span> \n   password \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\nLoginForm<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  handleSubmit<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  handleUsernameChange<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  handlePasswordChange<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  username<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  password<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Funktionaalisen komponentin proptypejen määrittely tapahtuu samalla tavalla kuin luokkaperustaisten.</p>\n<p>Jos propsin tyyppi on väärä, esim. yritetään määritellä propsiksi <em>handleSubmit</em> merkkijono, seurauksena on varoitus:</p>\n<picture><img src=\"/static/ec732518823c5e2921d46285e5549bf3/14be6/16.png\" srcset=\"/static/ec732518823c5e2921d46285e5549bf3/4cce7/16.png 200w,\n/static/ec732518823c5e2921d46285e5549bf3/bae5f/16.png 400w,\n/static/ec732518823c5e2921d46285e5549bf3/14be6/16.png 800w,\n/static/ec732518823c5e2921d46285e5549bf3/1b35a/16.png 1200w,\n/static/ec732518823c5e2921d46285e5549bf3/9ee03/16.png 1600w,\n/static/ec732518823c5e2921d46285e5549bf3/d5406/16.png 1736w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Tehtäviä</h3>\n<h4>5.11: blogilistan frontend, osa 11</h4>\n<p>Määrittele joillekin sovelluksesi komponenteille PropTypet.</p>\n<h3>ESlint</h3>\n<p>Konfiguroimme osassa 3 koodin tyylistä huolehtivan <a href=\"/osa3#lint\">ESlintin</a> backendiin. Otetaan nyt ESlint käyttöön myös frontendissa.</p>\n<p>Create-react-app on asentanut projektille eslintin valmiiksi, joten ei tarvita muuta kun sopiva konfiguraatio tiedoston <em>.eslintrc.js</em>.</p>\n<p>Tiedoston voi generoida komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npx eslint <span class=\"token operator\">--</span>init</code></pre></div>\n<p>ja vastailemalla sopivasti kysymyksiin:</p>\n<picture><img src=\"/static/354495f1cf3ab7a581a690e6c465f45f/14be6/1a.png\" srcset=\"/static/354495f1cf3ab7a581a690e6c465f45f/4cce7/1a.png 200w,\n/static/354495f1cf3ab7a581a690e6c465f45f/bae5f/1a.png 400w,\n/static/354495f1cf3ab7a581a690e6c465f45f/14be6/1a.png 800w,\n/static/354495f1cf3ab7a581a690e6c465f45f/11572/1a.png 1116w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Jotta pääsemme eroon testeissä olevista turhista huomautuksista asennetaan <a href=\"https://www.npmjs.com/package/eslint-plugin-jest\">eslint-jest-plugin</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm add <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev eslint<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>jest</code></pre></div>\n<p>ja otetaan se käyttöön manuaalin opastamalla tavalla.</p>\n<p>Jos vastailit initialisoinnissa kysymyksiin kuvan osoittamalla tavalla, asentuu projektiin <a href=\"https://github.com/yannickcr/eslint-plugin-react\">eslint-plugin-react</a>. Laajennetaan konfiguraatiota pluginin <a href=\"https://github.com/yannickcr/eslint-plugin-react#configuration\">manuaalin</a> ohjeen mukaan.</p>\n<p>Joudumme asentamaan myös <a href=\"https://github.com/babel/babel-eslint\">babel-eslint</a>-pluginin, jotta ESlint osaisi tulkita koodissa käyttämäämme <em>class property</em> -syntaksia. Pluginin asennus tapahtuu komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install babel<span class=\"token operator\">-</span>eslint <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>ja se tulee muistaa ottaa käyttöön konfiguraatiossa.</p>\n<p>Seuraavassa lopullinen konfiguraatio, mihin on lisätty muutama muukin osassa 3 käyttöönotettu sääntö:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"browser\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"jest/globals\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"extends\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"plugin:react/recommended\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"parser\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"babel-eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"parserOptions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"ecmaFeatures\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"jsx\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"ecmaVersion\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"sourceType\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"module\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jest\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"indent\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"linebreak-style\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"unix\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"quotes\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"single\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"semi\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"never\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"eqeqeq\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"no-trailing-spaces\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"object-curly-spacing\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"always\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"arrow-spacing\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"before\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"after\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"no-console\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"react/prop-types\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-5-1d38df3161654915a233d16795c6c490.svg"},"part":5,"letter":"b"}}},"pageContext":{"part":5,"letter":"b"}}