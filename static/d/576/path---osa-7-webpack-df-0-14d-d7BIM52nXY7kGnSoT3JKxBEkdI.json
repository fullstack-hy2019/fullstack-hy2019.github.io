{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>React oli aiemmin jossain määrin kuuluisa siitä, että sovelluskehityksen edellyttämien työkalujen konfigurointi on ollut hyvin hankalaa. Kiitos <a href=\"https://github.com/facebookincubator/create-react-app\">create-react-app</a>:in, sovelluskehitys Reactilla on kuitenkin nykyään tuskatonta, parempaa työskentelyflowta on tuskin ollut koskaan Javascriptillä tehtävässä selainpuolen sovelluskehityksessä.</p>\n<p>Emme voi kuitenkaan turvautua ikuisesti create-react-app:in magiaan ja nyt onkin aika selvittää mitä kaikkea taustalla on. Avainasemassa React-sovelluksen toimintakuntoon saattamisessa on <a href=\"https://webpack.js.org/\">webpack</a>-niminen työkalu.</p>\n<h3>bundlaus</h3>\n<p>Olemme toteuttaneet sovelluksia jakamalla koodin moduuleihin, joita on <i>importattu</i> niitä tarvitseviin paikkoihin. Vaikka ES6-moduulit ovatkin Javascript-standardissa määriteltyjä, ei mikään selain vielä osaa käsitellä moduuleihin jaettua koodia.</p>\n<p>Selainta varten moduuleissa oleva koodi <i>bundlataan</i>, eli siitä muodostetaan yksittäinen, kaiken koodin sisältävä tiedosto.\nKun veimme Reactilla toteutetun frontendin tuotantoon osan 3 luvussa <a href=\"/osa3/sovellus_internetiin#frontendin-tuotantoversio\">Frontendin tuotantoversio</a>, suoritimme bundlauksen komennolla <em>npm run build</em>. Konepellin alla kyseinen npm-skripti suorittaa bundlauksen webpackia hyväksi käyttäen. Tuloksena on joukko hakemistoon <i>build</i> sijoitettavia tiedostoja:</p>\n<pre>\n├── asset-manifest.json\n├── favicon.ico\n├── index.html\n├── manifest.json\n├── precache-manifest.8082e70dbf004a0fe961fc1f317b2683.js\n├── service-worker.js\n└── static\n    ├── css\n    │   ├── main.f9a47af2.chunk.css\n    │   └── main.f9a47af2.chunk.css.map\n    └── js\n        ├── 1.578f4ea1.chunk.js\n        ├── 1.578f4ea1.chunk.js.map\n        ├── main.8209a8f2.chunk.js\n        ├── main.8209a8f2.chunk.js.map\n        ├── runtime~main.229c360f.js\n        └── runtime~main.229c360f.js.map\n</pre>\n<p>Hakemiston juuressa oleva sovelluksen \"päätiedosto\" <i>index.html</i> lataa <i>script</i>-tagin avulla bundlatun Javascript-tiedoston (jos ollaan tarkkoja, on bundlattuja Javascript-tiedostoja kaksi kappaletta):</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!doctype html></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>React App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/static/css/main.f9a47af2.chunk.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/static/js/1.578f4ea1.chunk.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/static/js/main.8209a8f2.chunk.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Kuten esimerkistä näemme, create-react-app:illa tehdyssä sovelluksessa bundlataan Javascriptin lisäksi sovelluksen CSS-määrittelyt tiedostoon <i>/static/css/main.f9a47af2.chunk.css</i></p>\n<p>Käytännössä bundlaus tapahtuu siten, että sovelluksen Javascriptille määritellään alkupiste, usein tiedosto <i>index.js</i>, ja bundlauksen yhteydessä webpack ottaa mukaan kaiken koodin mitä alkupiste importtaa, sekä importattujen koodien importtaamat koodit, jne.</p>\n<p>Koska osa importeista on kirjastoja, kuten React, Redux ja Axios, bundlattuun Javascript-tiedostoon tulee myös kaikkien näiden sisältö.</p>\n<blockquote>\n<p>Vanha tapa jakaa sovelluksen koodi moneen tiedostoon perustui siihen, että <i>index.html</i> latasi kaikki sovelluksen tarvitsemat erilliset Javascript-tiedostot script-tagien avulla. Tämä on kuitenkin tehotonta, sillä jokaisen tiedoston lataaminen aiheuttaa pienen overheadin ja nykyään pääosin suositaankin koodin bundlaamista yksittäiseksi tiedostoksi.</p>\n</blockquote>\n<p>Tehdään nyt React-projektille sopiva webpack-konfiguraatio kokonaan käsin.</p>\n<p>Luodaan projektia varten hakemisto ja sen sisälle seuraavat hakemistot (<i>build</i> ja <i>src</i>) sekä seuraavat tiedostot:</p>\n<pre>\n├── build\n├── package.json\n├── src\n│   └── index.js\n└── webpack.config.js\n</pre>\n<p>Tiedoston <i>package.json</i> sisältö voi olla esim. seuraava:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-osa7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Asennetaan webpack komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack webpack<span class=\"token operator\">-</span>cli</code></pre></div>\n<p>Webpackin toiminta konfiguroidaan tiedostoon <i>webpack.config.js</i>, laitetaan sen alustavaksi sisällöksi seuraava</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'main.js'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Määritellään sitten npm-skripti <i>build</i> jonka avulla bundlaus suoritetaan</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ...</span>\n<span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Lisätään hieman koodia tiedostoon <i>src/index.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> name <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Kun nyt suoritamme komennon <em>npm run build</em> webpack bundlaa koodin. Tuloksena on hakemistoon <i>build</i> sijoitettava tiedosto <i>main.js</i>:</p>\n<picture><img src=\"/static/c4ea9e1c8a5344fd9f6aa81db2b04f54/14be6/19.png\" srcset=\"/static/c4ea9e1c8a5344fd9f6aa81db2b04f54/4cce7/19.png 200w,\n/static/c4ea9e1c8a5344fd9f6aa81db2b04f54/bae5f/19.png 400w,\n/static/c4ea9e1c8a5344fd9f6aa81db2b04f54/14be6/19.png 800w,\n/static/c4ea9e1c8a5344fd9f6aa81db2b04f54/1b35a/19.png 1200w,\n/static/c4ea9e1c8a5344fd9f6aa81db2b04f54/43b66/19.png 1268w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Tiedostossa on paljon erikoisen näköistä tavaraa. Lopussa on mukana myös kirjoittamamme koodi.</p>\n<p>Lisätään hakemistoon <i>src</i> tiedosto <i>App.js</i> ja sille sisältö</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Importataan ja käytetään modulia <i>App</i> tiedostossa <i>index.js</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> name <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Kun nyt suoritamme bundlauksen komennolla <em>npm run build</em> huomaamme webpackin havainneen molemmat tiedostot:</p>\n<picture><img src=\"/static/ae033529d992758a7a748a8a2d4ffc5f/14be6/20.png\" srcset=\"/static/ae033529d992758a7a748a8a2d4ffc5f/4cce7/20.png 200w,\n/static/ae033529d992758a7a748a8a2d4ffc5f/bae5f/20.png 400w,\n/static/ae033529d992758a7a748a8a2d4ffc5f/14be6/20.png 800w,\n/static/ae033529d992758a7a748a8a2d4ffc5f/1b35a/20.png 1200w,\n/static/ae033529d992758a7a748a8a2d4ffc5f/b9227/20.png 1266w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kirjoittamamme koodi löytyy erittäin kryptisesti muotoiltuna bundlen lopussa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/***/</span> <span class=\"token string\">\"./src/App.js\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">/*!********************!*\\\n  !*** ./src/App.js ***!\n  \\********************/</span>\n<span class=\"token comment\">/*! exports provided: default */</span>\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> __webpack_exports__<span class=\"token punctuation\">,</span> __webpack_require__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__webpack_require__.r(__webpack_exports__);\\nconst App = () => {\\n  return null\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (App);\\n\\n//# sourceURL=webpack:///./src/App.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token string\">\"./src/index.js\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/</span>\n<span class=\"token comment\">/*! no exports provided */</span>\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> __webpack_exports__<span class=\"token punctuation\">,</span> __webpack_require__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App */ \\\"./src/App.js\\\");\\n\\n\\nconst hello = name => {\\n  console.log(`hello ${name}`)\\n};\\n\\nObject(_App__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])()\\n\\n//# sourceURL=webpack:///./src/index.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Konfiguraatiotiedosto</h3>\n<p>Katsotaan nyt tarkemmin konfiguraation <i>webpack.config.js</i> tämänhetkistä sisältöä:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'main.js'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Konfiguraatio on Javascriptia ja tapahtuu eksporttaamalla määrittelyt sisältävä olio Noden moduulisyntaksilla.</p>\n<p>Tämän hetkinen minimaalinen määrittely on aika ilmeinen, kenttä <a href=\"https://webpack.js.org/concepts/#entry\">entry</a> kertoo sen tiedoston, mistä bundlaus aloitetaan.</p>\n<p>Kenttä <a href=\"https://webpack.js.org/concepts/#output\">output</a> taas kertoo minne muodostettu bundle sijoitetaan. Kohdehakemisto täytyy määritellä <i>absoluuttisena polkuna</i>, se taas onnistuu helposti <a href=\"https://nodejs.org/docs/latest-v8.x/api/path.html#path_path_resolve_paths\">path.resolve</a>-metodilla. <a href=\"https://nodejs.org/docs/latest/api/globals.html#globals_dirname\">__dirname</a> on Noden globaali muuttuja, joka viittaa nykyiseen hakemistoon.</p>\n<h3>Reactin bundlaaminen</h3>\n<p>Muutetaan sitten sovellus minimalistiseksi React-sovellukseksi. Asennetaan tarvittavat kirjastot</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save react react<span class=\"token operator\">-</span>dom</code></pre></div>\n<p>Liitetään tavanomaiset loitsut tiedostoon <i>index.js</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>ja muutetaan <i>App.js</i> muotoon</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>hello webpack<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Tarvitsemme sovellukselle myös \"pääsivuna\" toimivan tiedoston <i>build/index.html</i> joka lataa <i>script</i>-tagin avulla bundlatun Javascriptin:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>React App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Kun bundlaamme sovelluksen, törmäämme kuitenkin ongelmaan</p>\n<picture><img src=\"/static/38ca80de4d0bec110883af620a844e20/14be6/21.png\" srcset=\"/static/38ca80de4d0bec110883af620a844e20/4cce7/21.png 200w,\n/static/38ca80de4d0bec110883af620a844e20/bae5f/21.png 400w,\n/static/38ca80de4d0bec110883af620a844e20/14be6/21.png 800w,\n/static/38ca80de4d0bec110883af620a844e20/1b35a/21.png 1200w,\n/static/38ca80de4d0bec110883af620a844e20/87e0a/21.png 1264w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Loaderit</h3>\n<p>Webpack mainitsee että saatamme tarvita <i>loaderin</i> tiedoston <i>App.js</i> käsittelyyn. Webpack ymmärtää itse vain Javascriptia ja vaikka se saattaa meiltä matkan varrella olla unohtunutkin, käytämme Reactia ohjelmoidessamme <a href=\"https://facebook.github.io/jsx/\">JSX</a>:ää näkymien renderöintiin, eli esim. seuraava</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>hello webpack<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>ei ole \"normaalia\" Javascriptia, vaan JSX:n tarjoama syntaktinen oikotie määritellä <i>div</i>-tagiä vastaava React-elementti.</p>\n<p><a href=\"https://webpack.js.org/concepts/loaders/\">Loaderien</a> avulla on mahdollista kertoa webpackille miten tiedostot tulee käsitellä ennen niiden bundlausta.</p>\n<p>Määritellään projektiimme Reactin käyttämän JSX:n normaaliksi Javascriptiksi muuntava loaderi:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n        loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n        query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Loaderit määritellään kentän <i>module</i> alle sijoitettavaan taulukkoon <i>rules</i>.</p>\n<p>Yksittäisen loaderin määrittely on kolmiosainen:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kenttä <i>test</i> määrittelee että käsitellään <i>.js</i>-päätteisiä tiedostoja, <i>loader</i> kertoo että käsittely tapahtuu <a href=\"https://github.com/babel/babel-loader\">babel-loader</a>:illa. Kenttä <i>query</i> taas antaa loaderille sen toimintaa ohjaavia parametreja.</p>\n<p>Asennetaan loader ja sen tarvitsemat kirjastot <i>kehitysaikaiseksi riippuvuudeksi</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm i @babel<span class=\"token operator\">/</span>core babel<span class=\"token operator\">-</span>loader @babel<span class=\"token operator\">/</span>preset<span class=\"token operator\">-</span>react <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>Nyt bundlaus onnistuu.</p>\n<p>Jos katsomme bundlattua koodia ja editoimme hieman koodin ulkoasua, huomaamme, että komponentti <i>App</i> on muuttunut muotoon</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  react__WEBPACK_IMPORTED_MODULE_0___default<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'hello webpack'</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>Eli JSX-syntaksin sijaan komponentit luodaan pelkällä Javascriptilla käyttäen Reactin funktiota <a href=\"https://reactjs.org/docs/react-without-jsx.html\">createElement</a>.</p>\n<p>Sovellusta voi nyt kokeilla avaamalla tiedoston <i>build/index.html</i>  selaimen <i>open file</i> -toiminnolla:</p>\n<picture><img src=\"/static/8ea4fcb4865031a1f62babc133bdb1bb/14be6/22.png\" srcset=\"/static/8ea4fcb4865031a1f62babc133bdb1bb/4cce7/22.png 200w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/bae5f/22.png 400w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/14be6/22.png 800w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/1b35a/22.png 1200w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/e74b1/22.png 1416w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Tässä on jo melkein kaikki mitä tarvitsemme React-sovelluskehitykseen.</p>\n<h3>Transpilaus</h3>\n<p>Prosessista, joka muuttaa Javascriptia muodosta toiseen käytetään englanninkielistä termiä <a href=\"https://en.wiktionary.org/wiki/transpile\">transpiling</a>, joka taas on termi, joka viittaa koodin kääntämiseen (compile) sitä muuntamalla (transform). Suomenkielisen termin puuttuessa käytämme prosessista tällä kurssilla nimitystä <i>transpilaus</i>.</p>\n<p>Edellisen luvun konfiguraation avulla siis <i>transpiloimme</i> JSX:ää sisältävän Javascriptin normaaliksi Javascriptiksi tämän hetken johtavan työkalun <a href=\"https://babeljs.io/\">babelin</a> avulla.</p>\n<p>Kuten osassa 1 jo mainittiin, läheskään kaikki selaimet eivät vielä osaa Javascriptin uusimpien versioiden ES6:n ja ES7:n ominaisuuksia ja tämän takia koodi yleensä transpiloidaan käyttämään vanhempaa Javascript-syntaksia ES5:ttä.</p>\n<p>Babelin suorittama transpilointiprosessi määritellään <i>pluginien</i> avulla. Käytännössä useimmiten käytetään valmiita <a href=\"https://babeljs.io/docs/plugins/\">presetejä</a>, eli useamman sopivan pluginin joukkoja.</p>\n<p>Tällä hetkellä sovelluksemme transpiloinnissa käytetään presetiä <a href=\"https://babeljs.io/docs/plugins/preset-react/\">@babel/preset-react</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Otetaan käyttöön preset <a href=\"https://babeljs.io/docs/plugins/preset-env/\">@babel/preset-env</a>, joka sisältää kaiken hyödyllisen, minkä avulla uusimman standardin mukainen koodi saadaan transpiloitua ES5-standardin mukaiseksi koodiksi:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Preset asennetaan komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install @babel<span class=\"token operator\">/</span>preset<span class=\"token operator\">-</span>env<span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>Kun nyt transpiloimme koodin, muuttuu se vanhan koulukunnan Javascriptiksi. Komponentin <i>App</i> määrittely näyttää seuraavalta:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> _react2<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello webpack'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Muuttujan määrittely tapahtuu avainsanan <em>var</em> avulla, sillä ES5 ei tunne avainsanaa <em>const</em>. Myöskään nuolifunktiot eivät ole käytössä, joten funktiomäärittely käyttää avainsanaa <em>function</em>.</p>\n<h3>CSS</h3>\n<p>Lisätään sovellukseemme hieman CSS:ää. Tehdään tiedosto <i>src/index.css</i></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #dee8e4<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Määritellään tyyli käytettäväksi komponentissa <i>App</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    hello webpack\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>ja importataan se tiedostossa <i>index.js</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span></code></pre></div>\n<p>Transpilointi hajoaa</p>\n<picture><img src=\"/static/1649a2a54abebd38a025fb11542ad0cf/14be6/23.png\" srcset=\"/static/1649a2a54abebd38a025fb11542ad0cf/4cce7/23.png 200w,\n/static/1649a2a54abebd38a025fb11542ad0cf/bae5f/23.png 400w,\n/static/1649a2a54abebd38a025fb11542ad0cf/14be6/23.png 800w,\n/static/1649a2a54abebd38a025fb11542ad0cf/1b35a/23.png 1200w,\n/static/1649a2a54abebd38a025fb11542ad0cf/0a4e7/23.png 1276w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>CSS:ää varten onkin otettava käyttöön <a href=\"https://webpack.js.org/loaders/css-loader/\">css</a>- ja <a href=\"https://webpack.js.org/loaders/style-loader/\">style</a>-loaderit:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n      query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n      loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://webpack.js.org/loaders/css-loader/\">css-loaderin</a> tehtävänä on ladata <em>CSS</em>-tiedostot, ja <a href=\"https://webpack.js.org/loaders/style-loader/\">style-loader</a> generoi koodiin CSS:t sisältävän <em>style</em>-elementin.</p>\n<p>Näin konfiguroituna CSS-määrittelyt sisällytetään sovelluksen Javascriptin sisältävään tiedostoon <i>main.js</i>. Sovelluksen päätiedostossa <em>index.html</em> ei siis ole tarvetta erikseen ladata CSS:ää.</p>\n<p>CSS voidaan tarpeen vaatiessa myös generoida omaan tiedostoonsa esim. <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin\">mini-css-extract-pluginin</a> avulla.</p>\n<p>Kun loaderit asennetaan</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install style<span class=\"token operator\">-</span>loader css<span class=\"token operator\">-</span>loader <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>bundlaus toimii taas ja sovellus saa uudet tyylit.</p>\n<h3>Webpack-dev-server</h3>\n<p>Sovelluskehitys onnistuu jo, mutta development workflow on suorastaan hirveä (alkaa jo muistuttaa Javalla tapahtuvaa sovelluskehitystä...), muutosten jälkeen koodin on bundlattava ja selain uudelleenladattava jos haluamme testata koodia.</p>\n<p>Ratkaisun tarjoaa <a href=\"https://webpack.js.org/guides/development/#using-webpack-dev-server\">webpack-dev-server</a>. Asennetaan se komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>dev<span class=\"token operator\">-</span>server</code></pre></div>\n<p>Määritellään dev-serverin käynnistävä npm-skripti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webpack-dev-server --mode=development\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lisätään tiedostoon <i>webpack.config.js</i> kenttä <em>devServer</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    contentBase<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    compress<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Komento <em>npm start</em> käynnistää nyt dev-serverin porttiin, eli sovelluskehitys tapahtuu avaamalla tuttuun tapaan selain osoitteeseen <a href=\"http://localhost:3000\">http://localhost:3000</a>. Kun teemme koodiin muutoksia, reloadaa selain automaattisesti itsensä.</p>\n<p>Päivitysprosessi on nopea, dev-serveriä käytettäessä webpack ei bundlaa koodia normaaliin tapaan tiedostoksi <i>main.js</i>, bundlauksen tuotos on olemassa ainoastaan keskusmuistissa.</p>\n<p>Laajennetaan koodia muuttamalla komponentin <i>App</i> määrittelyä seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      counter<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>hello webpack <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter<span class=\"token punctuation\">}</span> clicks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>click<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kannattaa huomata, että virheviestit eivät renderöidy selaimeen kuten create-react-app:illa tehdyissä sovelluksissa, eli on seurattava tarkasti konsolia:</p>\n<picture><img src=\"/static/5fc608cdd8114f98fa7c04cc38ca024e/14be6/5.png\" srcset=\"/static/5fc608cdd8114f98fa7c04cc38ca024e/4cce7/5.png 200w,\n/static/5fc608cdd8114f98fa7c04cc38ca024e/bae5f/5.png 400w,\n/static/5fc608cdd8114f98fa7c04cc38ca024e/14be6/5.png 800w,\n/static/5fc608cdd8114f98fa7c04cc38ca024e/1b35a/5.png 1200w,\n/static/5fc608cdd8114f98fa7c04cc38ca024e/cd43c/5.png 1536w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Sovellus toimii hyvin ja kehitys on melko sujuvaa.</p>\n<h3>Sourcemappaus</h3>\n<p>Erotetaan napin klikkauksenkäsittelijä omaksi funktioksi:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      counter<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>hello webpack <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter<span class=\"token punctuation\">}</span> clicks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>click<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sovellus ei enää toimi, ja konsoli kertoo virheestä</p>\n<picture><img src=\"/static/0e74ac54a4a53db38281a9a4204f648d/14be6/6.png\" srcset=\"/static/0e74ac54a4a53db38281a9a4204f648d/4cce7/6.png 200w,\n/static/0e74ac54a4a53db38281a9a4204f648d/bae5f/6.png 400w,\n/static/0e74ac54a4a53db38281a9a4204f648d/14be6/6.png 800w,\n/static/0e74ac54a4a53db38281a9a4204f648d/1b35a/6.png 1200w,\n/static/0e74ac54a4a53db38281a9a4204f648d/ea804/6.png 1488w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Tiedämme tietenkin nyt että virhe on metodissa onClick, mutta jos olisi kyse suuremmasta sovelluksesta, on virheilmoitus sikäli hyvin ikävä, että sen ilmoittama paikka:</p>\n<pre>\nApp.js:38 Uncaught TypeError: Cannot read property 'setState' of undefined\n    at onClick (App.js:38)\n</pre>\n<p>ei vastaa alkuperäisen koodin virheen sijaintia. Jos klikkaamme virheilmoitusta, huomaamme, että näytettävä koodi on jotain ihan muuta kuin kirjoittamamme koodi:</p>\n<picture><img src=\"/static/049b912cf174542f1b7c79f34aeb7f6a/14be6/6a.png\" srcset=\"/static/049b912cf174542f1b7c79f34aeb7f6a/4cce7/6a.png 200w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/bae5f/6a.png 400w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/14be6/6a.png 800w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/1b35a/6a.png 1200w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/9ee03/6a.png 1600w,\n/static/049b912cf174542f1b7c79f34aeb7f6a/ee155/6a.png 1764w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Haluamme tietenkin, että virheilmoitusten yhteydessä näytetään kirjoittamamme koodi.</p>\n<p>Korjaus on onneksi hyvin helppo, pyydetään webpackia generoimaan bundlelle ns. <a href=\"https://webpack.js.org/configuration/devtool/\">source map</a>, jonka avulla bundlea suoritettaessa tapahtuva virhe on mahdollista <em>mäpätä</em> alkuperäisen koodin vastaavaan kohtaan.</p>\n<p>Source map saadaan generoitua lisäämällä konfiguraatioon kenttä <em>devtool</em> ja sen arvoksi 'source-map':</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Konfiguraatioiden muuttuessa webpack tulee käynnistää uudelleen, on tosin mahdollista konfiguroida webpack tarkkailemaan konfiguraatioiden muutoksia, mutta emme tee sitä.</p>\n<p>Nyt virheilmoitus on hyvä</p>\n<picture><img src=\"/static/0476f60ccac3298b85b6ab007eea200b/14be6/7.png\" srcset=\"/static/0476f60ccac3298b85b6ab007eea200b/4cce7/7.png 200w,\n/static/0476f60ccac3298b85b6ab007eea200b/bae5f/7.png 400w,\n/static/0476f60ccac3298b85b6ab007eea200b/14be6/7.png 800w,\n/static/0476f60ccac3298b85b6ab007eea200b/1b35a/7.png 1200w,\n/static/0476f60ccac3298b85b6ab007eea200b/9ee03/7.png 1600w,\n/static/0476f60ccac3298b85b6ab007eea200b/cac2e/7.png 1930w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Source mapin käyttö mahdollistaa myös chromen debuggerin luontevan käytön</p>\n<picture><img src=\"/static/51090b992f6d4d497136b9edf4b17d9a/14be6/8.png\" srcset=\"/static/51090b992f6d4d497136b9edf4b17d9a/4cce7/8.png 200w,\n/static/51090b992f6d4d497136b9edf4b17d9a/bae5f/8.png 400w,\n/static/51090b992f6d4d497136b9edf4b17d9a/14be6/8.png 800w,\n/static/51090b992f6d4d497136b9edf4b17d9a/1b35a/8.png 1200w,\n/static/51090b992f6d4d497136b9edf4b17d9a/9ee03/8.png 1600w,\n/static/51090b992f6d4d497136b9edf4b17d9a/1888a/8.png 1936w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kyseinen virhe on siis jo <a href=\"/osa1#metodien-k%C3%A4ytt%C3%B6-ja-this\">osasta 1</a> tuttu this:in kadottaminen. Korjataan ongelma määrittelemällä metodi uudelleen meille jo kovin tutulla syntaksilla:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Tästä aiheutuu kuitenkin virheilmoitus</p>\n<picture><img src=\"/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/14be6/9.png\" srcset=\"/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/4cce7/9.png 200w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/bae5f/9.png 400w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/14be6/9.png 800w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/1b35a/9.png 1200w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/9ee03/9.png 1600w,\n/static/7f7dfeaa4c6c64ce9566d7d08f18fc61/66f7e/9.png 1866w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Virhe johtuu siitä, että käyttämämme syntaksi ei ole vielä mukana Javascriptin uusimmassa standardissa ES7. Saamme syntaksin käyttöön asentamalla <a href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">transform-class-properties</a>-pluginin komennolla</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install babel<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>transform<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span>properties <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>ja kehottamalla <em>babel-loader</em>:ia käyttämään pluginia:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-plugin-transform-class-properties'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Koodin minifiointi</h3>\n<p>Kun sovellus viedään tuotantoon, on siis käytössä tiedostoon <i>main.js</i> webpackin generoima koodi. Vaikka sovelluksemme sisältää omaa koodia vain muutaman rivin, on tiedoston <i>main.js</i> koko 557450 tavua, sillä se sisältää myös kaiken React-kirjaston koodin. Tiedoston koollahan on sikäli väliä, että selain joutuu lataamaan tiedoston kun sovellusta aletaan käyttämään. Nopeilla internetyhteyksillä 557450 tavua ei sinänsä ole ongelma, mutta jos mukaan sisällytetään enemmän kirjastoja, alkaa sovelluksen lataaminen pikkuhiljaa hidastua etenkin mobiilikäytössä.</p>\n<p>Jos tiedoston sisältöä tarkastelee, huomaa että sitä voisi optimoida huomattavasti koon suhteen esim. poistamalla kommentit. Tiedostoa ei kuitenkaan kannata lähteä optimoimaan käsin, sillä tarkoitusta varten on olemassa monia työkaluja.</p>\n<p>Javascript-tiedostojen optimointiprosessista käytetään nimitystä <em>minifiointi</em>. Alan johtava työkalu tällä hetkellä lienee <a href=\"http://lisperator.net/uglifyjs/\">UglifyJS</a>.</p>\n<p>Webpackin versiosta 4 alkaen pluginia ei ole tarvinnut konfiguroida erikseen, riittää että muutetaan tiedoston <em>package.json</em> määrittelyä siten, että koodin bundlaus tapahtuu <em>production</em>-moodissa:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-osa7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-dev-server --mode=development\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    // ...\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    // ...\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kun sovellus bundlataan uudelleen, pienenee tuloksena oleva <i>main.js</i> mukavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span>  <span class=\"token number\">1</span> mluukkai  <span class=\"token number\">984178727</span>  <span class=\"token number\">101944</span> Mar  <span class=\"token number\">3</span> <span class=\"token number\">21</span><span class=\"token punctuation\">:</span><span class=\"token number\">29</span> main<span class=\"token punctuation\">.</span>js</code></pre></div>\n<p>Minifioinnin lopputulos on kuin vanhan liiton c-koodia, kommentit ja jopa turhat välilyönnit ja rivinvaihdot on poistettu ja muuttujanimet ovat yksikirjaimisia:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> e<span class=\"token operator\">=</span><span class=\"token function\">u</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=</span>c<span class=\"token punctuation\">,</span>c<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>f<span class=\"token operator\">&lt;</span>t<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>s<span class=\"token operator\">&amp;&amp;</span>s<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>f<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>t<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span>s<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>o<span class=\"token operator\">===</span>clearTimeout<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o<span class=\"token operator\">===</span>l<span class=\"token operator\">||</span><span class=\"token operator\">!</span>o<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>clearTimeout<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> o<span class=\"token operator\">=</span>clearTimeout<span class=\"token punctuation\">,</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">nextTick</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Sovelluskehitys- ja tuotantokonfiguraatio</h3>\n<p>Lisätään sovellukselle backend. Käytetään jo tutuksi käynyttä muistiinpanoja tarjoavaa palvelua.</p>\n<p>Talletetaan seuraava sisältö tiedostoon <em>db.json</em></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"notes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"HTML on helppoa\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b8481bb01f9cb00ccb4a9\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mongo osaa tallettaa oliot\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b920a61e8c8d3f484bdd0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tarkoituksena on konfiguroida sovellus webpackin avulla siten, että paikallisesti sovellusta kehitettäessä käytetään backendina portissa 3001 toimivaa json-serveriä.</p>\n<p>Bundlattu tiedosto laitetaan sitten käyttämään todellista, osoitteessa <a href=\"https://radiant-plateau-25399.herokuapp.com/api/notes\">https://radiant-plateau-25399.herokuapp.com/api/notes</a> olevaa backendia.</p>\n<p>Asennetaan <em>axios</em>, käynnistetään json-server ja muokataan komponenttia <i>App</i> seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      counter<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      noteCount<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:3001/notes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> noteCount<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>hello webpack <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter<span class=\"token punctuation\">}</span> clicks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>click<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>noteCount<span class=\"token punctuation\">}</span> notes <span class=\"token keyword\">in</span> server<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Koodissa on nyt kovakoodattuna sovelluskehityksessä käytettävän palvelimen osoite. Miten saamme osoitteen hallitusti muutettua osoittamaan internetissä olevaan backendiin bundlatessamme koodin?</p>\n<p>Muutetaan <i>webpack.config.js</i> oliosta <a href=\"https://webpack.js.org/configuration/configuration-types/#exporting-a-function\">funktioksi</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Määrittely on muuten täysin sama, mutta aiemmin eksportattu olio on nyt määritellyn funktion paluuarvo. Funktio saa parametrit <em>env</em> ja <em>argv</em>, joista jälkimmäisen avulla saamme selville npm-skriptissä määritellyn <em>moden</em>.</p>\n<p>Webpackin <a href=\"https://webpack.js.org/plugins/define-plugin/\">DefinePlugin</a>:in avulla voimme määritellä globaaleja <em>vakioarvoja</em>, joita on mahdollista käyttää bundlattavassa koodissa. Määritellään nyt vakio <em>BACKEND</em>URL_, joka saa eri arvon riippuen siitä ollaanko kehitysympäristössä vai tehdäänkö tuotantoon sopivaa bundlea:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'argv'</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> backend_url <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n    <span class=\"token operator\">?</span> <span class=\"token string\">'https://radiant-plateau-25399.herokuapp.com/api/notes'</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:3001/notes'</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      contentBase<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      compress<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>backend_url<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Määriteltyä vakiota käytetään koodissa seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>noteCount<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos kehitys- ja tuotantokonfiguraatio eriytyvät paljon, saattaa olla hyvä idea <a href=\"https://webpack.js.org/guides/production/\">eriyttää konfiguraatiot</a> omiin tiedostoihinsa.</p>\n<p>Tuotantoversiota eli bundlattua sovellusta on mahdollista kokeilla lokaalisti suorittamalla komento</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npx <span class=\"token keyword\">static</span><span class=\"token operator\">-</span>server</code></pre></div>\n<p>hakemistossa <i>build</i> jolloin sovellus käynnistyy oletusarvoisesti osoitteeseen <a href=\"http://localhost:9080\">http://localhost:9080</a>.</p>\n<h3>Polyfill</h3>\n<p>Sovelluksemme on valmis ja toimii muiden selaimien kohtuullisen uusilla versiolla, mutta Internet Explorerilla sovellus ei toimi. Syynä tähän on se, että <em>axiosin</em> ansiosta koodissa käytetään <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promiseja</a>, mikään IE:n versio ei kuitenkaan niitä tue:</p>\n<picture><img src=\"/static/c35b13a507393cc2c137aefd928d7e77/14be6/13.png\" srcset=\"/static/c35b13a507393cc2c137aefd928d7e77/4cce7/13.png 200w,\n/static/c35b13a507393cc2c137aefd928d7e77/bae5f/13.png 400w,\n/static/c35b13a507393cc2c137aefd928d7e77/14be6/13.png 800w,\n/static/c35b13a507393cc2c137aefd928d7e77/1b35a/13.png 1200w,\n/static/c35b13a507393cc2c137aefd928d7e77/8e7a2/13.png 1584w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>On paljon muutakin standardissa määriteltyjä asioita, joita IE ei tue, esim. niinkin harmiton komento kuin taulukoiden <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">find</a> ylittää IE:n kyvyt:</p>\n<picture><img src=\"/static/71ecbdcc237ac95419fc4e8dde2aa813/14be6/14.png\" srcset=\"/static/71ecbdcc237ac95419fc4e8dde2aa813/4cce7/14.png 200w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/bae5f/14.png 400w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/14be6/14.png 800w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/1b35a/14.png 1200w,\n/static/71ecbdcc237ac95419fc4e8dde2aa813/f0a3f/14.png 1586w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Tälläisessä tilanteessa normaali koodin transpilointi ei auta, sillä transpiloinnissa koodia käännetään uudemmasta Javascript-syntaksista vanhempaan, selaimien paremmin tukemaan syntaksiin. Promiset ovat syntaktisesti täysin IE:n ymmärrettävissä, IE:ltä vain puuttuu toteutus promisesta, samoin on tilanne taulukoiden suhteen, IE:llä taulukoiden <em>find</em> on arvoltaan <em>undefined</em>.</p>\n<p>Jos haluamme sovelluksen IE-yhteensopivaksi, tarvitsemme <a href=\"https://remysharp.com/2010/10/08/what-is-a-polyfill\">polyfilliä</a>, eli koodia, joka lisää puuttuvan toiminnallisuuden vanhempiin selaimiin.</p>\n<p>Polyfillaus on mahdollista hoitaa <a href=\"https://babeljs.io/docs/usage/polyfill/\">Webpackin ja Babelin avulla</a> tai asentamalla yksi monista tarjolla olevista polyfill-kirjastoista.</p>\n<p>Esim. kirjaston <a href=\"https://www.npmjs.com/package/promise-polyfill\">promise-polyfill</a> tarjoaman polyfillin käyttö on todella helppoa, koodiin lisätään seuraava:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PromisePolyfill <span class=\"token keyword\">from</span> <span class=\"token string\">'promise-polyfill'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>Promise<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>Promise <span class=\"token operator\">=</span> PromisePolyfill<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos globaalia <em>Promise</em>-olioa ei ole olemassa, eli selain ei tue promiseja, sijoitetaan polyfillattu promise globaaliin muuttujaan. Jos polyfillattu promise on hyvin toteutettu, muun koodin pitäisi toimia ilman ongelmia.</p>\n<p>Kattavahko lista olemassaolevista polyfilleistä löytyy <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\">täältä</a>.</p>\n<p>Selaimien yhteensopivuus käytettävien API:en suhteen kannattaakin tarkistaa esim. <a href=\"https://caniuse.com\">https://caniuse.com</a>-sivustolta tai <a href=\"https://developer.mozilla.org/en-US/\">Mozillan sivuilta</a>.</p>\n<h3>Eject</h3>\n<p>Create-react-app käyttää taustalla webpackia. Jos peruskonfiguraatio ei riitä, on projektit mahdollista <a href=\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#npm-run-eject\">ejektoida</a>, jolloin kaikki konepellin alla oleva magia häviää, ja konfiguraatiot tallettuvat hakemistoon <em>config</em> ja muokattuun <em>package.json</em>-tiedostoon.</p>\n<p>Jos create-react-app:illa tehdyn sovelluksen ejektoi, paluuta ei ole, sen jälkeen kaikesta konfiguroinnista on huolehdittava itse. Konfiguraatiot eivät ole triviaaleimmasta päästä ja create-react-appin ja ejektoinnin sijaan parempi vaihtoehto saattaa joskus olla tehdä itse koko webpack-konfiguraatio.</p>\n<p>Ejektoidun sovelluksen konfiguraatioiden lukeminen on suositeltavaa ja sangen opettavaista!</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/part-7-e86c21108367fe9d9c833e8905547e9c.svg"},"part":7,"letter":"c"}}},"pageContext":{"part":7,"letter":"c"}}