{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Element_Element__WEBPACK_IMPORTED_MODULE_1__","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","NotFoundPage","a","createElement","title","className","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_images_hgin_yliopisto_png__WEBPACK_IMPORTED_MODULE_2__","_images_hgin_yliopisto_png__WEBPACK_IMPORTED_MODULE_2___default","_images_houston_logo_png__WEBPACK_IMPORTED_MODULE_3__","_images_houston_logo_png__WEBPACK_IMPORTED_MODULE_3___default","_Image_Image__WEBPACK_IMPORTED_MODULE_4__","_Element_Element__WEBPACK_IMPORTED_MODULE_5__","Footer","id","style","justifyContent","display","href","width","src","yliopisto","houston","flex","alignItems","to","marginLeft","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-404-js-e7f6dedb14981e183827.js","sourcesContent":["import React from 'react';\n\nimport Element from '../components/Element/Element';\nimport Footer from '../components/Footer/Footer';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n\n    <Element className=\"container spacing--large spacing--after\">\n      <h1>NOT FOUND</h1>\n\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Element>\n\n    <Footer />\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport yliopisto from '../../images/hgin_yliopisto.png';\nimport houston from '../../images/houston_logo.png';\nimport { Image } from './../Image/Image';\nimport Element from '../Element/Element';\n\nconst Footer = () => (\n  <Element\n    id=\"footer\"\n    className=\"container spacing--after\"\n    style={{ justifyContent: 'space-between' }}\n  >\n    <div\n      className=\"col-4\"\n      style={{ display: 'flex', justifyContent: 'space-between' }}\n    >\n      <a\n        href=\"https://www.helsinki.fi/\"\n        className=\"image--large image--contain\"\n        style={{ width: '100%' }}\n      >\n        <Image className=\"image--large image--contain\" src={yliopisto} />\n      </a>\n\n      <a\n        href=\"https://www.houston-inc.com/\"\n        className=\"push-right-2\"\n        style={{ width: '100%' }}\n      >\n        <Image className=\"image--large image--contain\" src={houston} />\n      </a>\n    </div>\n\n    <Element\n      flex\n      className=\"col-2 order-1--mobile\"\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Link\n        to=\"/about\"\n        className=\"nav-item-hover\"\n        style={{ marginLeft: '4.5rem' }}\n      >\n        KURSSISTA\n      </Link>\n      <Link to=\"/faq\" className=\"nav-item-hover\">\n        FAQs\n      </Link>\n    </Element>\n  </Element>\n);\n\nexport default Footer;\n","import { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}